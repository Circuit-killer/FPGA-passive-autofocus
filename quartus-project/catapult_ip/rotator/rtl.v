// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   fyq14@EEWS104A-014
//  Generated date: Fri May 15 11:56:48 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    rotator_core
// ------------------------------------------------------------------


module rotator_core (
  clk, en, arst_n, enablerefocus_rsc_mgc_in_wire_d, slow_rsc_mgc_in_wire_d, start_rsc_mgc_in_wire_d,
      stop_rsc_mgc_in_wire_d, sum_rsc_mgc_in_wire_d, best_edge_rsc_mgc_out_stdreg_d,
      motor_state_rsc_mgc_out_stdreg_d, cur_state_rsc_mgc_out_stdreg_d, timer_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input enablerefocus_rsc_mgc_in_wire_d;
  input slow_rsc_mgc_in_wire_d;
  input start_rsc_mgc_in_wire_d;
  input stop_rsc_mgc_in_wire_d;
  input [29:0] sum_rsc_mgc_in_wire_d;
  output [29:0] best_edge_rsc_mgc_out_stdreg_d;
  reg [29:0] best_edge_rsc_mgc_out_stdreg_d;
  output [1:0] motor_state_rsc_mgc_out_stdreg_d;
  reg [1:0] motor_state_rsc_mgc_out_stdreg_d;
  output [2:0] cur_state_rsc_mgc_out_stdreg_d;
  reg [2:0] cur_state_rsc_mgc_out_stdreg_d;
  output [29:0] timer_rsc_mgc_out_stdreg_d;
  reg [29:0] timer_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  wire else_else_nor_tmp;
  wire or_tmp_2;
  wire or_tmp_5;
  wire mux_tmp_1;
  wire mux_tmp_2;
  wire nor_tmp_4;
  wire or_tmp_7;
  wire or_tmp_10;
  wire mux_tmp_5;
  wire or_tmp_19;
  wire mux_tmp_8;
  wire mux_tmp_9;
  wire or_tmp_27;
  wire mux_tmp_19;
  wire mux_tmp_33;
  wire mux_tmp_35;
  wire or_tmp_37;
  wire mux_tmp_36;
  wire mux_tmp_39;
  wire mux_tmp_41;
  wire mux_tmp_42;
  wire mux_tmp_43;
  wire mux_tmp_45;
  wire mux_tmp_48;
  wire mux_tmp_54;
  wire mux_tmp_58;
  wire mux_tmp_64;
  wire or_tmp_44;
  wire mux_tmp_70;
  wire and_tmp;
  wire mux_tmp_71;
  wire or_tmp_49;
  wire or_tmp_51;
  wire mux_tmp_72;
  wire mux_tmp_73;
  wire or_tmp_53;
  wire or_tmp_54;
  wire mux_tmp_75;
  wire or_tmp_55;
  wire or_tmp_56;
  wire mux_tmp_78;
  wire or_tmp_59;
  wire or_tmp_62;
  wire mux_tmp_85;
  wire or_tmp_65;
  wire or_tmp_66;
  wire mux_tmp_89;
  wire mux_tmp_90;
  wire or_tmp_72;
  wire or_tmp_74;
  wire or_tmp_75;
  wire not_tmp_16;
  wire or_tmp_78;
  wire or_tmp_79;
  wire mux_tmp_101;
  wire or_tmp_89;
  wire or_tmp_90;
  wire or_tmp_91;
  wire mux_tmp_108;
  wire mux_tmp_109;
  wire nor_tmp_21;
  wire nor_tmp_23;
  wire not_tmp_23;
  wire mux_tmp_119;
  wire nor_tmp_24;
  wire mux_tmp_124;
  wire or_tmp_106;
  wire nand_tmp_1;
  wire or_tmp_110;
  wire mux_tmp_132;
  wire nor_tmp_26;
  wire and_tmp_3;
  wire mux_tmp_144;
  wire and_tmp_5;
  wire mux_tmp_148;
  wire mux_tmp_155;
  wire or_tmp_119;
  wire mux_tmp_159;
  wire mux_tmp_160;
  wire mux_tmp_163;
  wire mux_tmp_167;
  wire or_dcpl_2;
  wire or_dcpl_3;
  wire or_tmp_289;
  wire or_tmp_290;
  wire or_tmp_291;
  wire and_tmp_18;
  wire mux_tmp_394;
  wire or_tmp_297;
  wire or_tmp_298;
  wire or_tmp_299;
  wire or_tmp_301;
  wire mux_tmp_396;
  wire or_tmp_303;
  wire or_tmp_305;
  wire mux_tmp_398;
  wire mux_tmp_400;
  wire nand_tmp_9;
  wire nand_tmp_10;
  wire nand_tmp_11;
  wire or_tmp_311;
  wire nand_tmp_13;
  wire or_tmp_314;
  wire nand_tmp_14;
  wire mux_tmp_411;
  wire or_tmp_316;
  wire mux_tmp_420;
  wire or_tmp_318;
  wire nand_tmp_15;
  wire nand_tmp_16;
  wire mux_tmp_424;
  wire mux_tmp_425;
  wire or_tmp_322;
  wire mux_tmp_429;
  wire or_tmp_325;
  wire or_tmp_326;
  wire or_tmp_327;
  wire mux_tmp_441;
  wire mux_tmp_442;
  wire or_tmp_329;
  wire or_tmp_335;
  wire mux_tmp_448;
  wire mux_tmp_453;
  wire or_tmp_340;
  wire or_tmp_341;
  wire or_tmp_344;
  wire mux_tmp_461;
  wire or_tmp_347;
  wire mux_tmp_464;
  wire mux_tmp_467;
  wire mux_tmp_474;
  wire mux_tmp_487;
  wire nor_tmp_86;
  wire nor_tmp_87;
  wire and_tmp_20;
  wire mux_tmp_495;
  wire or_tmp_360;
  wire or_tmp_361;
  wire mux_tmp_515;
  wire mux_tmp_516;
  wire mux_tmp_533;
  wire or_tmp_383;
  wire mux_tmp_545;
  wire mux_tmp_546;
  wire or_tmp_386;
  wire nor_tmp_93;
  wire mux_tmp_547;
  wire nand_tmp_26;
  wire or_tmp_390;
  wire or_tmp_392;
  wire mux_tmp_552;
  wire mux_tmp_553;
  wire not_tmp_165;
  wire nand_tmp_27;
  wire mux_tmp_554;
  wire nand_tmp_28;
  wire not_tmp_168;
  wire mux_tmp_560;
  wire mux_tmp_564;
  wire or_tmp_400;
  wire mux_tmp_572;
  wire or_tmp_402;
  wire nand_tmp_35;
  wire nand_tmp_36;
  wire mux_tmp_576;
  wire nand_tmp_38;
  wire nor_tmp_108;
  wire mux_tmp_580;
  wire or_tmp_405;
  wire or_tmp_406;
  wire or_tmp_407;
  wire mux_tmp_595;
  wire or_tmp_409;
  wire or_tmp_410;
  wire or_tmp_411;
  wire mux_tmp_606;
  wire mux_tmp_608;
  wire mux_tmp_611;
  wire or_tmp_429;
  wire or_tmp_431;
  wire mux_tmp_614;
  wire mux_tmp_615;
  wire nor_tmp_116;
  wire or_tmp_433;
  wire mux_tmp_618;
  wire mux_tmp_619;
  wire mux_tmp_622;
  wire or_tmp_437;
  wire or_tmp_440;
  wire mux_tmp_624;
  wire mux_tmp_625;
  wire or_tmp_444;
  wire nand_tmp_46;
  wire mux_tmp_632;
  wire mux_tmp_635;
  wire mux_tmp_637;
  wire mux_tmp_640;
  wire or_tmp_455;
  wire mux_tmp_661;
  wire mux_tmp_662;
  wire or_tmp_461;
  wire or_tmp_462;
  wire or_tmp_463;
  wire mux_tmp_664;
  wire or_tmp_465;
  wire mux_tmp_682;
  wire mux_tmp_685;
  wire mux_tmp_697;
  wire and_tmp_22;
  wire mux_tmp_698;
  wire nor_tmp_129;
  wire and_tmp_23;
  wire mux_tmp_701;
  wire nor_tmp_130;
  wire mux_tmp_704;
  wire mux_tmp_710;
  wire mux_tmp_711;
  wire and_tmp_25;
  wire mux_tmp_720;
  wire mux_tmp_725;
  wire mux_tmp_727;
  wire mux_tmp_729;
  wire mux_tmp_735;
  wire mux_tmp_746;
  wire mux_tmp_902;
  wire or_tmp_719;
  wire or_tmp_721;
  wire or_tmp_722;
  wire or_tmp_723;
  wire mux_tmp_1117;
  wire or_tmp_724;
  wire or_tmp_725;
  wire or_tmp_728;
  wire or_tmp_732;
  wire mux_tmp_1120;
  wire mux_tmp_1121;
  wire or_tmp_736;
  wire or_tmp_738;
  wire mux_tmp_1125;
  wire mux_tmp_1127;
  wire mux_tmp_1128;
  wire mux_tmp_1129;
  wire nor_tmp_215;
  wire nand_tmp_52;
  wire nor_tmp_217;
  wire nand_tmp_54;
  wire mux_tmp_1132;
  wire nor_tmp_219;
  wire nand_tmp_55;
  wire mux_tmp_1137;
  wire mux_tmp_1141;
  wire mux_tmp_1142;
  wire mux_tmp_1145;
  wire or_tmp_751;
  wire nand_tmp_56;
  wire nand_tmp_57;
  wire or_tmp_752;
  wire mux_tmp_1149;
  wire nand_tmp_59;
  wire mux_tmp_1152;
  wire or_tmp_756;
  wire mux_tmp_1153;
  wire mux_tmp_1155;
  wire mux_tmp_1157;
  wire mux_tmp_1161;
  wire nand_tmp_60;
  wire or_tmp_760;
  wire nand_tmp_61;
  wire mux_tmp_1175;
  wire or_tmp_764;
  wire or_tmp_765;
  wire mux_tmp_1182;
  wire mux_tmp_1186;
  wire or_tmp_773;
  wire mux_tmp_1291;
  wire mux_tmp_1294;
  wire mux_tmp_1299;
  wire mux_tmp_1301;
  wire mux_tmp_1302;
  wire mux_tmp_1303;
  wire and_tmp_59;
  wire and_tmp_61;
  wire and_tmp_62;
  wire and_tmp_63;
  wire mux_tmp_1311;
  wire or_tmp_859;
  wire mux_tmp_1318;
  wire or_tmp_862;
  wire not_tmp_380;
  wire mux_tmp_1319;
  wire mux_tmp_1322;
  wire or_tmp_871;
  wire nand_tmp_81;
  wire mux_tmp_1327;
  wire nand_tmp_82;
  wire mux_tmp_1334;
  wire or_dcpl_11;
  wire or_tmp_882;
  wire mux_tmp_1346;
  wire mux_tmp_1351;
  wire mux_tmp_1362;
  wire not_tmp_400;
  wire or_tmp_905;
  wire or_tmp_906;
  wire mux_tmp_1369;
  wire mux_tmp_1374;
  wire or_tmp_921;
  wire mux_tmp_1375;
  wire mux_tmp_1376;
  wire or_tmp_924;
  wire mux_tmp_1380;
  wire mux_tmp_1381;
  wire mux_tmp_1384;
  wire mux_tmp_1387;
  wire mux_tmp_1389;
  wire or_tmp_934;
  wire and_tmp_68;
  wire mux_tmp_1390;
  wire or_tmp_937;
  wire mux_tmp_1392;
  wire not_tmp_408;
  wire or_tmp_939;
  wire mux_tmp_1397;
  wire or_tmp_949;
  wire mux_tmp_1403;
  wire mux_tmp_1404;
  wire and_tmp_71;
  wire mux_tmp_1407;
  wire and_tmp_73;
  wire mux_tmp_1411;
  wire mux_tmp_1415;
  wire mux_tmp_1417;
  wire or_tmp_954;
  wire or_tmp_956;
  wire or_tmp_957;
  wire or_tmp_959;
  wire mux_tmp_1425;
  wire not_tmp_417;
  wire mux_tmp_1435;
  wire mux_tmp_1436;
  wire mux_tmp_1439;
  wire mux_tmp_1443;
  reg [1:0] C1_2_dfmergedata_lpi_1;
  reg [29:0] best_edgeIN_sva;
  reg [29:0] else_else_else_left_sum_1_sva;
  reg [29:0] else_else_else_right_sum_1_sva;
  reg else_else_land_lpi_1_dfm;
  reg else_else_else_case_6_else_else_else_land_lpi_1_dfm;
  reg else_land_lpi_1_dfm_2;
  reg nor_tmp_278;
  reg equal_tmp_6;
  reg equal_tmp_7;
  reg nor_dfs_1;
  reg [1:0] C1_2_dfmergedata_lpi_1_dfm_7;
  reg [29:0] sum_1_sva_1;
  reg [29:0] timerIN_sva_13;
  reg land_lpi_1_dfm_1;
  reg else_else_else_case_0_slc_svs_1;
  reg else_else_else_case_6_else_else_else_land_lpi_1_dfm_8;
  reg [13:0] else_else_else_case_0_oelse_slc_slc_slc_10_2_itm_1;
  reg else_else_else_case_0_oelse_slc_slc_slc_10_5_itm_1;
  reg [29:0] else_else_else_switch_lp_mux1h_2_itm_1;
  reg [1:0] else_else_else_case_0_if_mux_3_itm;
  reg [1:0] else_else_else_case_0_if_mux_3_itm_1;
  reg else_else_else_switch_lp_and_26_itm_1;
  reg else_else_else_switch_lp_and_32_itm_1;
  reg else_else_else_switch_lp_and_15_itm_1;
  reg else_else_or_itm_1;
  reg else_else_else_switch_lp_and_17_itm_1;
  reg else_else_else_switch_lp_and_27_itm_1;
  reg else_else_else_switch_lp_and_31_itm_1;
  reg else_else_and_1_itm_1;
  reg or_itm_1;
  reg or_5_itm_1;
  reg else_else_else_switch_lp_or_25_itm_1;
  reg main_stage_0_2;
  reg cur_stateIN_sva_sg2;
  reg cur_stateIN_sva_sg1;
  reg cur_stateIN_sva_16;
  reg else_else_nor_ssc;
  reg else_else_else_switch_lp_and_29_ssc;
  reg else_else_else_switch_lp_and_23_ssc;
  reg else_else_else_switch_lp_and_25_ssc;
  reg cur_stateIN_sva_dfm_18_sg2;
  reg cur_stateIN_sva_dfm_18_sg1;
  reg cur_stateIN_sva_dfm_25;
  wire [31:0] else_else_else_case_0_if_acc_3;
  wire [32:0] nl_else_else_else_case_0_if_acc_3;
  wire [31:0] max_1_acc_3;
  wire [32:0] nl_max_1_acc_3;
  wire else_else_and_2_m1c_1;
  wire else_else_and_3_m1c_1;
  wire else_else_else_case_5_land_lpi_1_dfm_1;
  wire else_else_and_6_m1c_1;
  wire nor_tmp_279;
  wire else_else_else_case_3_or_tmp_1;
  wire else_else_and_4_m1c_1;
  wire else_else_and_5_m1c_1;
  wire or_tmp_975;
  wire else_else_and_7_m1c_1;
  wire [29:0] best_edgeIN_sva_mx0;
  wire [29:0] absolute_mux_1_mx0w0;
  wire [30:0] nl_absolute_mux_1_mx0w0;
  wire [29:0] max_1_qr_1_lpi_1_dfm_mx0;
  wire else_else_else_case_6_or_3_tmp;
  wire [29:0] timerIN_sva_1;
  wire [30:0] nl_timerIN_sva_1;
  wire [20:0] else_else_else_case_5_aif_mul_2;
  wire [41:0] nl_else_else_else_case_5_aif_mul_2;
  wire mux_425_cse;
  wire nor_374_cse;
  wire [29:0] mux_1_cse;
  wire nor_181_cse;
  wire or_441_cse;
  wire and_118_cse;
  reg [29:0] reg_else_else_else_case_1_if_slc_1_itm_1_cse;
  reg reg_else_else_else_case_1_slc_svs_1_cse;
  wire or_1005_cse;
  wire mux_515_cse;
  wire or_435_cse;
  wire and_72_cse;
  wire mux_1327_cse;
  wire [31:0] else_else_else_case_1_if_acc_1_cse;
  wire [32:0] nl_else_else_else_case_1_if_acc_1_cse;
  wire mux_148_cse;
  wire mux_435_cse;
  wire mux_740_cse;
  wire or_331_cse;
  wire or_415_cse;
  wire nor_17_cse;
  wire mux_121_cse;
  wire mux_593_cse;
  wire mux_440_cse;
  wire nand_32_cse;
  wire mux_437_cse;
  wire mux_590_cse;
  wire or_542_cse;
  wire mux_422_cse;
  wire mux_1225_cse;
  wire or_776_cse;
  wire and_42_cse;
  wire mux_10_cse;
  wire slc_else_else_else_case_6_else_exs_tmp_tmp;
  wire or_dcpl_20;
  wire or_dcpl_21;
  wire or_dcpl_22;
  wire and_dcpl_13;
  wire equal_tmp_1;
  wire equal_tmp;
  wire nor_dfs;
  wire equal_tmp_4;
  wire equal_tmp_5;
  wire else_else_else_case_0_lor_lpi_1_dfm;
  wire equal_tmp_2;
  wire equal_tmp_3;
  wire [29:0] timerIN_sva_dfm_12;
  wire else_else_else_switch_lp_and_26_cse;
  wire [31:0] else_else_else_case_3_if_acc_2_itm;
  wire [32:0] nl_else_else_else_case_3_if_acc_2_itm;
  wire [22:0] else_else_else_case_6_else_else_if_acc_1_itm;
  wire [23:0] nl_else_else_else_case_6_else_else_if_acc_1_itm;
  wire [24:0] else_else_else_case_6_else_if_acc_1_itm;
  wire [25:0] nl_else_else_else_case_6_else_if_acc_1_itm;
  wire [24:0] else_else_else_case_6_if_acc_1_itm;
  wire [25:0] nl_else_else_else_case_6_if_acc_1_itm;
  wire [31:0] else_else_else_case_0_oelse_acc_1_itm;
  wire [32:0] nl_else_else_else_case_0_oelse_acc_1_itm;
  wire [31:0] if_acc_itm;
  wire [32:0] nl_if_acc_itm;
  wire [31:0] else_else_else_case_3_else_if_acc_4_itm;
  wire [32:0] nl_else_else_else_case_3_else_if_acc_4_itm;
  wire mux_526_itm;
  wire mux_564_itm;
  wire mux_647_itm;
  wire cur_stateIN_sva_sg2_mx0;
  wire cur_stateIN_sva_sg1_mx0;
  wire cur_stateIN_sva_16_mx0;
  wire else_else_land_lpi_1_dfm_mx0w0;
  wire aif_nand_cse;
  wire else_land_lpi_1_dfm;
  wire [29:0] best_edgeIN_sva_dfm_14;
  wire else_else_else_switch_lp_and_25_ssc_mx0w0;
  wire else_else_else_switch_lp_and_25_ssc_mx0;
  wire else_else_else_switch_lp_and_23_ssc_mx0w0;
  wire else_else_else_switch_lp_and_23_ssc_mx0;
  wire else_else_else_switch_lp_and_29_ssc_mx0w0;
  wire else_else_else_switch_lp_and_29_ssc_mx0;
  wire else_else_nor_ssc_mx0;
  wire else_else_else_case_1_land_lpi_1_dfm;
  wire [1:0] C1_2_dfmergedata_lpi_1_dfm_3;
  wire cur_stateIN_sva_dfm_16_sg2;
  wire cur_stateIN_sva_dfm_23;
  wire cur_stateIN_sva_dfm_16_sg1;
  wire land_lpi_1_dfm;
  wire else_else_else_case_6_else_else_else_land_lpi_1_dfm_mx0w0;
  wire else_else_else_case_6_nor_m1c;
  wire mux_741_itm;
  wire [23:0] mul_itm;
  wire [47:0] nl_mul_itm;
  wire mux_1500_itm;
  wire [20:0] else_else_else_case_6_else_mul_sdt;
  wire [41:0] nl_else_else_else_case_6_else_mul_sdt;
  wire mux_497_cse_1;
  wire mux_511_cse;
  wire [16:0] slc_slc;
  wire nor_94_cse;

  wire[0:0] mux_402_nl;
  wire[0:0] mux_401_nl;
  wire[0:0] mux_400_nl;
  wire[0:0] mux_391_nl;
  wire[0:0] mux_390_nl;
  wire[0:0] mux_399_nl;
  wire[0:0] mux_395_nl;
  wire[0:0] mux_421_nl;
  wire[0:0] mux_420_nl;
  wire[0:0] mux_419_nl;
  wire[0:0] mux_408_nl;
  wire[0:0] mux_407_nl;
  wire[0:0] mux_406_nl;
  wire[0:0] mux_418_nl;
  wire[0:0] mux_412_nl;
  wire[0:0] mux_411_nl;
  wire[0:0] mux_427_nl;
  wire[0:0] mux_389_nl;
  wire[0:0] mux_356_nl;
  wire[0:0] mux_355_nl;
  wire[0:0] mux_354_nl;
  wire[0:0] mux_353_nl;
  wire[0:0] mux_352_nl;
  wire[0:0] mux_348_nl;
  wire[0:0] mux_347_nl;
  wire[0:0] mux_388_nl;
  wire[0:0] mux_387_nl;
  wire[0:0] mux_386_nl;
  wire[0:0] mux_373_nl;
  wire[0:0] mux_372_nl;
  wire[0:0] mux_371_nl;
  wire[0:0] mux_361_nl;
  wire[0:0] mux_360_nl;
  wire[0:0] mux_370_nl;
  wire[0:0] mux_366_nl;
  wire[0:0] mux_385_nl;
  wire[0:0] mux_384_nl;
  wire[0:0] mux_377_nl;
  wire[0:0] mux_376_nl;
  wire[0:0] mux_375_nl;
  wire[0:0] mux_383_nl;
  wire[0:0] mux_379_nl;
  wire[0:0] mux_1508_nl;
  wire[0:0] mux_426_nl;
  wire[0:0] mux_424_nl;
  wire[0:0] mux_423_nl;
  wire[0:0] mux_436_nl;
  wire[0:0] mux_589_nl;
  wire[0:0] mux_737_nl;
  wire[0:0] mux_736_nl;
  wire[0:0] mux_837_nl;
  wire[0:0] mux_836_nl;
  wire[0:0] mux_865_nl;
  wire[0:0] mux_863_nl;
  wire[0:0] mux_862_nl;
  wire[0:0] mux_1224_nl;
  wire[0:0] mux_1223_nl;
  wire[0:0] mux_1222_nl;
  wire[0:0] mux_1221_nl;
  wire[0:0] mux_1217_nl;
  wire[0:0] mux_1202_nl;
  wire[0:0] mux_1201_nl;
  wire[0:0] mux_1200_nl;
  wire[0:0] mux_1199_nl;
  wire[0:0] mux_1198_nl;
  wire[0:0] mux_1197_nl;
  wire[0:0] mux_1196_nl;
  wire[0:0] mux_1190_nl;
  wire[29:0] absolute_1_mux_1_nl;
  wire[29:0] mux_1499_nl;
  wire[1:0] mux1h_6_nl;
  wire[0:0] else_else_mux1h_2_nl;
  wire[0:0] else_else_mux1h_1_nl;
  wire[0:0] else_else_mux1h_nl;
  wire[0:0] mux_34_nl;
  wire[0:0] mux_41_nl;
  wire[0:0] mux_45_nl;
  wire[0:0] mux_44_nl;
  wire[0:0] mux_66_nl;
  wire[0:0] mux_50_nl;
  wire[0:0] mux_49_nl;
  wire[0:0] mux_48_nl;
  wire[0:0] mux_47_nl;
  wire[0:0] mux_46_nl;
  wire[0:0] mux_65_nl;
  wire[0:0] mux_64_nl;
  wire[0:0] mux_57_nl;
  wire[0:0] mux_56_nl;
  wire[0:0] mux_52_nl;
  wire[0:0] mux_63_nl;
  wire[0:0] mux_62_nl;
  wire[0:0] mux_59_nl;
  wire[0:0] mux_58_nl;
  wire[0:0] mux_72_nl;
  wire[0:0] mux_71_nl;
  wire[0:0] mux_74_nl;
  wire[0:0] mux_78_nl;
  wire[0:0] mux_87_nl;
  wire[0:0] mux_86_nl;
  wire[0:0] mux_85_nl;
  wire[0:0] mux_84_nl;
  wire[0:0] mux_83_nl;
  wire[0:0] mux_1509_nl;
  wire[0:0] mux_93_nl;
  wire[0:0] mux_97_nl;
  wire[0:0] mux_96_nl;
  wire[0:0] mux_94_nl;
  wire[0:0] mux_95_nl;
  wire[0:0] mux_108_nl;
  wire[0:0] mux_111_nl;
  wire[0:0] mux_118_nl;
  wire[0:0] mux_115_nl;
  wire[0:0] mux_114_nl;
  wire[0:0] mux_117_nl;
  wire[0:0] mux_110_nl;
  wire[0:0] mux_120_nl;
  wire[0:0] mux_113_nl;
  wire[0:0] mux_129_nl;
  wire[0:0] mux_128_nl;
  wire[0:0] mux_134_nl;
  wire[0:0] mux_133_nl;
  wire[0:0] mux_141_nl;
  wire[0:0] mux_147_nl;
  wire[0:0] mux_146_nl;
  wire[0:0] mux_152_nl;
  wire[0:0] mux_151_nl;
  wire[0:0] mux_165_nl;
  wire[0:0] mux_1502_nl;
  wire[0:0] mux_164_nl;
  wire[0:0] mux_177_nl;
  wire[0:0] mux_176_nl;
  wire[0:0] mux_181_nl;
  wire[0:0] mux_180_nl;
  wire[0:0] mux_188_nl;
  wire[0:0] mux_187_nl;
  wire[0:0] mux_200_nl;
  wire[0:0] mux_199_nl;
  wire[0:0] mux_198_nl;
  wire[0:0] mux_429_nl;
  wire[0:0] mux_433_nl;
  wire[0:0] mux_431_nl;
  wire[0:0] mux_439_nl;
  wire[0:0] mux_438_nl;
  wire[0:0] mux_444_nl;
  wire[0:0] mux_442_nl;
  wire[0:0] mux_443_nl;
  wire[0:0] mux_453_nl;
  wire[0:0] mux_452_nl;
  wire[0:0] mux_450_nl;
  wire[0:0] mux_451_nl;
  wire[0:0] mux_462_nl;
  wire[0:0] mux_461_nl;
  wire[0:0] mux_481_nl;
  wire[0:0] mux_479_nl;
  wire[0:0] mux_486_nl;
  wire[0:0] mux_483_nl;
  wire[0:0] mux_478_nl;
  wire[0:0] mux_477_nl;
  wire[0:0] mux_494_nl;
  wire[0:0] mux_492_nl;
  wire[0:0] mux_1512_nl;
  wire[0:0] mux_500_nl;
  wire[0:0] mux_507_nl;
  wire[0:0] mux_506_nl;
  wire[0:0] mux_1513_nl;
  wire[0:0] mux_520_nl;
  wire[0:0] mux_519_nl;
  wire[0:0] mux_524_nl;
  wire[0:0] mux_523_nl;
  wire[0:0] mux_510_nl;
  wire[0:0] mux_496_nl;
  wire[0:0] mux_491_nl;
  wire[0:0] mux_509_nl;
  wire[0:0] mux_504_nl;
  wire[0:0] mux_503_nl;
  wire[0:0] mux_522_nl;
  wire[0:0] mux_518_nl;
  wire[0:0] mux_517_nl;
  wire[0:0] mux_525_nl;
  wire[0:0] mux_528_nl;
  wire[0:0] mux_489_nl;
  wire[0:0] mux_527_nl;
  wire[0:0] mux_548_nl;
  wire[0:0] mux_546_nl;
  wire[0:0] mux_545_nl;
  wire[0:0] mux_544_nl;
  wire[0:0] mux_562_nl;
  wire[0:0] mux_558_nl;
  wire[0:0] mux_554_nl;
  wire[0:0] mux_553_nl;
  wire[0:0] mux_552_nl;
  wire[0:0] mux_557_nl;
  wire[0:0] mux_556_nl;
  wire[0:0] mux_555_nl;
  wire[0:0] mux_561_nl;
  wire[0:0] mux_560_nl;
  wire[0:0] mux_559_nl;
  wire[0:0] mux_563_nl;
  wire[0:0] mux_566_nl;
  wire[0:0] mux_565_nl;
  wire[0:0] mux_583_nl;
  wire[0:0] mux_585_nl;
  wire[0:0] mux_584_nl;
  wire[0:0] mux_582_nl;
  wire[0:0] mux_592_nl;
  wire[0:0] mux_597_nl;
  wire[0:0] mux_596_nl;
  wire[0:0] mux_605_nl;
  wire[0:0] mux_603_nl;
  wire[0:0] mux_604_nl;
  wire[0:0] mux_613_nl;
  wire[0:0] mux_612_nl;
  wire[0:0] mux_626_nl;
  wire[0:0] mux_628_nl;
  wire[0:0] mux_636_nl;
  wire[0:0] mux_635_nl;
  wire[0:0] mux_632_nl;
  wire[0:0] mux_634_nl;
  wire[0:0] mux_639_nl;
  wire[0:0] mux_638_nl;
  wire[0:0] mux_641_nl;
  wire[0:0] mux_631_nl;
  wire[0:0] mux_630_nl;
  wire[0:0] mux_646_nl;
  wire[0:0] mux_650_nl;
  wire[0:0] mux_655_nl;
  wire[0:0] mux_657_nl;
  wire[0:0] mux_662_nl;
  wire[0:0] mux_665_nl;
  wire[0:0] mux_664_nl;
  wire[0:0] mux_663_nl;
  wire[0:0] mux_668_nl;
  wire[0:0] mux_667_nl;
  wire[0:0] mux_670_nl;
  wire[0:0] mux_661_nl;
  wire[0:0] mux_654_nl;
  wire[0:0] mux_660_nl;
  wire[0:0] mux_673_nl;
  wire[0:0] mux_644_nl;
  wire[0:0] mux_672_nl;
  wire[0:0] mux_694_nl;
  wire[0:0] mux_690_nl;
  wire[0:0] mux_688_nl;
  wire[0:0] mux_689_nl;
  wire[0:0] mux_693_nl;
  wire[0:0] mux_715_nl;
  wire[0:0] mux_704_nl;
  wire[0:0] mux_701_nl;
  wire[0:0] mux_700_nl;
  wire[0:0] mux_699_nl;
  wire[0:0] mux_703_nl;
  wire[0:0] mux_702_nl;
  wire[0:0] mux_714_nl;
  wire[0:0] mux_713_nl;
  wire[0:0] mux_710_nl;
  wire[0:0] mux_707_nl;
  wire[0:0] mux_705_nl;
  wire[0:0] mux_709_nl;
  wire[0:0] mux_708_nl;
  wire[0:0] mux_712_nl;
  wire[0:0] mux_711_nl;
  wire[0:0] mux_718_nl;
  wire[0:0] mux_717_nl;
  wire[0:0] mux_734_nl;
  wire[0:0] mux_739_nl;
  wire[0:0] mux_743_nl;
  wire[0:0] mux_753_nl;
  wire[0:0] mux_751_nl;
  wire[0:0] mux_755_nl;
  wire[0:0] mux_758_nl;
  wire[0:0] mux_757_nl;
  wire[0:0] mux_756_nl;
  wire[0:0] mux_762_nl;
  wire[0:0] mux_760_nl;
  wire[0:0] mux_768_nl;
  wire[0:0] mux_1153_nl;
  wire[0:0] mux_1152_nl;
  wire[0:0] mux_1158_nl;
  wire[0:0] mux_1157_nl;
  wire[0:0] mux_1160_nl;
  wire[0:0] mux_1170_nl;
  wire[0:0] mux_1168_nl;
  wire[0:0] mux_1169_nl;
  wire[0:0] mux_1174_nl;
  wire[0:0] mux_1173_nl;
  wire[0:0] mux_1165_nl;
  wire[0:0] mux_1164_nl;
  wire[0:0] mux_1172_nl;
  wire[0:0] mux_1167_nl;
  wire[0:0] mux_1177_nl;
  wire[0:0] mux_1178_nl;
  wire[0:0] mux_1182_nl;
  wire[0:0] mux_1181_nl;
  wire[0:0] mux_1180_nl;
  wire[0:0] mux_1185_nl;
  wire[0:0] mux_1184_nl;
  wire[0:0] mux_1188_nl;
  wire[0:0] mux_1194_nl;
  wire[0:0] mux_1193_nl;
  wire[0:0] mux_1192_nl;
  wire[0:0] mux_1205_nl;
  wire[0:0] mux_1208_nl;
  wire[0:0] mux_1207_nl;
  wire[0:0] mux_1214_nl;
  wire[0:0] mux_1213_nl;
  wire[0:0] mux_1212_nl;
  wire[0:0] mux_1211_nl;
  wire[0:0] mux_1210_nl;
  wire[0:0] mux_1206_nl;
  wire[0:0] mux_1219_nl;
  wire[0:0] mux_1218_nl;
  wire[0:0] mux_1326_nl;
  wire[0:0] mux_1332_nl;
  wire[0:0] mux_1331_nl;
  wire[0:0] mux_1334_nl;
  wire[0:0] mux_1329_nl;
  wire[0:0] mux_1340_nl;
  wire[0:0] mux_1344_nl;
  wire[0:0] mux_1342_nl;
  wire[0:0] mux_1343_nl;
  wire[0:0] mux_1350_nl;
  wire[0:0] mux_1351_nl;
  wire[0:0] mux_1360_nl;
  wire[0:0] mux_1364_nl;
  wire[0:0] mux_1367_nl;
  wire[0:0] mux_1366_nl;
  wire[0:0] mux_1365_nl;
  wire[0:0] mux_1386_nl;
  wire[0:0] mux_1395_nl;
  wire[0:0] mux_1391_nl;
  wire[0:0] mux_1394_nl;
  wire[0:0] mux_1393_nl;
  wire[0:0] mux_1400_nl;
  wire[0:0] mux_1402_nl;
  wire[0:0] mux_1407_nl;
  wire[0:0] mux_1379_nl;
  wire[0:0] mux_1406_nl;
  wire[0:0] mux_1405_nl;
  wire[0:0] mux_1399_nl;
  wire[0:0] mux_1398_nl;
  wire[0:0] mux_1397_nl;
  wire[0:0] mux_1404_nl;
  wire[0:0] mux_1401_nl;
  wire[0:0] mux_1413_nl;
  wire[0:0] mux_1417_nl;
  wire[0:0] mux_1420_nl;
  wire[0:0] mux_1510_nl;
  wire[0:0] mux_1416_nl;
  wire[0:0] mux_1422_nl;
  wire[0:0] mux_1425_nl;
  wire[0:0] mux_1430_nl;
  wire[0:0] mux_1429_nl;
  wire[0:0] mux_1436_nl;
  wire[0:0] mux_1444_nl;
  wire[0:0] mux_1443_nl;
  wire[0:0] mux_1448_nl;
  wire[0:0] mux_1447_nl;
  wire[0:0] mux_1440_nl;
  wire[0:0] mux_1439_nl;
  wire[0:0] mux_1446_nl;
  wire[0:0] mux_1442_nl;
  wire[0:0] mux_1450_nl;
  wire[0:0] mux_1454_nl;
  wire[0:0] mux_1453_nl;
  wire[0:0] mux_1452_nl;
  wire[0:0] mux_1458_nl;
  wire[0:0] mux_1455_nl;
  wire[0:0] mux_1457_nl;
  wire[0:0] mux_1464_nl;
  wire[0:0] mux_1463_nl;
  wire[0:0] mux_1462_nl;
  wire[0:0] mux_1461_nl;
  wire[0:0] mux_1460_nl;
  wire[0:0] mux_1456_nl;
  wire[0:0] mux_1511_nl;
  wire[0:0] mux_1476_nl;
  wire[0:0] mux_1475_nl;
  wire[0:0] mux_1474_nl;

  // Interconnect Declarations for Component Instantiations 
  assign mux_425_cse = MUX_s_1_2_2({(~ nor_tmp_26) , (cur_stateIN_sva_16 | (~ cur_stateIN_sva_sg2))},
      cur_stateIN_sva_sg1);
  assign nor_374_cse = ~(cur_stateIN_sva_sg1 | (~ nor_tmp_26));
  assign mux_390_nl = MUX_s_1_2_2({mux_tmp_89 , mux_tmp_109}, nor_tmp_21);
  assign mux_391_nl = MUX_s_1_2_2({(mux_390_nl) , mux_tmp_109}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_395_nl = MUX_s_1_2_2({mux_tmp_144 , mux_tmp_109}, nor_tmp_4);
  assign mux_399_nl = MUX_s_1_2_2({mux_tmp_148 , (mux_395_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_400_nl = MUX_s_1_2_2({(mux_399_nl) , (mux_391_nl)}, cur_stateIN_sva_dfm_25);
  assign mux_401_nl = MUX_s_1_2_2({mux_tmp_148 , (mux_400_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_402_nl = MUX_s_1_2_2({(mux_401_nl) , mux_tmp_109}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8);
  assign mux_406_nl = MUX_s_1_2_2({or_tmp_119 , (~ mux_tmp_155)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_407_nl = MUX_s_1_2_2({or_tmp_119 , (cur_stateIN_sva_dfm_18_sg1 | (mux_406_nl))},
      else_else_else_switch_lp_and_17_itm_1);
  assign mux_408_nl = MUX_s_1_2_2({(mux_407_nl) , (nor_tmp_24 | (~ mux_tmp_155))},
      cur_stateIN_sva_dfm_18_sg2);
  assign mux_411_nl = MUX_s_1_2_2({(~ mux_tmp_160) , or_tmp_65}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_412_nl = MUX_s_1_2_2({mux_tmp_159 , (mux_411_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_418_nl = MUX_s_1_2_2({mux_tmp_167 , (mux_412_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_419_nl = MUX_s_1_2_2({(mux_418_nl) , (mux_408_nl)}, cur_stateIN_sva_dfm_25);
  assign mux_420_nl = MUX_s_1_2_2({(mux_419_nl) , or_542_cse}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_421_nl = MUX_s_1_2_2({mux_tmp_167 , (mux_420_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_422_cse = MUX_s_1_2_2({(~ (mux_421_nl)) , (mux_402_nl)}, else_else_else_switch_lp_and_31_itm_1);
  assign mux_347_nl = MUX_s_1_2_2({or_tmp_78 , or_tmp_65}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_348_nl = MUX_s_1_2_2({(or_tmp_79 | not_tmp_16) , (mux_347_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_352_nl = MUX_s_1_2_2({mux_tmp_101 , (mux_348_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_353_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_25 | (mux_352_nl)) , or_542_cse},
      cur_stateIN_sva_dfm_18_sg1);
  assign mux_354_nl = MUX_s_1_2_2({mux_tmp_101 , (mux_353_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_355_nl = MUX_s_1_2_2({(~(else_else_else_switch_lp_and_31_itm_1 | (mux_354_nl)))
      , mux_tmp_71}, else_else_else_switch_lp_and_27_itm_1);
  assign mux_356_nl = MUX_s_1_2_2({or_tmp_89 , (land_lpi_1_dfm_1 | else_land_lpi_1_dfm_2
      | else_else_or_itm_1 | (~ (mux_355_nl)))}, main_stage_0_2);
  assign mux_360_nl = MUX_s_1_2_2({(else_else_nor_tmp & cur_stateIN_sva_sg2 & (~
      else_else_land_lpi_1_dfm) & or_tmp_19) , mux_tmp_109}, nor_tmp_21);
  assign mux_361_nl = MUX_s_1_2_2({(mux_360_nl) , mux_tmp_109}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_366_nl = MUX_s_1_2_2({not_tmp_23 , mux_tmp_109}, nor_tmp_4);
  assign mux_370_nl = MUX_s_1_2_2({mux_tmp_119 , (mux_366_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_371_nl = MUX_s_1_2_2({(mux_370_nl) , (mux_361_nl)}, cur_stateIN_sva_dfm_25);
  assign mux_372_nl = MUX_s_1_2_2({mux_tmp_119 , (mux_371_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_373_nl = MUX_s_1_2_2({(mux_372_nl) , mux_tmp_109}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8);
  assign mux_375_nl = MUX_s_1_2_2({or_tmp_106 , mux_tmp_124}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_376_nl = MUX_s_1_2_2({or_tmp_106 , (mux_375_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_377_nl = MUX_s_1_2_2({(mux_376_nl) , (nor_tmp_24 | mux_tmp_124)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1508_nl = MUX_s_1_2_2({nand_tmp_1 , mux_tmp_124}, cur_stateIN_sva_dfm_25);
  assign mux_379_nl = MUX_s_1_2_2({nand_tmp_1 , (mux_1508_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_383_nl = MUX_s_1_2_2({mux_tmp_132 , (mux_379_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_384_nl = MUX_s_1_2_2({(mux_383_nl) , (mux_377_nl)}, cur_stateIN_sva_dfm_25);
  assign mux_385_nl = MUX_s_1_2_2({mux_tmp_132 , (cur_stateIN_sva_dfm_18_sg1 | (mux_384_nl))},
      else_else_else_switch_lp_and_15_itm_1);
  assign mux_386_nl = MUX_s_1_2_2({(mux_385_nl) , (~ (mux_373_nl))}, else_else_else_switch_lp_and_31_itm_1);
  assign mux_387_nl = MUX_s_1_2_2({(else_else_else_switch_lp_and_27_itm_1 | (mux_386_nl))
      , or_tmp_90}, else_else_or_itm_1);
  assign mux_388_nl = MUX_s_1_2_2({nor_374_cse , (land_lpi_1_dfm_1 | (~(else_land_lpi_1_dfm_2
      | (mux_387_nl))))}, main_stage_0_2);
  assign mux_389_nl = MUX_s_1_2_2({(mux_388_nl) , (mux_356_nl)}, if_acc_itm[31]);
  assign mux_423_nl = MUX_s_1_2_2({mux_422_cse , mux_tmp_71}, else_else_else_switch_lp_and_27_itm_1);
  assign mux_424_nl = MUX_s_1_2_2({(~ (mux_423_nl)) , or_tmp_90}, else_else_or_itm_1);
  assign mux_426_nl = MUX_s_1_2_2({mux_425_cse , (~(land_lpi_1_dfm_1 | (~(else_land_lpi_1_dfm_2
      | (mux_424_nl)))))}, main_stage_0_2);
  assign mux_427_nl = MUX_s_1_2_2({((if_acc_itm[31]) & (mux_426_nl)) , (mux_389_nl)},
      start_rsc_mgc_in_wire_d);
  assign mux_10_cse = MUX_s_1_2_2({else_else_land_lpi_1_dfm_mx0w0 , else_else_land_lpi_1_dfm},
      mux_427_nl);
  assign or_331_cse = nor_tmp_24 | mux_tmp_420;
  assign or_415_cse = nor_tmp_24 | mux_tmp_572;
  assign mux_436_nl = MUX_s_1_2_2({nand_tmp_10 , mux_tmp_400}, nor_tmp_21);
  assign mux_437_cse = MUX_s_1_2_2({(mux_436_nl) , mux_tmp_400}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_589_nl = MUX_s_1_2_2({nand_tmp_28 , mux_tmp_553}, nor_tmp_21);
  assign mux_590_cse = MUX_s_1_2_2({(mux_589_nl) , mux_tmp_553}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_736_nl = MUX_s_1_2_2({mux_tmp_701 , mux_tmp_698}, nor_tmp_129);
  assign mux_737_nl = MUX_s_1_2_2({(mux_736_nl) , mux_tmp_698}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_741_itm = MUX_s_1_2_2({mux_740_cse , (mux_737_nl)}, cur_stateIN_sva_dfm_25);
  assign mux_1_cse = MUX_v_30_2_2({(else_else_else_case_0_if_acc_3[30:1]) , absolute_mux_1_mx0w0},
      else_else_else_case_0_if_acc_3[31]);
  assign else_else_else_switch_lp_and_26_cse = (~ else_else_else_case_5_land_lpi_1_dfm_1)
      & equal_tmp_4;
  assign mux_836_nl = MUX_s_1_2_2({or_tmp_72 , mux_tmp_90}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_837_nl = MUX_s_1_2_2({(mux_836_nl) , (nor_tmp_4 | (~ mux_121_cse))},
      cur_stateIN_sva_dfm_18_sg2);
  assign or_542_cse = cur_stateIN_sva_dfm_25 | (mux_837_nl);
  assign mux_862_nl = MUX_s_1_2_2({mux_422_cse , mux_tmp_71}, else_else_or_itm_1);
  assign mux_863_nl = MUX_s_1_2_2({(~ (mux_862_nl)) , (else_else_or_itm_1 | (~ mux_tmp_71))},
      else_else_else_switch_lp_and_27_itm_1);
  assign mux_865_nl = MUX_s_1_2_2({mux_425_cse , (~(land_lpi_1_dfm_1 | (~(else_land_lpi_1_dfm_2
      | (mux_863_nl)))))}, main_stage_0_2);
  assign and_42_cse = (mux_865_nl) & (if_acc_itm[31]);
  assign nor_181_cse = ~(else_else_land_lpi_1_dfm | (~ equal_tmp_7));
  assign and_72_cse = (if_acc_itm[31]) & mux_425_cse;
  assign mux_1217_nl = MUX_s_1_2_2({((~ cur_stateIN_sva_sg1) | (~ else_else_nor_tmp)
      | cur_stateIN_sva_16 | mux_tmp_1142) , mux_tmp_1182}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1221_nl = MUX_s_1_2_2({mux_tmp_1186 , (mux_1217_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1222_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_25 | (mux_1221_nl)) , or_tmp_752},
      cur_stateIN_sva_dfm_18_sg1);
  assign mux_1223_nl = MUX_s_1_2_2({mux_tmp_1186 , (mux_1222_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_1224_nl = MUX_s_1_2_2({(or_tmp_765 | (mux_1223_nl)) , or_tmp_724}, else_else_else_switch_lp_and_27_itm_1);
  assign mux_1225_cse = MUX_s_1_2_2({or_tmp_764 , (land_lpi_1_dfm_1 | (mux_1224_nl))},
      if_acc_itm[31]);
  assign mux_1190_nl = MUX_s_1_2_2({mux_tmp_1153 , mux_tmp_1155}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1196_nl = MUX_s_1_2_2({mux_tmp_1161 , (mux_1190_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1197_nl = MUX_s_1_2_2({(mux_1196_nl) , mux_tmp_1152}, cur_stateIN_sva_dfm_25);
  assign mux_1198_nl = MUX_s_1_2_2({(mux_1197_nl) , or_tmp_752}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_1199_nl = MUX_s_1_2_2({mux_tmp_1161 , (mux_1198_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_1200_nl = MUX_s_1_2_2({(mux_1199_nl) , mux_tmp_1141}, else_else_else_switch_lp_and_31_itm_1);
  assign mux_1201_nl = MUX_s_1_2_2({(mux_1200_nl) , mux_tmp_1117}, else_else_or_itm_1);
  assign mux_1202_nl = MUX_s_1_2_2({(mux_1201_nl) , or_tmp_724}, else_else_else_switch_lp_and_27_itm_1);
  assign or_776_cse = (~ (if_acc_itm[31])) | land_lpi_1_dfm_1 | (~ (mux_1202_nl));
  assign best_edgeIN_sva_mx0 = MUX_v_30_2_2({best_edgeIN_sva , best_edgeIN_sva_dfm_14},
      main_stage_0_2);
  assign nl_absolute_mux_1_mx0w0 = (~ (else_else_else_case_0_if_acc_3[30:1])) + 30'b1;
  assign absolute_mux_1_mx0w0 = nl_absolute_mux_1_mx0w0[29:0];
  assign max_1_qr_1_lpi_1_dfm_mx0 = MUX_v_30_2_2({sum_rsc_mgc_in_wire_d , best_edgeIN_sva_mx0},
      max_1_acc_3[31]);
  assign absolute_1_mux_1_nl = MUX_v_30_2_2({(else_else_else_case_0_if_acc_3[30:1])
      , absolute_mux_1_mx0w0}, else_else_else_case_0_if_acc_3[31]);
  assign nl_else_else_else_case_3_if_acc_2_itm = conv_u2s_31_32({(absolute_1_mux_1_nl)
      , 1'b1}) + ({5'b11111 , (~ (best_edgeIN_sva_mx0[29:4])) , 1'b1});
  assign else_else_else_case_3_if_acc_2_itm = nl_else_else_else_case_3_if_acc_2_itm[31:0];
  assign nl_timerIN_sva_1 = (timerIN_sva_dfm_12 & ({{29{main_stage_0_2}}, main_stage_0_2}))
      + 30'b1;
  assign timerIN_sva_1 = nl_timerIN_sva_1[29:0];
  assign nl_else_else_else_case_6_else_else_if_acc_1_itm = conv_u2u_22_23({(timerIN_sva_1[29:9])
      , 1'b1}) + ({3'b111 , (~ (slc_slc[16])) , 2'b10 , (~ (slc_slc[13:12])) , 3'b1
      , (~ (slc_slc[8:0])) , 3'b101});
  assign else_else_else_case_6_else_else_if_acc_1_itm = nl_else_else_else_case_6_else_else_if_acc_1_itm[22:0];
  assign slc_slc = readslicef_19_17_2(conv_u2u_38_19(conv_u2u_3_19({slow_rsc_mgc_in_wire_d
      , 2'b1}) * 19'b10011000100101101));
  assign nl_else_else_else_case_6_else_if_acc_1_itm = conv_u2u_24_25({(timerIN_sva_1[29:7])
      , 1'b1}) + ({3'b111 , (~ (else_else_else_case_6_else_mul_sdt[20:17])) , 2'b0
      , (~ (else_else_else_case_6_else_mul_sdt[14:9])) , 3'b1 , (~ (else_else_else_case_6_else_mul_sdt[5:2]))
      , 3'b1});
  assign else_else_else_case_6_else_if_acc_1_itm = nl_else_else_else_case_6_else_if_acc_1_itm[24:0];
  assign nl_else_else_else_case_6_else_mul_sdt = conv_u2u_3_21({slow_rsc_mgc_in_wire_d
      , 2'b1}) * 21'b111001001110000111;
  assign else_else_else_case_6_else_mul_sdt = nl_else_else_else_case_6_else_mul_sdt[20:0];
  assign nl_else_else_else_case_6_if_acc_1_itm = conv_u2u_24_25({(timerIN_sva_1[29:7])
      , 1'b1}) + ({5'b11111 , (~ (slc_slc[16])) , 2'b10 , (~ (slc_slc[13:12])) ,
      3'b1 , (~ (slc_slc[8:0])) , 3'b101});
  assign else_else_else_case_6_if_acc_1_itm = nl_else_else_else_case_6_if_acc_1_itm[24:0];
  assign cur_stateIN_sva_sg2_mx0 = MUX_s_1_2_2({cur_stateIN_sva_sg2 , cur_stateIN_sva_dfm_16_sg2},
      main_stage_0_2);
  assign cur_stateIN_sva_sg1_mx0 = MUX_s_1_2_2({cur_stateIN_sva_sg1 , cur_stateIN_sva_dfm_16_sg1},
      main_stage_0_2);
  assign cur_stateIN_sva_16_mx0 = MUX_s_1_2_2({cur_stateIN_sva_16 , cur_stateIN_sva_dfm_23},
      main_stage_0_2);
  assign else_else_land_lpi_1_dfm_mx0w0 = aif_nand_cse & stop_rsc_mgc_in_wire_d;
  assign aif_nand_cse = ~(cur_stateIN_sva_sg2_mx0 & cur_stateIN_sva_16_mx0 & (~ cur_stateIN_sva_sg1_mx0));
  assign else_land_lpi_1_dfm = cur_stateIN_sva_sg2_mx0 & cur_stateIN_sva_16_mx0 &
      (~ cur_stateIN_sva_sg1_mx0) & start_rsc_mgc_in_wire_d;
  assign mux_1499_nl = MUX_v_30_2_2({sum_1_sva_1 , best_edgeIN_sva}, or_dcpl_22);
  assign best_edgeIN_sva_dfm_14 = ~((~((mux_1499_nl) | (signext_30_1(~(or_itm_1 |
      or_dcpl_22 | and_dcpl_13))))) | ({{29{and_dcpl_13}}, and_dcpl_13}));
  assign else_else_else_switch_lp_and_25_ssc_mx0w0 = else_else_else_case_1_land_lpi_1_dfm
      & equal_tmp_6 & (~ else_else_land_lpi_1_dfm);
  assign else_else_else_switch_lp_and_25_ssc_mx0 = MUX_s_1_2_2({else_else_else_switch_lp_and_25_ssc_mx0w0
      , else_else_else_switch_lp_and_25_ssc}, land_lpi_1_dfm_1);
  assign else_else_else_switch_lp_and_23_ssc_mx0w0 = else_else_else_case_1_land_lpi_1_dfm
      & equal_tmp_7 & (~ else_else_land_lpi_1_dfm);
  assign else_else_else_switch_lp_and_23_ssc_mx0 = MUX_s_1_2_2({else_else_else_switch_lp_and_23_ssc_mx0w0
      , else_else_else_switch_lp_and_23_ssc}, land_lpi_1_dfm_1);
  assign else_else_else_switch_lp_and_29_ssc_mx0w0 = else_else_else_case_0_lor_lpi_1_dfm
      & nor_dfs_1 & (~ else_else_land_lpi_1_dfm);
  assign else_else_else_switch_lp_and_29_ssc_mx0 = MUX_s_1_2_2({else_else_else_switch_lp_and_29_ssc_mx0w0
      , else_else_else_switch_lp_and_29_ssc}, land_lpi_1_dfm_1);
  assign else_else_nor_tmp = ~((~(((~ else_else_else_case_0_lor_lpi_1_dfm) & nor_dfs_1)
      | ((~ else_else_else_case_1_land_lpi_1_dfm) & equal_tmp_7) | ((~ else_else_else_case_1_land_lpi_1_dfm)
      & equal_tmp_6) | else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1))
      | else_else_land_lpi_1_dfm);
  assign else_else_nor_ssc_mx0 = MUX_s_1_2_2({else_else_nor_tmp , else_else_nor_ssc},
      land_lpi_1_dfm_1);
  assign else_else_else_case_0_lor_lpi_1_dfm = (else_else_else_case_0_oelse_acc_1_itm[31])
      | else_else_else_case_0_slc_svs_1;
  assign else_else_else_case_1_land_lpi_1_dfm = (else_else_else_case_1_if_acc_1_cse[31])
      & (~ reg_else_else_else_case_1_slc_svs_1_cse);
  assign nl_else_else_else_case_0_oelse_acc_1_itm = conv_u2s_27_32({else_else_else_case_0_oelse_slc_slc_slc_10_2_itm_1
      , 4'b1100 , else_else_else_case_0_oelse_slc_slc_slc_10_5_itm_1 , 8'b1000001})
      + ({1'b1 , (~ timerIN_sva_13) , 1'b1});
  assign else_else_else_case_0_oelse_acc_1_itm = nl_else_else_else_case_0_oelse_acc_1_itm[31:0];
  assign nl_else_else_else_case_1_if_acc_1_cse = conv_u2s_31_32({sum_1_sva_1 , 1'b1})
      + ({1'b1 , (~ reg_else_else_else_case_1_if_slc_1_itm_1_cse) , 1'b1});
  assign else_else_else_case_1_if_acc_1_cse = nl_else_else_else_case_1_if_acc_1_cse[31:0];
  assign mux1h_6_nl = MUX1HOT_v_2_3_2({2'b1 , 2'b10 , C1_2_dfmergedata_lpi_1}, {(~((~(nor_dfs
      | equal_tmp | equal_tmp_3 | ((else_else_else_case_6_else_if_acc_1_itm[24])
      & (~ (else_else_else_case_6_if_acc_1_itm[24])) & equal_tmp_5))) | equal_tmp_4))
      , (~((~(equal_tmp_1 | equal_tmp_2 | ((((else_else_else_case_6_else_else_if_acc_1_itm[22])
      & else_else_else_case_6_nor_m1c) | (else_else_else_case_6_if_acc_1_itm[24]))
      & equal_tmp_5))) | equal_tmp_4)) , (~((~(((~ (else_else_else_case_6_else_else_if_acc_1_itm[22]))
      & else_else_else_case_6_nor_m1c & equal_tmp_5) | nor_tmp_279)) | equal_tmp_4))});
  assign C1_2_dfmergedata_lpi_1_dfm_3 = (mux1h_6_nl) & (signext_2_1(~ equal_tmp_4));
  assign nor_tmp_279 = ~((~(cur_stateIN_sva_sg2_mx0 | cur_stateIN_sva_sg1_mx0 | cur_stateIN_sva_16_mx0))
      | equal_tmp | equal_tmp_1 | equal_tmp_2 | equal_tmp_3 | equal_tmp_4 | equal_tmp_5);
  assign equal_tmp_1 = cur_stateIN_sva_sg1_mx0 & (~(cur_stateIN_sva_sg2_mx0 | cur_stateIN_sva_16_mx0));
  assign equal_tmp = cur_stateIN_sva_16_mx0 & (~(cur_stateIN_sva_sg2_mx0 | cur_stateIN_sva_sg1_mx0));
  assign nor_dfs = ~(equal_tmp | equal_tmp_1 | equal_tmp_2 | equal_tmp_3 | equal_tmp_4
      | equal_tmp_5 | nor_tmp_279);
  assign timerIN_sva_dfm_12 = else_else_else_switch_lp_mux1h_2_itm_1 & (signext_30_1(~
      nor_tmp_278)) & (signext_30_1(~ else_else_land_lpi_1_dfm)) & (signext_30_1(~
      else_land_lpi_1_dfm_2)) & (signext_30_1(~ land_lpi_1_dfm_1));
  assign or_1005_cse = else_else_else_switch_lp_and_15_itm_1 | else_else_else_switch_lp_and_17_itm_1;
  assign else_else_mux1h_2_nl = MUX1HOT_s_1_3_2({cur_stateIN_sva_sg2 , cur_stateIN_sva_dfm_18_sg2
      , else_else_else_case_6_else_else_else_land_lpi_1_dfm_8}, {else_else_nor_ssc_mx0
      , or_1005_cse , else_else_else_switch_lp_and_31_itm_1});
  assign cur_stateIN_sva_dfm_16_sg2 = (~((~(((else_else_mux1h_2_nl) & (~(else_else_else_switch_lp_and_29_ssc_mx0
      | else_else_else_switch_lp_and_23_ssc_mx0))) | else_else_else_switch_lp_and_25_ssc_mx0
      | else_else_or_itm_1 | else_else_else_switch_lp_and_27_itm_1)) | else_land_lpi_1_dfm_2))
      | land_lpi_1_dfm_1;
  assign else_else_mux1h_1_nl = MUX1HOT_s_1_4_2({cur_stateIN_sva_16 , (else_else_else_case_0_if_mux_3_itm_1[0])
      , cur_stateIN_sva_dfm_25 , else_else_else_case_6_else_else_else_land_lpi_1_dfm_8},
      {else_else_nor_ssc_mx0 , else_else_else_switch_lp_and_29_ssc_mx0 , or_1005_cse
      , else_else_else_switch_lp_and_31_itm_1});
  assign cur_stateIN_sva_dfm_23 = (~((~(((else_else_mux1h_1_nl) & (~(else_else_else_switch_lp_and_25_ssc_mx0
      | else_else_else_switch_lp_and_27_itm_1))) | else_else_else_switch_lp_and_23_ssc_mx0
      | else_else_or_itm_1)) | else_land_lpi_1_dfm_2)) | land_lpi_1_dfm_1;
  assign else_else_mux1h_nl = MUX1HOT_s_1_3_2({cur_stateIN_sva_sg1 , (else_else_else_case_0_if_mux_3_itm_1[1])
      , cur_stateIN_sva_dfm_18_sg1}, {else_else_nor_ssc_mx0 , else_else_else_switch_lp_and_29_ssc_mx0
      , or_1005_cse});
  assign cur_stateIN_sva_dfm_16_sg1 = ~((~(((else_else_mux1h_nl) & (~ else_else_else_switch_lp_and_31_itm_1)
      & (~(else_else_else_switch_lp_and_25_ssc_mx0 | else_else_or_itm_1))) | else_else_else_switch_lp_and_23_ssc_mx0
      | else_else_else_switch_lp_and_27_itm_1)) | else_land_lpi_1_dfm_2 | land_lpi_1_dfm_1);
  assign nl_if_acc_itm = conv_u2s_31_32({(mul_itm[23:7]) , 2'b11 , (mul_itm[4:2])
      , 9'b10000001}) + ({1'b1 , (~ timerIN_sva_1) , 1'b1});
  assign if_acc_itm = nl_if_acc_itm[31:0];
  assign land_lpi_1_dfm = (~(cur_stateIN_sva_sg2_mx0 & cur_stateIN_sva_sg1_mx0 &
      (~ cur_stateIN_sva_16_mx0))) & aif_nand_cse & (if_acc_itm[31]);
  assign else_else_else_case_6_else_else_else_land_lpi_1_dfm_mx0w0 = (readslicef_32_1_31((conv_u2s_31_32({else_else_else_right_sum_1_sva
      , 1'b1}) + ({1'b1 , (~ best_edgeIN_sva_mx0) , 1'b1})))) & (readslicef_32_1_31((conv_u2s_31_32({else_else_else_left_sum_1_sva
      , 1'b1}) + ({1'b1 , (~ best_edgeIN_sva_mx0) , 1'b1}))));
  assign nl_mul_itm = conv_u2u_3_24({slow_rsc_mgc_in_wire_d , 2'b1}) * 24'b111011100110101100101;
  assign mul_itm = nl_mul_itm[23:0];
  assign nl_else_else_else_case_3_else_if_acc_4_itm = conv_u2s_31_32({sum_rsc_mgc_in_wire_d
      , 1'b1}) + ({1'b1 , (~ (readslicef_31_30_1((({best_edgeIN_sva_mx0 , 1'b1})
      + ({2'b11 , (~ (best_edgeIN_sva_mx0[29:2])) , 1'b1}))))) , 1'b1});
  assign else_else_else_case_3_else_if_acc_4_itm = nl_else_else_else_case_3_else_if_acc_4_itm[31:0];
  assign else_else_else_case_5_land_lpi_1_dfm_1 = (readslicef_32_1_31((conv_u2s_29_32({(best_edgeIN_sva_mx0[29:2])
      , 1'b1}) + ({1'b1 , (~ mux_1_cse) , 1'b1})))) & (readslicef_32_1_31((conv_u2s_28_32({(else_else_else_case_5_aif_mul_2[20:7])
      , 4'b1100 , (else_else_else_case_5_aif_mul_2[2]) , 9'b10000001}) + ({1'b1 ,
      (~ timerIN_sva_1) , 1'b1})))) & enablerefocus_rsc_mgc_in_wire_d;
  assign equal_tmp_5 = cur_stateIN_sva_sg2_mx0 & cur_stateIN_sva_sg1_mx0 & (~ cur_stateIN_sva_16_mx0);
  assign else_else_and_5_m1c_1 = equal_tmp_3 & (~ else_else_land_lpi_1_dfm_mx0w0);
  assign else_else_else_case_3_or_tmp_1 = (else_else_else_case_3_else_if_acc_4_itm[31])
      | (else_else_else_case_3_if_acc_2_itm[31]);
  assign else_else_and_4_m1c_1 = equal_tmp_2 & (~ else_else_land_lpi_1_dfm_mx0w0);
  assign else_else_and_6_m1c_1 = equal_tmp_4 & (~ else_else_land_lpi_1_dfm_mx0w0);
  assign else_else_and_3_m1c_1 = equal_tmp_1 & (~ else_else_land_lpi_1_dfm_mx0w0);
  assign else_else_and_2_m1c_1 = equal_tmp & (~ else_else_land_lpi_1_dfm_mx0w0);
  assign equal_tmp_2 = cur_stateIN_sva_sg1_mx0 & cur_stateIN_sva_16_mx0 & (~ cur_stateIN_sva_sg2_mx0);
  assign equal_tmp_3 = cur_stateIN_sva_sg2_mx0 & (~(cur_stateIN_sva_sg1_mx0 | cur_stateIN_sva_16_mx0));
  assign equal_tmp_4 = cur_stateIN_sva_sg2_mx0 & cur_stateIN_sva_16_mx0 & (~ cur_stateIN_sva_sg1_mx0);
  assign else_else_else_case_6_or_3_tmp = (else_else_else_case_6_else_else_if_acc_1_itm[22])
      | (else_else_else_case_6_else_if_acc_1_itm[24]) | (else_else_else_case_6_if_acc_1_itm[24]);
  assign else_else_else_case_6_nor_m1c = ~((else_else_else_case_6_else_if_acc_1_itm[24])
      | (else_else_else_case_6_if_acc_1_itm[24]));
  assign or_tmp_975 = else_land_lpi_1_dfm | land_lpi_1_dfm;
  assign else_else_and_7_m1c_1 = equal_tmp_5 & (~ mux_10_cse) & (~ or_tmp_975);
  assign nl_else_else_else_case_5_aif_mul_2 = conv_u2u_3_21({slow_rsc_mgc_in_wire_d
      , 2'b1}) * 21'b1011111010111100001;
  assign else_else_else_case_5_aif_mul_2 = nl_else_else_else_case_5_aif_mul_2[20:0];
  assign nl_max_1_acc_3 = conv_u2s_31_32({sum_rsc_mgc_in_wire_d , 1'b1}) + ({1'b1
      , (~ best_edgeIN_sva_mx0) , 1'b1});
  assign max_1_acc_3 = nl_max_1_acc_3[31:0];
  assign nl_else_else_else_case_0_if_acc_3 = ({1'b1 , sum_rsc_mgc_in_wire_d , 1'b1})
      + conv_u2s_31_32({(~ best_edgeIN_sva_mx0) , 1'b1});
  assign else_else_else_case_0_if_acc_3 = nl_else_else_else_case_0_if_acc_3[31:0];
  assign or_tmp_2 = nor_181_cse | (~ else_else_else_switch_lp_and_27_itm_1) | else_else_or_itm_1
      | else_land_lpi_1_dfm_2 | land_lpi_1_dfm_1;
  assign or_tmp_5 = equal_tmp_7 | (~ else_else_else_switch_lp_and_27_itm_1) | else_else_or_itm_1
      | else_land_lpi_1_dfm_2 | land_lpi_1_dfm_1;
  assign mux_34_nl = MUX_s_1_2_2({or_tmp_5 , ((~((~ equal_tmp_7) | reg_else_else_else_case_1_slc_svs_1_cse
      | (~ (else_else_else_case_1_if_acc_1_cse[31])))) | (~ else_else_else_switch_lp_and_27_itm_1)
      | else_else_or_itm_1 | else_land_lpi_1_dfm_2 | land_lpi_1_dfm_1)}, ~(else_land_lpi_1_dfm_2
      | (~ cur_stateIN_sva_16)));
  assign mux_tmp_1 = MUX_s_1_2_2({(mux_34_nl) , ((~ else_else_else_switch_lp_and_27_itm_1)
      | else_else_or_itm_1 | else_land_lpi_1_dfm_2 | land_lpi_1_dfm_1)}, else_else_land_lpi_1_dfm);
  assign mux_tmp_2 = MUX_s_1_2_2({mux_tmp_1 , or_tmp_2}, cur_stateIN_sva_sg2 | cur_stateIN_sva_sg1);
  assign nor_tmp_4 = else_else_else_switch_lp_and_17_itm_1 & cur_stateIN_sva_dfm_25;
  assign or_tmp_7 = (~((~ else_else_else_switch_lp_and_31_itm_1) | else_else_else_switch_lp_and_27_itm_1))
      | else_else_or_itm_1 | else_land_lpi_1_dfm_2 | land_lpi_1_dfm_1;
  assign or_tmp_10 = (~((~(else_else_nor_tmp | else_else_else_switch_lp_and_31_itm_1))
      | else_else_else_switch_lp_and_27_itm_1)) | else_else_or_itm_1 | else_land_lpi_1_dfm_2
      | land_lpi_1_dfm_1;
  assign mux_tmp_5 = MUX_s_1_2_2({or_tmp_7 , or_tmp_10}, cur_stateIN_sva_16);
  assign or_tmp_19 = else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1;
  assign mux_tmp_8 = MUX_s_1_2_2({((~((~(nor_dfs_1 | else_else_else_switch_lp_and_31_itm_1))
      | else_else_else_switch_lp_and_27_itm_1)) | else_else_or_itm_1 | else_land_lpi_1_dfm_2
      | land_lpi_1_dfm_1) , or_tmp_7}, equal_tmp_7);
  assign mux_1500_itm = MUX_s_1_2_2({((~((~((or_tmp_19 & else_else_nor_tmp) | else_else_else_switch_lp_and_31_itm_1))
      | else_else_else_switch_lp_and_27_itm_1)) | else_else_or_itm_1 | else_land_lpi_1_dfm_2
      | land_lpi_1_dfm_1) , or_tmp_10}, nor_dfs_1);
  assign mux_41_nl = MUX_s_1_2_2({mux_1500_itm , or_tmp_10}, equal_tmp_7);
  assign mux_tmp_9 = MUX_s_1_2_2({mux_tmp_8 , (mux_41_nl)}, cur_stateIN_sva_16);
  assign nor_17_cse = ~(reg_else_else_else_case_1_slc_svs_1_cse | (~ (else_else_else_case_1_if_acc_1_cse[31])));
  assign or_tmp_27 = nor_17_cse | or_tmp_10;
  assign mux_tmp_19 = MUX_s_1_2_2({or_tmp_7 , ((~((~(else_else_else_case_0_slc_svs_1
      | (else_else_else_case_0_oelse_acc_1_itm[31]) | else_else_else_switch_lp_and_31_itm_1))
      | else_else_else_switch_lp_and_27_itm_1)) | else_else_or_itm_1 | else_land_lpi_1_dfm_2
      | land_lpi_1_dfm_1)}, nor_dfs_1);
  assign mux_44_nl = MUX_s_1_2_2({mux_tmp_9 , mux_tmp_5}, equal_tmp_6);
  assign mux_45_nl = MUX_s_1_2_2({(mux_44_nl) , or_tmp_7}, else_else_land_lpi_1_dfm);
  assign mux_46_nl = MUX_s_1_2_2({mux_tmp_8 , or_tmp_5}, nor_17_cse);
  assign mux_47_nl = MUX_s_1_2_2({(mux_46_nl) , or_tmp_10}, cur_stateIN_sva_16);
  assign mux_48_nl = MUX_s_1_2_2({(mux_47_nl) , mux_tmp_5}, else_land_lpi_1_dfm_2);
  assign mux_49_nl = MUX_s_1_2_2({mux_tmp_9 , (mux_48_nl)}, equal_tmp_6);
  assign mux_50_nl = MUX_s_1_2_2({(mux_49_nl) , or_tmp_7}, else_else_land_lpi_1_dfm);
  assign mux_52_nl = MUX_s_1_2_2({or_tmp_10 , or_tmp_27}, equal_tmp_7);
  assign mux_56_nl = MUX_s_1_2_2({mux_tmp_19 , (mux_52_nl)}, cur_stateIN_sva_16);
  assign mux_57_nl = MUX_s_1_2_2({(mux_56_nl) , mux_tmp_5}, else_land_lpi_1_dfm_2);
  assign mux_58_nl = MUX_s_1_2_2({or_tmp_27 , (nor_17_cse | (~ else_else_else_switch_lp_and_27_itm_1)
      | else_else_or_itm_1 | else_land_lpi_1_dfm_2 | land_lpi_1_dfm_1)}, nor_dfs_1);
  assign mux_59_nl = MUX_s_1_2_2({mux_1500_itm , (mux_58_nl)}, equal_tmp_7);
  assign mux_62_nl = MUX_s_1_2_2({mux_tmp_19 , (mux_59_nl)}, cur_stateIN_sva_16);
  assign mux_63_nl = MUX_s_1_2_2({(mux_62_nl) , mux_tmp_9}, else_land_lpi_1_dfm_2);
  assign mux_64_nl = MUX_s_1_2_2({(mux_63_nl) , (mux_57_nl)}, equal_tmp_6);
  assign mux_65_nl = MUX_s_1_2_2({(mux_64_nl) , or_tmp_7}, else_else_land_lpi_1_dfm);
  assign mux_66_nl = MUX_s_1_2_2({(mux_65_nl) , (mux_50_nl)}, cur_stateIN_sva_sg1);
  assign mux_tmp_33 = MUX_s_1_2_2({(mux_66_nl) , (mux_45_nl)}, cur_stateIN_sva_sg2);
  assign mux_tmp_35 = MUX_s_1_2_2({mux_tmp_33 , mux_tmp_2}, cur_stateIN_sva_dfm_25);
  assign or_tmp_37 = (~((~(cur_stateIN_sva_16 | (~ else_else_nor_tmp) | else_else_else_switch_lp_and_31_itm_1))
      | else_else_else_switch_lp_and_27_itm_1)) | else_else_or_itm_1 | else_land_lpi_1_dfm_2
      | land_lpi_1_dfm_1;
  assign mux_tmp_36 = MUX_s_1_2_2({or_tmp_7 , or_tmp_5}, cur_stateIN_sva_16);
  assign mux_71_nl = MUX_s_1_2_2({((~((~((~(else_else_else_switch_lp_and_26_itm_1
      | else_else_else_switch_lp_and_32_itm_1 | else_else_nor_tmp)) | else_else_else_switch_lp_and_31_itm_1))
      | else_else_else_switch_lp_and_27_itm_1)) | else_else_or_itm_1 | else_land_lpi_1_dfm_2
      | land_lpi_1_dfm_1) , or_tmp_7}, nor_dfs_1);
  assign mux_72_nl = MUX_s_1_2_2({(mux_71_nl) , or_tmp_7}, equal_tmp_7);
  assign mux_tmp_39 = MUX_s_1_2_2({(mux_72_nl) , or_tmp_5}, cur_stateIN_sva_16);
  assign mux_74_nl = MUX_s_1_2_2({mux_tmp_39 , mux_tmp_36}, equal_tmp_6);
  assign mux_tmp_41 = MUX_s_1_2_2({(mux_74_nl) , or_tmp_37}, else_else_land_lpi_1_dfm);
  assign mux_tmp_42 = MUX_s_1_2_2({mux_tmp_1 , or_tmp_2}, cur_stateIN_sva_sg1);
  assign mux_tmp_43 = MUX_s_1_2_2({mux_tmp_42 , mux_tmp_41}, cur_stateIN_sva_sg2);
  assign mux_78_nl = MUX_s_1_2_2({mux_tmp_43 , mux_tmp_2}, cur_stateIN_sva_dfm_25);
  assign mux_tmp_45 = MUX_s_1_2_2({(mux_78_nl) , mux_tmp_35}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_48 = MUX_s_1_2_2({or_tmp_2 , mux_tmp_41}, cur_stateIN_sva_sg1);
  assign mux_1509_nl = MUX_s_1_2_2({mux_tmp_8 , or_tmp_5}, nor_17_cse);
  assign mux_83_nl = MUX_s_1_2_2({(mux_1509_nl) , or_tmp_5}, cur_stateIN_sva_16);
  assign mux_84_nl = MUX_s_1_2_2({(mux_83_nl) , mux_tmp_36}, else_land_lpi_1_dfm_2);
  assign mux_85_nl = MUX_s_1_2_2({mux_tmp_39 , (mux_84_nl)}, equal_tmp_6);
  assign mux_86_nl = MUX_s_1_2_2({(mux_85_nl) , or_tmp_37}, else_else_land_lpi_1_dfm);
  assign mux_87_nl = MUX_s_1_2_2({mux_tmp_1 , (mux_86_nl)}, cur_stateIN_sva_sg1);
  assign mux_tmp_54 = MUX_s_1_2_2({(mux_87_nl) , mux_tmp_48}, cur_stateIN_sva_sg2);
  assign mux_tmp_58 = MUX_s_1_2_2({mux_tmp_42 , mux_tmp_48}, cur_stateIN_sva_sg2);
  assign mux_93_nl = MUX_s_1_2_2({mux_tmp_58 , mux_tmp_45}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_94_nl = MUX_s_1_2_2({mux_tmp_54 , mux_tmp_2}, cur_stateIN_sva_dfm_25);
  assign mux_95_nl = MUX_s_1_2_2({mux_tmp_58 , mux_tmp_2}, cur_stateIN_sva_dfm_25);
  assign mux_96_nl = MUX_s_1_2_2({(mux_95_nl) , (mux_94_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_97_nl = MUX_s_1_2_2({mux_tmp_58 , (mux_96_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_tmp_64 = MUX_s_1_2_2({(mux_97_nl) , (mux_93_nl)}, cur_stateIN_sva_dfm_18_sg1);
  assign or_tmp_44 = cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_16) | cur_stateIN_sva_sg2;
  assign mux_tmp_70 = MUX_s_1_2_2({else_land_lpi_1_dfm_2 , (~ else_land_lpi_1_dfm_2)},
      nor_17_cse);
  assign and_tmp = equal_tmp_7 & mux_tmp_70;
  assign mux_tmp_71 = MUX_s_1_2_2({(else_else_land_lpi_1_dfm | (~ and_tmp)) , (else_else_land_lpi_1_dfm
      | (~ equal_tmp_7))}, or_tmp_44);
  assign or_tmp_49 = else_else_land_lpi_1_dfm | (~(equal_tmp_6 | nor_dfs_1 | equal_tmp_7
      | else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1));
  assign or_tmp_51 = else_else_land_lpi_1_dfm | (~(equal_tmp_6 | nor_dfs_1 | equal_tmp_7));
  assign mux_tmp_72 = MUX_s_1_2_2({or_tmp_51 , or_tmp_49}, else_else_nor_tmp);
  assign mux_tmp_73 = MUX_s_1_2_2({(nor_dfs_1 | equal_tmp_7 | else_land_lpi_1_dfm_2)
      , (~ else_land_lpi_1_dfm_2)}, nor_17_cse);
  assign or_tmp_53 = nor_dfs_1 | equal_tmp_7;
  assign mux_108_nl = MUX_s_1_2_2({or_tmp_53 , mux_tmp_73}, equal_tmp_6);
  assign or_tmp_54 = else_else_land_lpi_1_dfm | (~ (mux_108_nl));
  assign mux_tmp_75 = MUX_s_1_2_2({or_tmp_54 , or_tmp_51}, cur_stateIN_sva_sg2);
  assign or_tmp_55 = equal_tmp_6 | nor_dfs_1;
  assign or_tmp_56 = (~ equal_tmp_7) | reg_else_else_else_case_1_slc_svs_1_cse |
      (~ (else_else_else_case_1_if_acc_1_cse[31])) | else_land_lpi_1_dfm_2;
  assign mux_111_nl = MUX_s_1_2_2({(~ and_tmp) , or_tmp_56}, or_tmp_55);
  assign mux_tmp_78 = MUX_s_1_2_2({(else_else_land_lpi_1_dfm | (mux_111_nl)) , or_tmp_51},
      cur_stateIN_sva_sg2);
  assign or_tmp_59 = else_else_else_case_0_slc_svs_1 | (else_else_else_case_0_oelse_acc_1_itm[31]);
  assign or_tmp_62 = equal_tmp_7 | else_land_lpi_1_dfm_2;
  assign mux_114_nl = MUX_s_1_2_2({equal_tmp_7 , (~ else_land_lpi_1_dfm_2)}, nor_dfs_1);
  assign mux_115_nl = MUX_s_1_2_2({(mux_114_nl) , (~((~ nor_dfs_1) | else_land_lpi_1_dfm_2))},
      equal_tmp_6);
  assign mux_117_nl = MUX_s_1_2_2({equal_tmp_7 , or_tmp_62}, nor_dfs_1 & (~ equal_tmp_6));
  assign mux_118_nl = MUX_s_1_2_2({(mux_117_nl) , (mux_115_nl)}, or_tmp_59);
  assign mux_tmp_85 = MUX_s_1_2_2({(else_else_land_lpi_1_dfm | (~ (mux_118_nl)))
      , or_tmp_51}, cur_stateIN_sva_sg2);
  assign mux_110_nl = MUX_s_1_2_2({mux_tmp_75 , mux_tmp_72}, cur_stateIN_sva_16);
  assign mux_113_nl = MUX_s_1_2_2({mux_tmp_78 , or_tmp_49}, else_else_nor_tmp);
  assign mux_120_nl = MUX_s_1_2_2({mux_tmp_85 , (mux_113_nl)}, cur_stateIN_sva_16);
  assign mux_121_cse = MUX_s_1_2_2({(mux_120_nl) , (mux_110_nl)}, cur_stateIN_sva_sg1);
  assign or_tmp_65 = cur_stateIN_sva_dfm_25 | (~ mux_121_cse);
  assign or_tmp_66 = cur_stateIN_sva_dfm_25 | cur_stateIN_sva_16;
  assign mux_tmp_89 = MUX_s_1_2_2({(~((~ cur_stateIN_sva_sg2) | else_else_land_lpi_1_dfm
      | (~ or_tmp_19))) , (cur_stateIN_sva_sg2 & or_tmp_51)}, else_else_nor_tmp);
  assign mux_tmp_90 = MUX_s_1_2_2({(or_tmp_66 | (~ mux_tmp_89)) , or_tmp_65}, cur_stateIN_sva_dfm_18_sg2);
  assign or_tmp_72 = cur_stateIN_sva_16 | (~ mux_tmp_89);
  assign or_tmp_74 = cur_stateIN_sva_dfm_25 | (~ cur_stateIN_sva_sg1) | cur_stateIN_sva_16;
  assign or_tmp_75 = else_else_land_lpi_1_dfm | (~ or_tmp_19);
  assign mux_128_nl = MUX_s_1_2_2({(~ or_tmp_19) , mux_tmp_73}, equal_tmp_6);
  assign mux_129_nl = MUX_s_1_2_2({(else_else_land_lpi_1_dfm | (mux_128_nl)) , or_tmp_75},
      cur_stateIN_sva_sg2);
  assign not_tmp_16 = MUX_s_1_2_2({(mux_129_nl) , (~ mux_tmp_75)}, else_else_nor_tmp);
  assign or_tmp_78 = or_tmp_74 | not_tmp_16;
  assign or_tmp_79 = (~ cur_stateIN_sva_sg1) | cur_stateIN_sva_16;
  assign mux_133_nl = MUX_s_1_2_2({(or_tmp_74 | (~ mux_tmp_89)) , or_tmp_78}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_134_nl = MUX_s_1_2_2({(mux_133_nl) , mux_tmp_90}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_tmp_101 = MUX_s_1_2_2({(or_tmp_79 | (~ mux_tmp_89)) , (mux_134_nl)},
      else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_89 = or_tmp_79 | (~ cur_stateIN_sva_sg2);
  assign or_tmp_90 = else_else_else_switch_lp_and_27_itm_1 | (~ mux_tmp_71);
  assign or_tmp_91 = cur_stateIN_sva_16 | cur_stateIN_sva_sg2;
  assign mux_tmp_108 = MUX_s_1_2_2({mux_tmp_85 , mux_tmp_78}, cur_stateIN_sva_16);
  assign mux_141_nl = MUX_s_1_2_2({or_tmp_54 , or_tmp_51}, or_tmp_91);
  assign mux_tmp_109 = MUX_s_1_2_2({mux_tmp_108 , (mux_141_nl)}, cur_stateIN_sva_sg1);
  assign nor_tmp_21 = else_else_else_switch_lp_and_17_itm_1 & cur_stateIN_sva_dfm_18_sg2;
  assign nor_tmp_23 = cur_stateIN_sva_16 & else_else_nor_tmp;
  assign mux_146_nl = MUX_s_1_2_2({(~ or_tmp_19) , mux_tmp_70}, equal_tmp_7);
  assign mux_147_nl = MUX_s_1_2_2({(mux_146_nl) , (~ or_tmp_56)}, or_tmp_55);
  assign mux_148_cse = MUX_s_1_2_2({(else_else_land_lpi_1_dfm | (mux_147_nl)) , or_tmp_75},
      cur_stateIN_sva_sg2);
  assign not_tmp_23 = MUX_s_1_2_2({(nor_tmp_23 & (~ mux_148_cse)) , (cur_stateIN_sva_16
      & else_else_nor_tmp & (~ else_else_land_lpi_1_dfm) & or_tmp_19)}, cur_stateIN_sva_sg1);
  assign mux_151_nl = MUX_s_1_2_2({not_tmp_23 , mux_tmp_109}, cur_stateIN_sva_dfm_25);
  assign mux_152_nl = MUX_s_1_2_2({(or_tmp_66 & else_else_nor_tmp & cur_stateIN_sva_sg2
      & (~ else_else_land_lpi_1_dfm) & or_tmp_19) , (mux_151_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_119 = MUX_s_1_2_2({(cur_stateIN_sva_16 & else_else_nor_tmp & cur_stateIN_sva_sg2
      & (~ else_else_land_lpi_1_dfm) & or_tmp_19) , (mux_152_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign nor_tmp_24 = else_else_else_switch_lp_and_17_itm_1 & cur_stateIN_sva_dfm_18_sg1;
  assign mux_tmp_124 = MUX_s_1_2_2({(~ mux_tmp_108) , (else_else_nor_tmp | (~ or_tmp_49))},
      cur_stateIN_sva_sg1);
  assign or_tmp_106 = cur_stateIN_sva_sg1 | (~ else_else_nor_tmp) | (~ cur_stateIN_sva_sg2)
      | else_else_land_lpi_1_dfm | (~ or_tmp_19);
  assign nand_tmp_1 = cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_16) | (~ else_else_nor_tmp)
      | mux_148_cse;
  assign or_tmp_110 = cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_16) | (~ else_else_nor_tmp)
      | (~ cur_stateIN_sva_sg2) | else_else_land_lpi_1_dfm | (~ or_tmp_19);
  assign mux_1502_nl = MUX_s_1_2_2({nand_tmp_1 , mux_tmp_124}, cur_stateIN_sva_dfm_25);
  assign mux_164_nl = MUX_s_1_2_2({or_tmp_110 , or_tmp_106}, cur_stateIN_sva_dfm_25);
  assign mux_165_nl = MUX_s_1_2_2({(mux_164_nl) , (mux_1502_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_132 = MUX_s_1_2_2({or_tmp_110 , (cur_stateIN_sva_dfm_18_sg1 | (mux_165_nl))},
      else_else_else_switch_lp_and_17_itm_1);
  assign nor_tmp_26 = cur_stateIN_sva_16 & cur_stateIN_sva_sg2;
  assign mux_177_nl = MUX_s_1_2_2({(~ mux_148_cse) , mux_tmp_78}, else_else_nor_tmp);
  assign and_tmp_3 = cur_stateIN_sva_16 & (mux_177_nl);
  assign mux_176_nl = MUX_s_1_2_2({(~ or_tmp_75) , or_tmp_51}, else_else_nor_tmp);
  assign mux_tmp_144 = MUX_s_1_2_2({and_tmp_3 , (cur_stateIN_sva_16 & (mux_176_nl))},
      cur_stateIN_sva_sg1);
  assign and_tmp_5 = cur_stateIN_sva_16 & mux_tmp_89;
  assign mux_180_nl = MUX_s_1_2_2({mux_tmp_144 , mux_tmp_109}, cur_stateIN_sva_dfm_25);
  assign mux_181_nl = MUX_s_1_2_2({(or_tmp_66 & mux_tmp_89) , (mux_180_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_148 = MUX_s_1_2_2({and_tmp_5 , (mux_181_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_187_nl = MUX_s_1_2_2({mux_tmp_75 , or_tmp_49}, else_else_nor_tmp);
  assign mux_188_nl = MUX_s_1_2_2({(mux_187_nl) , mux_tmp_72}, cur_stateIN_sva_16);
  assign mux_tmp_155 = MUX_s_1_2_2({mux_tmp_108 , (mux_188_nl)}, cur_stateIN_sva_sg1);
  assign or_tmp_119 = cur_stateIN_sva_sg1 | (~ mux_tmp_89);
  assign mux_tmp_159 = MUX_s_1_2_2({(~ and_tmp_3) , (cur_stateIN_sva_16 | not_tmp_16)},
      cur_stateIN_sva_sg1);
  assign mux_tmp_160 = MUX_s_1_2_2({(~ mux_tmp_159) , mux_tmp_155}, cur_stateIN_sva_dfm_25);
  assign mux_tmp_163 = MUX_s_1_2_2({(~ and_tmp_5) , or_tmp_72}, cur_stateIN_sva_sg1);
  assign mux_198_nl = MUX_s_1_2_2({mux_tmp_163 , or_tmp_119}, cur_stateIN_sva_dfm_25);
  assign mux_199_nl = MUX_s_1_2_2({(mux_198_nl) , (~ mux_tmp_160)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_200_nl = MUX_s_1_2_2({(mux_199_nl) , mux_tmp_90}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_tmp_167 = MUX_s_1_2_2({mux_tmp_163 , (mux_200_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign or_dcpl_2 = land_lpi_1_dfm_1 | (~ main_stage_0_2);
  assign or_dcpl_3 = else_else_land_lpi_1_dfm | else_land_lpi_1_dfm_2;
  assign or_tmp_289 = stop_rsc_mgc_in_wire_d | (if_acc_itm[31]);
  assign or_tmp_290 = (~ start_rsc_mgc_in_wire_d) | else_else_land_lpi_1_dfm;
  assign or_tmp_291 = else_land_lpi_1_dfm_2 | else_else_else_switch_lp_and_27_itm_1;
  assign and_tmp_18 = equal_tmp_7 & (else_land_lpi_1_dfm_2 | nor_17_cse);
  assign mux_tmp_394 = MUX_s_1_2_2({((~ start_rsc_mgc_in_wire_d) | else_else_land_lpi_1_dfm
      | equal_tmp_7) , (or_tmp_290 | and_tmp_18)}, ~(cur_stateIN_sva_sg1 | cur_stateIN_sva_sg2
      | (~ cur_stateIN_sva_16)));
  assign or_tmp_297 = cur_stateIN_sva_sg1 | cur_stateIN_sva_sg2 | cur_stateIN_sva_16
      | (~ start_rsc_mgc_in_wire_d) | else_else_land_lpi_1_dfm | equal_tmp_6 | equal_tmp_7
      | else_land_lpi_1_dfm_2 | else_else_else_case_0_slc_svs_1 | (else_else_else_case_0_oelse_acc_1_itm[31]);
  assign or_tmp_298 = cur_stateIN_sva_sg2 | cur_stateIN_sva_16;
  assign or_tmp_299 = (~ start_rsc_mgc_in_wire_d) | else_else_land_lpi_1_dfm | equal_tmp_6
      | equal_tmp_7;
  assign or_tmp_301 = equal_tmp_6 | equal_tmp_7;
  assign mux_429_nl = MUX_s_1_2_2({equal_tmp_7 , or_tmp_62}, equal_tmp_6);
  assign mux_tmp_396 = MUX_s_1_2_2({(mux_429_nl) , or_tmp_301}, nor_17_cse);
  assign or_tmp_303 = or_tmp_290 | mux_tmp_396;
  assign or_tmp_305 = (~ start_rsc_mgc_in_wire_d) | else_else_land_lpi_1_dfm | equal_tmp_6
      | and_tmp_18;
  assign mux_tmp_398 = MUX_s_1_2_2({or_tmp_299 , or_tmp_305}, ~(cur_stateIN_sva_sg2
      | (~ cur_stateIN_sva_16)));
  assign mux_431_nl = MUX_s_1_2_2({or_tmp_303 , or_tmp_299}, or_tmp_298);
  assign mux_433_nl = MUX_s_1_2_2({mux_tmp_398 , (mux_431_nl)}, cur_stateIN_sva_sg1);
  assign mux_tmp_400 = MUX_s_1_2_2({(mux_433_nl) , or_tmp_297}, nor_dfs_1);
  assign nand_tmp_9 = ~(start_rsc_mgc_in_wire_d & (~((~ or_tmp_19) | else_else_land_lpi_1_dfm
      | equal_tmp_6 | equal_tmp_7)));
  assign mux_435_cse = MUX_s_1_2_2({nand_tmp_9 , or_tmp_299}, else_else_nor_tmp);
  assign nand_tmp_10 = nor_dfs_1 | (~ cur_stateIN_sva_sg2) | mux_435_cse;
  assign nand_tmp_11 = ~(cur_stateIN_sva_16 & (~ mux_435_cse));
  assign or_tmp_311 = else_else_land_lpi_1_dfm | equal_tmp_6 | and_tmp_18;
  assign mux_438_nl = MUX_s_1_2_2({(else_else_land_lpi_1_dfm | equal_tmp_6 | (~ equal_tmp_7)
      | else_land_lpi_1_dfm_2 | nor_17_cse) , or_tmp_311}, or_tmp_19);
  assign mux_439_nl = MUX_s_1_2_2({(~(start_rsc_mgc_in_wire_d & (~ (mux_438_nl))))
      , or_tmp_305}, else_else_nor_tmp);
  assign nand_tmp_13 = ~(cur_stateIN_sva_16 & (~ (mux_439_nl)));
  assign mux_440_cse = MUX_s_1_2_2({nand_tmp_13 , nand_tmp_11}, cur_stateIN_sva_sg1
      | cur_stateIN_sva_sg2);
  assign or_tmp_314 = nor_dfs_1 | mux_440_cse;
  assign nand_tmp_14 = nor_dfs_1 | (~ cur_stateIN_sva_sg2) | (~ cur_stateIN_sva_16)
      | mux_435_cse;
  assign mux_442_nl = MUX_s_1_2_2({or_tmp_314 , mux_tmp_400}, cur_stateIN_sva_dfm_25);
  assign mux_443_nl = MUX_s_1_2_2({nand_tmp_14 , nand_tmp_10}, cur_stateIN_sva_dfm_25);
  assign mux_444_nl = MUX_s_1_2_2({(mux_443_nl) , (mux_442_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_411 = MUX_s_1_2_2({nand_tmp_14 , (mux_444_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_316 = (~ start_rsc_mgc_in_wire_d) | else_else_else_switch_lp_and_26_itm_1
      | else_else_else_switch_lp_and_32_itm_1 | else_else_land_lpi_1_dfm | equal_tmp_6
      | equal_tmp_7;
  assign mux_450_nl = MUX_s_1_2_2({or_tmp_299 , or_tmp_316}, else_else_nor_tmp);
  assign mux_451_nl = MUX_s_1_2_2({or_tmp_303 , or_tmp_316}, else_else_nor_tmp);
  assign mux_452_nl = MUX_s_1_2_2({(mux_451_nl) , (mux_450_nl)}, or_tmp_298);
  assign mux_453_nl = MUX_s_1_2_2({mux_tmp_398 , (mux_452_nl)}, cur_stateIN_sva_sg1);
  assign mux_tmp_420 = MUX_s_1_2_2({(mux_453_nl) , or_tmp_297}, nor_dfs_1);
  assign or_tmp_318 = cur_stateIN_sva_dfm_18_sg1 | mux_tmp_420;
  assign nand_tmp_15 = cur_stateIN_sva_dfm_18_sg1 | nor_dfs_1 | cur_stateIN_sva_sg1
      | (~ cur_stateIN_sva_sg2) | mux_435_cse;
  assign nand_tmp_16 = nor_dfs_1 | cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_sg2)
      | mux_435_cse;
  assign mux_tmp_424 = MUX_s_1_2_2({nand_tmp_13 , nand_tmp_11}, cur_stateIN_sva_sg2);
  assign mux_tmp_425 = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | nor_dfs_1 | cur_stateIN_sva_sg1
      | mux_tmp_424) , or_tmp_318}, cur_stateIN_sva_dfm_25);
  assign or_tmp_322 = nor_dfs_1 | cur_stateIN_sva_sg1 | mux_tmp_424;
  assign mux_461_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | nor_dfs_1 | cur_stateIN_sva_sg1
      | (~ cur_stateIN_sva_sg2) | (~ cur_stateIN_sva_16) | mux_435_cse) , nand_tmp_15},
      cur_stateIN_sva_dfm_25);
  assign mux_462_nl = MUX_s_1_2_2({(mux_461_nl) , mux_tmp_425}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_429 = MUX_s_1_2_2({(nor_dfs_1 | cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_sg2)
      | (~ cur_stateIN_sva_16) | mux_435_cse) , (mux_462_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_325 = cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_sg2) | (~ cur_stateIN_sva_16)
      | (~ start_rsc_mgc_in_wire_d) | else_else_land_lpi_1_dfm;
  assign or_tmp_326 = else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1
      | else_else_land_lpi_1_dfm | equal_tmp_6 | equal_tmp_7;
  assign or_tmp_327 = else_else_land_lpi_1_dfm | equal_tmp_6 | equal_tmp_7;
  assign mux_tmp_441 = MUX_s_1_2_2({or_tmp_327 , or_tmp_326}, nor_tmp_23);
  assign mux_tmp_442 = MUX_s_1_2_2({or_tmp_327 , or_tmp_326}, else_else_nor_tmp);
  assign or_tmp_329 = else_else_land_lpi_1_dfm | mux_tmp_396;
  assign or_tmp_335 = or_dcpl_3 | (~ or_tmp_59);
  assign mux_479_nl = MUX_s_1_2_2({or_tmp_311 , or_tmp_326}, else_else_nor_tmp);
  assign mux_481_nl = MUX_s_1_2_2({or_tmp_335 , (mux_479_nl)}, cur_stateIN_sva_16);
  assign mux_tmp_448 = MUX_s_1_2_2({(mux_481_nl) , mux_tmp_441}, cur_stateIN_sva_sg2);
  assign mux_477_nl = MUX_s_1_2_2({or_tmp_329 , mux_tmp_442}, cur_stateIN_sva_16);
  assign mux_478_nl = MUX_s_1_2_2({(mux_477_nl) , mux_tmp_441}, cur_stateIN_sva_sg2);
  assign mux_483_nl = MUX_s_1_2_2({mux_tmp_448 , (mux_478_nl)}, cur_stateIN_sva_sg1);
  assign mux_486_nl = MUX_s_1_2_2({mux_440_cse , ((else_else_else_case_0_if_mux_3_itm_1[0])
      | (mux_483_nl))}, nor_dfs_1);
  assign mux_tmp_453 = MUX_s_1_2_2({or_tmp_314 , (mux_486_nl)}, else_else_else_case_0_if_acc_3[31]);
  assign or_tmp_340 = (~ else_else_nor_tmp) | else_else_land_lpi_1_dfm;
  assign or_tmp_341 = else_else_land_lpi_1_dfm | reg_else_else_else_case_1_slc_svs_1_cse
      | (~ (else_else_else_case_1_if_acc_1_cse[31])) | (~ equal_tmp_6) | else_land_lpi_1_dfm_2;
  assign or_tmp_344 = else_else_land_lpi_1_dfm | (~ equal_tmp_7) | else_land_lpi_1_dfm_2
      | reg_else_else_else_case_1_slc_svs_1_cse | (~ (else_else_else_case_1_if_acc_1_cse[31]));
  assign mux_492_nl = MUX_s_1_2_2({or_tmp_344 , else_else_land_lpi_1_dfm}, else_else_nor_tmp);
  assign mux_494_nl = MUX_s_1_2_2({or_tmp_335 , (mux_492_nl)}, cur_stateIN_sva_16);
  assign mux_tmp_461 = MUX_s_1_2_2({(mux_494_nl) , or_tmp_340}, cur_stateIN_sva_sg2);
  assign or_tmp_347 = else_else_land_lpi_1_dfm | (~ or_tmp_301);
  assign nor_94_cse = ~(else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1);
  assign mux_497_cse_1 = MUX_s_1_2_2({else_else_land_lpi_1_dfm , or_tmp_347}, nor_94_cse);
  assign mux_1512_nl = MUX_s_1_2_2({else_else_land_lpi_1_dfm , or_tmp_347}, nor_94_cse);
  assign mux_tmp_464 = MUX_s_1_2_2({or_tmp_347 , (mux_1512_nl)}, else_else_nor_tmp);
  assign mux_500_nl = MUX_s_1_2_2({or_tmp_347 , else_else_land_lpi_1_dfm}, else_else_nor_tmp);
  assign mux_tmp_467 = MUX_s_1_2_2({(mux_500_nl) , mux_tmp_464}, cur_stateIN_sva_16);
  assign mux_506_nl = MUX_s_1_2_2({or_tmp_344 , mux_497_cse_1}, else_else_nor_tmp);
  assign mux_507_nl = MUX_s_1_2_2({or_tmp_347 , (mux_506_nl)}, cur_stateIN_sva_16);
  assign mux_tmp_474 = MUX_s_1_2_2({(mux_507_nl) , mux_tmp_467}, cur_stateIN_sva_sg2);
  assign mux_511_cse = MUX_s_1_2_2({or_tmp_347 , else_else_land_lpi_1_dfm}, or_tmp_19);
  assign mux_1513_nl = MUX_s_1_2_2({or_tmp_347 , else_else_land_lpi_1_dfm}, or_tmp_19);
  assign mux_515_cse = MUX_s_1_2_2({or_tmp_347 , (mux_1513_nl)}, else_else_nor_tmp);
  assign mux_519_nl = MUX_s_1_2_2({or_tmp_344 , mux_511_cse}, else_else_nor_tmp);
  assign mux_520_nl = MUX_s_1_2_2({or_tmp_347 , (mux_519_nl)}, cur_stateIN_sva_16);
  assign mux_tmp_487 = MUX_s_1_2_2({(mux_520_nl) , mux_515_cse}, cur_stateIN_sva_sg2);
  assign nor_tmp_86 = cur_stateIN_sva_sg2 & cur_stateIN_sva_16 & else_else_nor_tmp
      & start_rsc_mgc_in_wire_d & else_else_land_lpi_1_dfm;
  assign nor_tmp_87 = cur_stateIN_sva_sg2 & cur_stateIN_sva_16;
  assign mux_524_nl = MUX_s_1_2_2({(~ nand_tmp_9) , (start_rsc_mgc_in_wire_d & mux_511_cse)},
      else_else_nor_tmp);
  assign and_tmp_20 = nor_tmp_87 & (mux_524_nl);
  assign mux_491_nl = MUX_s_1_2_2({or_tmp_341 , or_tmp_340}, or_tmp_298);
  assign mux_496_nl = MUX_s_1_2_2({mux_tmp_461 , (mux_491_nl)}, cur_stateIN_sva_sg1);
  assign mux_503_nl = MUX_s_1_2_2({or_tmp_341 , mux_tmp_464}, cur_stateIN_sva_16);
  assign mux_504_nl = MUX_s_1_2_2({(mux_503_nl) , mux_tmp_467}, cur_stateIN_sva_sg2);
  assign mux_509_nl = MUX_s_1_2_2({mux_tmp_474 , (mux_504_nl)}, cur_stateIN_sva_sg1);
  assign mux_510_nl = MUX_s_1_2_2({(mux_509_nl) , (mux_496_nl)}, else_else_else_case_0_if_mux_3_itm_1[0]);
  assign mux_517_nl = MUX_s_1_2_2({or_tmp_341 , mux_515_cse}, cur_stateIN_sva_16);
  assign mux_518_nl = MUX_s_1_2_2({(mux_517_nl) , mux_515_cse}, cur_stateIN_sva_sg2);
  assign mux_522_nl = MUX_s_1_2_2({mux_tmp_487 , (mux_518_nl)}, cur_stateIN_sva_sg1);
  assign mux_523_nl = MUX_s_1_2_2({(mux_522_nl) , (mux_510_nl)}, nor_dfs_1);
  assign mux_525_nl = MUX_s_1_2_2({and_tmp_20 , nor_tmp_86}, nor_dfs_1);
  assign mux_526_itm = MUX_s_1_2_2({(mux_525_nl) , (mux_523_nl)}, else_else_else_case_0_if_acc_3[31]);
  assign mux_489_nl = MUX_s_1_2_2({mux_tmp_453 , mux_tmp_400}, cur_stateIN_sva_dfm_25);
  assign mux_527_nl = MUX_s_1_2_2({(~ mux_526_itm) , nand_tmp_10}, cur_stateIN_sva_dfm_25);
  assign mux_528_nl = MUX_s_1_2_2({(mux_527_nl) , (mux_489_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_495 = MUX_s_1_2_2({(~ mux_526_itm) , (mux_528_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_360 = cur_stateIN_sva_dfm_18_sg1 | nand_tmp_16;
  assign or_tmp_361 = (else_else_else_case_0_if_mux_3_itm_1[1]) | (else_else_else_case_0_if_mux_3_itm_1[0]);
  assign mux_544_nl = MUX_s_1_2_2({or_tmp_329 , or_tmp_326}, else_else_nor_tmp);
  assign mux_545_nl = MUX_s_1_2_2({(mux_544_nl) , mux_tmp_442}, or_tmp_298);
  assign mux_546_nl = MUX_s_1_2_2({mux_tmp_448 , (mux_545_nl)}, cur_stateIN_sva_sg1);
  assign mux_548_nl = MUX_s_1_2_2({(cur_stateIN_sva_sg1 | mux_tmp_424) , (or_tmp_361
      | (mux_546_nl))}, nor_dfs_1);
  assign mux_tmp_515 = MUX_s_1_2_2({or_tmp_322 , (mux_548_nl)}, else_else_else_case_0_if_acc_3[31]);
  assign mux_tmp_516 = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | mux_tmp_515) ,
      or_tmp_318}, cur_stateIN_sva_dfm_25);
  assign mux_552_nl = MUX_s_1_2_2({or_tmp_341 , else_else_land_lpi_1_dfm}, else_else_nor_tmp);
  assign mux_553_nl = MUX_s_1_2_2({(mux_552_nl) , or_tmp_340}, or_tmp_298);
  assign mux_554_nl = MUX_s_1_2_2({mux_tmp_461 , (mux_553_nl)}, cur_stateIN_sva_sg1);
  assign mux_555_nl = MUX_s_1_2_2({or_tmp_341 , mux_497_cse_1}, else_else_nor_tmp);
  assign mux_556_nl = MUX_s_1_2_2({(mux_555_nl) , mux_tmp_464}, or_tmp_298);
  assign mux_557_nl = MUX_s_1_2_2({mux_tmp_474 , (mux_556_nl)}, cur_stateIN_sva_sg1);
  assign mux_558_nl = MUX_s_1_2_2({(mux_557_nl) , (mux_554_nl)}, or_tmp_361);
  assign mux_559_nl = MUX_s_1_2_2({or_tmp_341 , mux_511_cse}, else_else_nor_tmp);
  assign mux_560_nl = MUX_s_1_2_2({(mux_559_nl) , mux_515_cse}, or_tmp_298);
  assign mux_561_nl = MUX_s_1_2_2({mux_tmp_487 , (mux_560_nl)}, cur_stateIN_sva_sg1);
  assign mux_562_nl = MUX_s_1_2_2({(mux_561_nl) , (mux_558_nl)}, nor_dfs_1);
  assign mux_563_nl = MUX_s_1_2_2({(~(cur_stateIN_sva_sg1 | (~ and_tmp_20))) , (~(cur_stateIN_sva_sg1
      | (~ nor_tmp_86)))}, nor_dfs_1);
  assign mux_564_itm = MUX_s_1_2_2({(mux_563_nl) , (mux_562_nl)}, else_else_else_case_0_if_acc_3[31]);
  assign mux_565_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | (~ mux_564_itm))
      , or_tmp_360}, cur_stateIN_sva_dfm_25);
  assign mux_566_nl = MUX_s_1_2_2({(mux_565_nl) , mux_tmp_516}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_533 = MUX_s_1_2_2({(~ mux_564_itm) , (mux_566_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_383 = nor_17_cse | else_land_lpi_1_dfm_2 | else_else_land_lpi_1_dfm;
  assign mux_tmp_545 = MUX_s_1_2_2({else_else_land_lpi_1_dfm , or_tmp_383}, equal_tmp_7);
  assign mux_tmp_546 = MUX_s_1_2_2({(~(start_rsc_mgc_in_wire_d & (~ mux_tmp_545)))
      , ((~ start_rsc_mgc_in_wire_d) | equal_tmp_7 | else_else_land_lpi_1_dfm)},
      or_tmp_44);
  assign or_tmp_386 = nor_dfs_1 | (~ start_rsc_mgc_in_wire_d) | equal_tmp_6 | equal_tmp_7
      | else_else_land_lpi_1_dfm;
  assign nor_tmp_93 = ~(nor_dfs_1 | (~ start_rsc_mgc_in_wire_d));
  assign mux_tmp_547 = MUX_s_1_2_2({(equal_tmp_7 | else_else_land_lpi_1_dfm) , (nor_17_cse
      | equal_tmp_7 | else_land_lpi_1_dfm_2 | else_else_land_lpi_1_dfm)}, equal_tmp_6);
  assign nand_tmp_26 = ~(nor_tmp_93 & (~ mux_tmp_547));
  assign or_tmp_390 = nor_dfs_1 | (~ start_rsc_mgc_in_wire_d) | equal_tmp_6 | mux_tmp_545;
  assign or_tmp_392 = (~ start_rsc_mgc_in_wire_d) | equal_tmp_6 | equal_tmp_7 | else_else_land_lpi_1_dfm;
  assign mux_583_nl = MUX_s_1_2_2({or_tmp_390 , or_tmp_386}, cur_stateIN_sva_sg2);
  assign mux_584_nl = MUX_s_1_2_2({or_tmp_392 , ((~ start_rsc_mgc_in_wire_d) | else_else_else_case_0_slc_svs_1
      | (else_else_else_case_0_oelse_acc_1_itm[31]) | equal_tmp_6 | equal_tmp_7 |
      else_land_lpi_1_dfm_2 | else_else_land_lpi_1_dfm)}, nor_dfs_1);
  assign mux_585_nl = MUX_s_1_2_2({(mux_584_nl) , or_tmp_386}, cur_stateIN_sva_sg2);
  assign mux_tmp_552 = MUX_s_1_2_2({(mux_585_nl) , (mux_583_nl)}, cur_stateIN_sva_16);
  assign mux_582_nl = MUX_s_1_2_2({nand_tmp_26 , or_tmp_386}, or_tmp_91);
  assign mux_tmp_553 = MUX_s_1_2_2({mux_tmp_552 , (mux_582_nl)}, cur_stateIN_sva_sg1);
  assign not_tmp_165 = ~((~ or_tmp_19) | equal_tmp_6 | equal_tmp_7 | else_else_land_lpi_1_dfm);
  assign nand_tmp_27 = ~(nor_tmp_93 & not_tmp_165);
  assign mux_tmp_554 = MUX_s_1_2_2({nand_tmp_27 , or_tmp_386}, else_else_nor_tmp);
  assign nand_tmp_28 = ~(cur_stateIN_sva_sg2 & (~ mux_tmp_554));
  assign not_tmp_168 = MUX_s_1_2_2({(~(equal_tmp_6 | (~ equal_tmp_7) | or_tmp_383))
      , (~(equal_tmp_6 | mux_tmp_545))}, or_tmp_19);
  assign mux_592_nl = MUX_s_1_2_2({(~(nor_tmp_93 & not_tmp_168)) , or_tmp_390}, else_else_nor_tmp);
  assign mux_593_cse = MUX_s_1_2_2({(mux_592_nl) , mux_tmp_554}, cur_stateIN_sva_sg2);
  assign nand_32_cse = ~(cur_stateIN_sva_16 & (~ mux_593_cse));
  assign mux_tmp_560 = MUX_s_1_2_2({nand_32_cse , (~(cur_stateIN_sva_16 & (~ mux_tmp_554)))},
      cur_stateIN_sva_sg1);
  assign mux_596_nl = MUX_s_1_2_2({mux_tmp_560 , mux_tmp_553}, cur_stateIN_sva_dfm_25);
  assign mux_597_nl = MUX_s_1_2_2({(~(or_tmp_66 & cur_stateIN_sva_sg2 & (~ mux_tmp_554)))
      , (mux_596_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_564 = MUX_s_1_2_2({(~(nor_tmp_26 & (~ mux_tmp_554))) , (mux_597_nl)},
      else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_400 = nor_dfs_1 | (~ start_rsc_mgc_in_wire_d) | else_else_else_switch_lp_and_26_itm_1
      | else_else_else_switch_lp_and_32_itm_1 | equal_tmp_6 | equal_tmp_7 | else_else_land_lpi_1_dfm;
  assign mux_603_nl = MUX_s_1_2_2({or_tmp_386 , or_tmp_400}, else_else_nor_tmp);
  assign mux_604_nl = MUX_s_1_2_2({nand_tmp_26 , or_tmp_400}, else_else_nor_tmp);
  assign mux_605_nl = MUX_s_1_2_2({(mux_604_nl) , (mux_603_nl)}, or_tmp_91);
  assign mux_tmp_572 = MUX_s_1_2_2({mux_tmp_552 , (mux_605_nl)}, cur_stateIN_sva_sg1);
  assign or_tmp_402 = cur_stateIN_sva_dfm_18_sg1 | mux_tmp_572;
  assign nand_tmp_35 = cur_stateIN_sva_dfm_18_sg1 | cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_sg2)
      | mux_tmp_554;
  assign nand_tmp_36 = cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_sg2) | mux_tmp_554;
  assign mux_tmp_576 = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | cur_stateIN_sva_sg1
      | (~ cur_stateIN_sva_16) | mux_593_cse) , or_tmp_402}, cur_stateIN_sva_dfm_25);
  assign nand_tmp_38 = cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_16) | mux_593_cse;
  assign nor_tmp_108 = ~(cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_16) | (~ cur_stateIN_sva_sg2));
  assign mux_612_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | cur_stateIN_sva_sg1
      | (~ cur_stateIN_sva_16) | (~ cur_stateIN_sva_sg2) | mux_tmp_554) , nand_tmp_35},
      cur_stateIN_sva_dfm_25);
  assign mux_613_nl = MUX_s_1_2_2({(mux_612_nl) , mux_tmp_576}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_580 = MUX_s_1_2_2({(~(nor_tmp_108 & (~ mux_tmp_554))) , (mux_613_nl)},
      else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_405 = cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_16) | (~ cur_stateIN_sva_sg2)
      | (~ start_rsc_mgc_in_wire_d) | else_else_land_lpi_1_dfm;
  assign or_tmp_406 = (~ nor_dfs_1) | else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1
      | (else_else_else_case_0_if_mux_3_itm_1[0]) | equal_tmp_6 | equal_tmp_7 | else_else_land_lpi_1_dfm;
  assign or_tmp_407 = else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1
      | (else_else_else_case_0_if_mux_3_itm_1[0]) | equal_tmp_6 | equal_tmp_7 | else_else_land_lpi_1_dfm;
  assign mux_626_nl = MUX_s_1_2_2({or_tmp_392 , or_tmp_407}, nor_dfs_1);
  assign mux_628_nl = MUX_s_1_2_2({(~(start_rsc_mgc_in_wire_d & not_tmp_165)) , ((else_else_else_case_0_if_mux_3_itm_1[0])
      | equal_tmp_6 | equal_tmp_7 | else_else_land_lpi_1_dfm)}, nor_dfs_1);
  assign mux_tmp_595 = MUX_s_1_2_2({(mux_628_nl) , (mux_626_nl)}, else_else_nor_tmp);
  assign or_tmp_409 = (~ nor_dfs_1) | (else_else_else_case_0_if_mux_3_itm_1[0]) |
      equal_tmp_6 | equal_tmp_7 | else_else_land_lpi_1_dfm;
  assign or_tmp_410 = (~ nor_dfs_1) | (else_else_else_case_0_if_mux_3_itm_1[0]);
  assign or_tmp_411 = or_tmp_410 | mux_tmp_547;
  assign or_435_cse = else_land_lpi_1_dfm_2 | else_else_land_lpi_1_dfm;
  assign mux_632_nl = MUX_s_1_2_2({((~ start_rsc_mgc_in_wire_d) | equal_tmp_6 | mux_tmp_545)
      , or_tmp_407}, nor_dfs_1);
  assign mux_634_nl = MUX_s_1_2_2({(~(start_rsc_mgc_in_wire_d & not_tmp_168)) , ((else_else_else_case_0_if_mux_3_itm_1[0])
      | equal_tmp_6 | mux_tmp_545)}, nor_dfs_1);
  assign mux_635_nl = MUX_s_1_2_2({(mux_634_nl) , (mux_632_nl)}, else_else_nor_tmp);
  assign mux_636_nl = MUX_s_1_2_2({(mux_635_nl) , mux_tmp_595}, cur_stateIN_sva_sg2);
  assign mux_638_nl = MUX_s_1_2_2({(equal_tmp_6 | equal_tmp_7 | (~ else_land_lpi_1_dfm_2)
      | else_else_land_lpi_1_dfm) , or_435_cse}, or_tmp_59);
  assign mux_639_nl = MUX_s_1_2_2({(or_tmp_410 | (mux_638_nl)) , or_tmp_409}, cur_stateIN_sva_sg2);
  assign mux_tmp_606 = MUX_s_1_2_2({(mux_639_nl) , (mux_636_nl)}, cur_stateIN_sva_16);
  assign mux_630_nl = MUX_s_1_2_2({or_tmp_411 , or_tmp_409}, cur_stateIN_sva_sg2);
  assign mux_631_nl = MUX_s_1_2_2({(mux_630_nl) , mux_tmp_595}, cur_stateIN_sva_16);
  assign mux_641_nl = MUX_s_1_2_2({mux_tmp_606 , (mux_631_nl)}, cur_stateIN_sva_sg1);
  assign mux_tmp_608 = MUX_s_1_2_2({(mux_641_nl) , mux_tmp_560}, else_else_else_case_0_if_acc_3[31]);
  assign or_441_cse = (~ or_tmp_301) | else_else_land_lpi_1_dfm;
  assign mux_tmp_611 = MUX_s_1_2_2({or_441_cse , ((~(equal_tmp_6 | equal_tmp_7))
      | else_else_land_lpi_1_dfm)}, or_tmp_19);
  assign mux_646_nl = MUX_s_1_2_2({(~(start_rsc_mgc_in_wire_d & mux_tmp_611)) , (~(start_rsc_mgc_in_wire_d
      & else_else_land_lpi_1_dfm))}, nor_dfs_1);
  assign mux_647_itm = MUX_s_1_2_2({nand_tmp_27 , (mux_646_nl)}, else_else_nor_tmp);
  assign or_tmp_429 = (~(else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1
      | (else_else_else_case_0_if_mux_3_itm_1[0]) | equal_tmp_6 | equal_tmp_7)) |
      else_else_land_lpi_1_dfm;
  assign or_tmp_431 = (~(else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1
      | equal_tmp_6 | equal_tmp_7)) | else_else_land_lpi_1_dfm;
  assign mux_tmp_614 = MUX_s_1_2_2({or_tmp_431 , or_tmp_429}, nor_dfs_1);
  assign mux_tmp_615 = MUX_s_1_2_2({or_tmp_431 , mux_tmp_611}, start_rsc_mgc_in_wire_d);
  assign nor_tmp_116 = nor_dfs_1 & (else_else_else_case_0_if_mux_3_itm_1[0]);
  assign or_tmp_433 = (~(nor_tmp_116 | equal_tmp_6 | equal_tmp_7)) | else_else_land_lpi_1_dfm;
  assign mux_650_nl = MUX_s_1_2_2({mux_tmp_615 , or_tmp_429}, nor_dfs_1);
  assign mux_tmp_618 = MUX_s_1_2_2({or_tmp_433 , (mux_650_nl)}, else_else_nor_tmp);
  assign mux_tmp_619 = MUX_s_1_2_2({or_tmp_433 , mux_tmp_614}, else_else_nor_tmp);
  assign mux_655_nl = MUX_s_1_2_2({or_tmp_431 , ((~((else_else_else_case_0_if_mux_3_itm_1[0])
      | equal_tmp_6 | equal_tmp_7)) | else_else_land_lpi_1_dfm)}, nor_dfs_1);
  assign mux_tmp_622 = MUX_s_1_2_2({or_tmp_433 , (mux_655_nl)}, else_else_nor_tmp);
  assign or_tmp_437 = (~ equal_tmp_6) | reg_else_else_else_case_1_slc_svs_1_cse |
      (~ (else_else_else_case_1_if_acc_1_cse[31])) | else_land_lpi_1_dfm_2 | else_else_land_lpi_1_dfm;
  assign or_tmp_440 = (~ equal_tmp_7) | else_else_land_lpi_1_dfm;
  assign mux_657_nl = MUX_s_1_2_2({((~ or_tmp_62) | else_else_land_lpi_1_dfm) , or_435_cse},
      nor_17_cse);
  assign mux_tmp_624 = MUX_s_1_2_2({or_tmp_440 , (mux_657_nl)}, equal_tmp_6);
  assign mux_tmp_625 = MUX_s_1_2_2({mux_tmp_624 , or_tmp_437}, nor_tmp_116);
  assign or_tmp_444 = or_tmp_56 | else_else_land_lpi_1_dfm;
  assign mux_662_nl = MUX_s_1_2_2({((~ else_land_lpi_1_dfm_2) | else_else_land_lpi_1_dfm)
      , or_435_cse}, nor_17_cse);
  assign nand_tmp_46 = ~(equal_tmp_7 & (~ (mux_662_nl)));
  assign mux_tmp_632 = MUX_s_1_2_2({((~(equal_tmp_6 | equal_tmp_7 | else_land_lpi_1_dfm_2))
      | else_else_land_lpi_1_dfm) , or_435_cse}, or_tmp_59);
  assign mux_663_nl = MUX_s_1_2_2({nand_tmp_46 , or_tmp_444}, nor_tmp_116 | equal_tmp_6);
  assign mux_664_nl = MUX_s_1_2_2({(mux_663_nl) , mux_tmp_614}, else_else_nor_tmp);
  assign mux_665_nl = MUX_s_1_2_2({(mux_664_nl) , mux_tmp_618}, cur_stateIN_sva_sg2);
  assign mux_667_nl = MUX_s_1_2_2({or_441_cse , mux_tmp_632}, nor_tmp_116);
  assign mux_668_nl = MUX_s_1_2_2({(mux_667_nl) , mux_tmp_622}, cur_stateIN_sva_sg2);
  assign mux_tmp_635 = MUX_s_1_2_2({(mux_668_nl) , (mux_665_nl)}, cur_stateIN_sva_16);
  assign mux_654_nl = MUX_s_1_2_2({mux_tmp_619 , mux_tmp_618}, cur_stateIN_sva_sg2);
  assign mux_660_nl = MUX_s_1_2_2({mux_tmp_625 , mux_tmp_622}, cur_stateIN_sva_sg2);
  assign mux_661_nl = MUX_s_1_2_2({(mux_660_nl) , (mux_654_nl)}, cur_stateIN_sva_16);
  assign mux_670_nl = MUX_s_1_2_2({mux_tmp_635 , (mux_661_nl)}, cur_stateIN_sva_sg1);
  assign mux_tmp_637 = MUX_s_1_2_2({(~ (mux_670_nl)) , (~(nor_tmp_26 & (~ mux_647_itm)))},
      else_else_else_case_0_if_acc_3[31]);
  assign mux_644_nl = MUX_s_1_2_2({mux_tmp_608 , mux_tmp_553}, cur_stateIN_sva_dfm_25);
  assign mux_672_nl = MUX_s_1_2_2({mux_tmp_637 , nand_tmp_28}, cur_stateIN_sva_dfm_25);
  assign mux_673_nl = MUX_s_1_2_2({(mux_672_nl) , (mux_644_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_640 = MUX_s_1_2_2({mux_tmp_637 , (mux_673_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_455 = cur_stateIN_sva_dfm_18_sg1 | nand_tmp_36;
  assign mux_688_nl = MUX_s_1_2_2({or_tmp_409 , or_tmp_406}, else_else_nor_tmp);
  assign mux_689_nl = MUX_s_1_2_2({or_tmp_411 , or_tmp_406}, else_else_nor_tmp);
  assign mux_690_nl = MUX_s_1_2_2({(mux_689_nl) , (mux_688_nl)}, or_tmp_91);
  assign mux_693_nl = MUX_s_1_2_2({mux_tmp_606 , nand_32_cse}, else_else_else_case_0_if_mux_3_itm_1[1]);
  assign mux_694_nl = MUX_s_1_2_2({(mux_693_nl) , ((else_else_else_case_0_if_mux_3_itm_1[1])
      | (mux_690_nl))}, cur_stateIN_sva_sg1);
  assign mux_tmp_661 = MUX_s_1_2_2({(mux_694_nl) , nand_tmp_38}, else_else_else_case_0_if_acc_3[31]);
  assign mux_tmp_662 = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | mux_tmp_661) ,
      or_tmp_402}, cur_stateIN_sva_dfm_25);
  assign or_tmp_461 = (~(nor_dfs_1 | else_else_else_switch_lp_and_26_itm_1 | else_else_else_switch_lp_and_32_itm_1
      | equal_tmp_6 | equal_tmp_7)) | else_else_land_lpi_1_dfm;
  assign or_tmp_462 = nor_dfs_1 | equal_tmp_6 | equal_tmp_7;
  assign or_tmp_463 = (~ or_tmp_462) | else_else_land_lpi_1_dfm;
  assign mux_tmp_664 = MUX_s_1_2_2({or_tmp_463 , or_tmp_461}, else_else_nor_tmp);
  assign or_tmp_465 = nor_dfs_1 | equal_tmp_6;
  assign mux_699_nl = MUX_s_1_2_2({mux_tmp_624 , or_tmp_437}, nor_dfs_1);
  assign mux_700_nl = MUX_s_1_2_2({(mux_699_nl) , or_tmp_461}, else_else_nor_tmp);
  assign mux_701_nl = MUX_s_1_2_2({(mux_700_nl) , mux_tmp_664}, or_tmp_91);
  assign mux_702_nl = MUX_s_1_2_2({mux_tmp_625 , mux_tmp_614}, else_else_nor_tmp);
  assign mux_703_nl = MUX_s_1_2_2({(mux_702_nl) , mux_tmp_619}, or_tmp_91);
  assign mux_704_nl = MUX_s_1_2_2({(mux_703_nl) , (mux_701_nl)}, else_else_else_case_0_if_mux_3_itm_1[1]);
  assign mux_705_nl = MUX_s_1_2_2({mux_tmp_615 , else_else_land_lpi_1_dfm}, nor_dfs_1);
  assign mux_707_nl = MUX_s_1_2_2({or_tmp_463 , (mux_705_nl)}, else_else_nor_tmp);
  assign mux_708_nl = MUX_s_1_2_2({nand_tmp_46 , or_tmp_444}, or_tmp_465);
  assign mux_709_nl = MUX_s_1_2_2({(mux_708_nl) , or_tmp_461}, else_else_nor_tmp);
  assign mux_710_nl = MUX_s_1_2_2({(mux_709_nl) , (mux_707_nl)}, cur_stateIN_sva_sg2);
  assign mux_711_nl = MUX_s_1_2_2({or_441_cse , mux_tmp_632}, nor_dfs_1);
  assign mux_712_nl = MUX_s_1_2_2({(mux_711_nl) , mux_tmp_664}, cur_stateIN_sva_sg2);
  assign mux_713_nl = MUX_s_1_2_2({(mux_712_nl) , (mux_710_nl)}, cur_stateIN_sva_16);
  assign mux_714_nl = MUX_s_1_2_2({mux_tmp_635 , (mux_713_nl)}, else_else_else_case_0_if_mux_3_itm_1[1]);
  assign mux_715_nl = MUX_s_1_2_2({(mux_714_nl) , (mux_704_nl)}, cur_stateIN_sva_sg1);
  assign mux_tmp_682 = MUX_s_1_2_2({(~ (mux_715_nl)) , (~(nor_tmp_108 & (~ mux_647_itm)))},
      else_else_else_case_0_if_acc_3[31]);
  assign mux_717_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | mux_tmp_682) , or_tmp_455},
      cur_stateIN_sva_dfm_25);
  assign mux_718_nl = MUX_s_1_2_2({(mux_717_nl) , mux_tmp_662}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_685 = MUX_s_1_2_2({mux_tmp_682 , (mux_718_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_tmp_697 = MUX_s_1_2_2({((~ else_else_else_switch_lp_and_27_itm_1) |
      else_land_lpi_1_dfm_2) , (else_else_else_switch_lp_and_27_itm_1 | else_land_lpi_1_dfm_2)},
      else_else_or_itm_1);
  assign and_tmp_22 = nor_dfs_1 & mux_tmp_697;
  assign mux_tmp_698 = MUX_s_1_2_2({and_tmp_22 , nor_dfs_1}, equal_tmp_7);
  assign nor_tmp_129 = cur_stateIN_sva_dfm_18_sg2 & else_else_else_switch_lp_and_17_itm_1;
  assign and_tmp_23 = MUX_s_1_2_2({(~(else_else_or_itm_1 | else_else_else_switch_lp_and_27_itm_1
      | else_land_lpi_1_dfm_2)) , mux_tmp_697}, nor_dfs_1);
  assign mux_734_nl = MUX_s_1_2_2({and_tmp_23 , and_tmp_22}, (~ or_tmp_19) | else_else_nor_tmp
      | (~ start_rsc_mgc_in_wire_d) | equal_tmp_6);
  assign mux_tmp_701 = MUX_s_1_2_2({(mux_734_nl) , nor_dfs_1}, equal_tmp_7);
  assign nor_tmp_130 = cur_stateIN_sva_dfm_25 & else_else_else_switch_lp_and_17_itm_1;
  assign mux_tmp_704 = MUX_s_1_2_2({mux_tmp_698 , mux_tmp_701}, ~(nor_tmp_130 | (~
      cur_stateIN_sva_16)));
  assign mux_739_nl = MUX_s_1_2_2({mux_tmp_698 , mux_tmp_701}, nor_tmp_130 | cur_stateIN_sva_16);
  assign mux_740_cse = MUX_s_1_2_2({(mux_739_nl) , mux_tmp_704}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_743_nl = MUX_s_1_2_2({mux_740_cse , mux_741_itm}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_tmp_710 = MUX_s_1_2_2({(mux_743_nl) , mux_tmp_698}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8);
  assign mux_tmp_711 = MUX_s_1_2_2({mux_tmp_698 , mux_tmp_701}, cur_stateIN_sva_dfm_18_sg2
      & (~ cur_stateIN_sva_dfm_25) & else_else_else_switch_lp_and_17_itm_1 & cur_stateIN_sva_16);
  assign and_tmp_25 = or_tmp_59 & mux_tmp_698;
  assign mux_751_nl = MUX_s_1_2_2({and_tmp_22 , nor_dfs_1}, ~(reg_else_else_else_case_1_slc_svs_1_cse
      | (~ (else_else_else_case_1_if_acc_1_cse[31])) | (~ equal_tmp_7)));
  assign mux_753_nl = MUX_s_1_2_2({and_tmp_25 , (mux_751_nl)}, cur_stateIN_sva_16);
  assign mux_tmp_720 = MUX_s_1_2_2({(mux_753_nl) , mux_tmp_698}, else_land_lpi_1_dfm_2);
  assign mux_755_nl = MUX_s_1_2_2({mux_tmp_698 , mux_tmp_701}, cur_stateIN_sva_16);
  assign mux_756_nl = MUX_s_1_2_2({and_tmp_23 , and_tmp_22}, (~(equal_tmp_7 | else_else_else_switch_lp_and_26_itm_1
      | else_else_else_switch_lp_and_32_itm_1)) | else_else_nor_tmp | (~ start_rsc_mgc_in_wire_d)
      | equal_tmp_6);
  assign mux_757_nl = MUX_s_1_2_2({(mux_756_nl) , mux_tmp_701}, nor_17_cse);
  assign mux_758_nl = MUX_s_1_2_2({and_tmp_25 , (mux_757_nl)}, cur_stateIN_sva_16);
  assign mux_tmp_725 = MUX_s_1_2_2({(mux_758_nl) , (mux_755_nl)}, else_land_lpi_1_dfm_2);
  assign mux_tmp_727 = MUX_s_1_2_2({mux_tmp_720 , mux_tmp_725}, ~((~ cur_stateIN_sva_dfm_18_sg2)
      | cur_stateIN_sva_dfm_25 | (~ else_else_else_switch_lp_and_17_itm_1)));
  assign mux_760_nl = MUX_s_1_2_2({mux_tmp_725 , mux_tmp_720}, nor_tmp_130);
  assign mux_762_nl = MUX_s_1_2_2({mux_tmp_727 , (mux_760_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_729 = MUX_s_1_2_2({(mux_762_nl) , mux_tmp_720}, cur_stateIN_sva_dfm_25);
  assign mux_768_nl = MUX_s_1_2_2({and_tmp_23 , and_tmp_22}, else_else_else_switch_lp_and_26_itm_1
      | else_else_else_switch_lp_and_32_itm_1 | (~ else_else_nor_tmp) | (~ start_rsc_mgc_in_wire_d)
      | equal_tmp_6);
  assign mux_tmp_735 = MUX_s_1_2_2({(mux_768_nl) , nor_dfs_1}, equal_tmp_7);
  assign mux_tmp_746 = MUX_s_1_2_2({mux_tmp_698 , mux_tmp_701}, ~(else_else_else_switch_lp_and_17_itm_1
      | (~ cur_stateIN_sva_16)));
  assign mux_tmp_902 = MUX_s_1_2_2({(~ else_else_else_switch_lp_and_27_itm_1) , else_else_else_switch_lp_and_27_itm_1},
      else_else_or_itm_1);
  assign or_tmp_719 = cur_stateIN_sva_sg1 | (~ cur_stateIN_sva_16) | else_land_lpi_1_dfm_2
      | cur_stateIN_sva_sg2;
  assign or_tmp_721 = (~ or_tmp_440) | else_land_lpi_1_dfm_2;
  assign or_tmp_722 = (~ equal_tmp_7) | reg_else_else_else_case_1_slc_svs_1_cse |
      (~ (else_else_else_case_1_if_acc_1_cse[31])) | else_else_land_lpi_1_dfm;
  assign or_tmp_723 = (~ or_tmp_722) | else_land_lpi_1_dfm_2;
  assign mux_tmp_1117 = MUX_s_1_2_2({or_tmp_723 , or_tmp_721}, or_tmp_719);
  assign or_tmp_724 = else_else_or_itm_1 | mux_tmp_1117;
  assign or_tmp_725 = cur_stateIN_sva_16 | else_land_lpi_1_dfm_2 | cur_stateIN_sva_sg2;
  assign or_tmp_728 = (~((~ or_tmp_462) | else_else_land_lpi_1_dfm)) | else_land_lpi_1_dfm_2;
  assign or_tmp_732 = (~ else_else_land_lpi_1_dfm) | else_land_lpi_1_dfm_2;
  assign mux_1152_nl = MUX_s_1_2_2({or_tmp_721 , or_tmp_732}, equal_tmp_6);
  assign mux_1153_nl = MUX_s_1_2_2({(mux_1152_nl) , ((~((~ equal_tmp_6) | else_else_land_lpi_1_dfm))
      | else_land_lpi_1_dfm_2)}, nor_dfs_1);
  assign mux_tmp_1120 = MUX_s_1_2_2({((~((~ or_tmp_53) | else_else_land_lpi_1_dfm))
      | else_land_lpi_1_dfm_2) , (mux_1153_nl)}, nor_17_cse);
  assign mux_tmp_1121 = MUX_s_1_2_2({mux_tmp_1120 , or_tmp_728}, or_tmp_725);
  assign or_tmp_736 = else_land_lpi_1_dfm_2 | cur_stateIN_sva_sg2;
  assign or_tmp_738 = reg_else_else_else_case_1_slc_svs_1_cse | (~ (else_else_else_case_1_if_acc_1_cse[31]))
      | else_else_land_lpi_1_dfm;
  assign mux_1157_nl = MUX_s_1_2_2({or_tmp_732 , ((~ or_tmp_738) | else_land_lpi_1_dfm_2)},
      equal_tmp_7);
  assign mux_1158_nl = MUX_s_1_2_2({or_tmp_723 , (mux_1157_nl)}, or_tmp_465);
  assign mux_tmp_1125 = MUX_s_1_2_2({(mux_1158_nl) , or_tmp_728}, or_tmp_736);
  assign and_118_cse = or_tmp_59 & nor_dfs_1;
  assign mux_1160_nl = MUX_s_1_2_2({((~((~ or_tmp_301) | else_else_land_lpi_1_dfm))
      | else_land_lpi_1_dfm_2) , or_tmp_732}, and_118_cse);
  assign mux_tmp_1127 = MUX_s_1_2_2({(mux_1160_nl) , or_tmp_728}, or_tmp_736);
  assign mux_tmp_1128 = MUX_s_1_2_2({mux_tmp_1127 , mux_tmp_1125}, cur_stateIN_sva_16);
  assign mux_tmp_1129 = MUX_s_1_2_2({mux_tmp_1128 , mux_tmp_1121}, cur_stateIN_sva_sg1);
  assign nor_tmp_215 = else_else_nor_tmp & cur_stateIN_sva_sg2;
  assign nand_tmp_52 = ~(nor_tmp_215 & (~ or_tmp_728));
  assign nor_tmp_217 = else_else_nor_tmp & cur_stateIN_sva_16;
  assign nand_tmp_54 = ~(nor_tmp_217 & (~ mux_tmp_1125));
  assign mux_tmp_1132 = MUX_s_1_2_2({nand_tmp_54 , (~(nor_tmp_217 & (~ or_tmp_728)))},
      cur_stateIN_sva_sg1);
  assign nor_tmp_219 = else_else_nor_tmp & cur_stateIN_sva_16 & cur_stateIN_sva_sg2;
  assign nand_tmp_55 = ~(nor_tmp_219 & (~ or_tmp_728));
  assign mux_1168_nl = MUX_s_1_2_2({mux_tmp_1132 , mux_tmp_1129}, cur_stateIN_sva_dfm_25);
  assign mux_1169_nl = MUX_s_1_2_2({nand_tmp_55 , nand_tmp_52}, cur_stateIN_sva_dfm_25);
  assign mux_1170_nl = MUX_s_1_2_2({(mux_1169_nl) , (mux_1168_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_1137 = MUX_s_1_2_2({nand_tmp_55 , (mux_1170_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1164_nl = MUX_s_1_2_2({nand_tmp_52 , mux_tmp_1129}, nor_tmp_21);
  assign mux_1165_nl = MUX_s_1_2_2({(mux_1164_nl) , mux_tmp_1129}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1167_nl = MUX_s_1_2_2({mux_tmp_1132 , mux_tmp_1129}, nor_tmp_4);
  assign mux_1172_nl = MUX_s_1_2_2({mux_tmp_1137 , (mux_1167_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1173_nl = MUX_s_1_2_2({(mux_1172_nl) , (mux_1165_nl)}, cur_stateIN_sva_dfm_25);
  assign mux_1174_nl = MUX_s_1_2_2({mux_tmp_1137 , (mux_1173_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_tmp_1141 = MUX_s_1_2_2({(mux_1174_nl) , mux_tmp_1129}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8);
  assign mux_tmp_1142 = MUX_s_1_2_2({mux_tmp_1120 , or_tmp_728}, or_tmp_736);
  assign mux_1177_nl = MUX_s_1_2_2({mux_tmp_1121 , (cur_stateIN_sva_16 | mux_tmp_1142)},
      else_else_nor_tmp);
  assign mux_1178_nl = MUX_s_1_2_2({mux_tmp_1128 , (cur_stateIN_sva_16 | mux_tmp_1127)},
      else_else_nor_tmp);
  assign mux_tmp_1145 = MUX_s_1_2_2({(mux_1178_nl) , (mux_1177_nl)}, cur_stateIN_sva_sg1);
  assign or_tmp_751 = cur_stateIN_sva_dfm_25 | mux_tmp_1145;
  assign nand_tmp_56 = cur_stateIN_sva_dfm_25 | (~ else_else_nor_tmp) | cur_stateIN_sva_16
      | (~ cur_stateIN_sva_sg2) | or_tmp_728;
  assign nand_tmp_57 = (~ else_else_nor_tmp) | cur_stateIN_sva_16 | (~ cur_stateIN_sva_sg2)
      | or_tmp_728;
  assign mux_1180_nl = MUX_s_1_2_2({nand_tmp_56 , or_tmp_751}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1181_nl = MUX_s_1_2_2({nand_tmp_57 , (mux_1180_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1182_nl = MUX_s_1_2_2({(mux_1181_nl) , (nor_tmp_4 | mux_tmp_1145)},
      cur_stateIN_sva_dfm_18_sg2);
  assign or_tmp_752 = cur_stateIN_sva_dfm_25 | (mux_1182_nl);
  assign mux_tmp_1149 = MUX_s_1_2_2({mux_tmp_1128 , (else_else_nor_tmp | mux_tmp_1121)},
      cur_stateIN_sva_sg1);
  assign nand_tmp_59 = cur_stateIN_sva_sg1 | (~ else_else_nor_tmp) | (~ cur_stateIN_sva_sg2)
      | or_tmp_728;
  assign mux_1184_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | cur_stateIN_sva_sg1
      | (~ else_else_nor_tmp) | (~ cur_stateIN_sva_sg2) | or_tmp_728) , (cur_stateIN_sva_dfm_18_sg1
      | mux_tmp_1149)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1185_nl = MUX_s_1_2_2({nand_tmp_59 , (mux_1184_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_tmp_1152 = MUX_s_1_2_2({(mux_1185_nl) , (nor_tmp_24 | mux_tmp_1149)},
      cur_stateIN_sva_dfm_18_sg2);
  assign or_tmp_756 = (~ else_else_nor_tmp) | cur_stateIN_sva_16;
  assign mux_tmp_1153 = MUX_s_1_2_2({nand_tmp_54 , (or_tmp_756 | mux_tmp_1142)},
      cur_stateIN_sva_sg1);
  assign mux_1188_nl = MUX_s_1_2_2({mux_tmp_1153 , mux_tmp_1149}, cur_stateIN_sva_dfm_25);
  assign mux_tmp_1155 = MUX_s_1_2_2({(mux_1188_nl) , or_tmp_751}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_tmp_1157 = MUX_s_1_2_2({nand_tmp_55 , nand_tmp_57}, cur_stateIN_sva_sg1);
  assign mux_1192_nl = MUX_s_1_2_2({mux_tmp_1157 , nand_tmp_59}, cur_stateIN_sva_dfm_25);
  assign mux_1193_nl = MUX_s_1_2_2({(mux_1192_nl) , nand_tmp_56}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_1194_nl = MUX_s_1_2_2({(mux_1193_nl) , mux_tmp_1155}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_1161 = MUX_s_1_2_2({mux_tmp_1157 , (mux_1194_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign nand_tmp_60 = cur_stateIN_sva_sg1 | (~ else_else_nor_tmp) | (~ cur_stateIN_sva_16)
      | mux_tmp_1125;
  assign mux_1205_nl = MUX_s_1_2_2({nand_tmp_60 , mux_tmp_1149}, cur_stateIN_sva_dfm_25);
  assign or_tmp_760 = cur_stateIN_sva_dfm_18_sg1 | (mux_1205_nl);
  assign nand_tmp_61 = ~((~ cur_stateIN_sva_sg1) & else_else_nor_tmp & cur_stateIN_sva_16
      & cur_stateIN_sva_sg2 & (~ or_tmp_728));
  assign mux_1207_nl = MUX_s_1_2_2({nand_tmp_61 , nand_tmp_59}, cur_stateIN_sva_dfm_25);
  assign mux_1208_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | (mux_1207_nl))
      , or_tmp_760}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_1175 = MUX_s_1_2_2({nand_tmp_61 , (mux_1208_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1206_nl = MUX_s_1_2_2({nand_tmp_60 , or_tmp_760}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1210_nl = MUX_s_1_2_2({mux_tmp_1175 , (mux_1206_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1211_nl = MUX_s_1_2_2({(mux_1210_nl) , mux_tmp_1152}, cur_stateIN_sva_dfm_25);
  assign mux_1212_nl = MUX_s_1_2_2({mux_tmp_1175 , (cur_stateIN_sva_dfm_18_sg1 |
      (mux_1211_nl))}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_1213_nl = MUX_s_1_2_2({(mux_1212_nl) , mux_tmp_1141}, else_else_else_switch_lp_and_31_itm_1);
  assign mux_1214_nl = MUX_s_1_2_2({(mux_1213_nl) , mux_tmp_1117}, else_else_or_itm_1);
  assign or_tmp_764 = land_lpi_1_dfm_1 | (~(else_else_else_switch_lp_and_27_itm_1
      | (mux_1214_nl)));
  assign or_tmp_765 = else_else_or_itm_1 | else_else_else_switch_lp_and_31_itm_1;
  assign mux_tmp_1182 = MUX_s_1_2_2({(cur_stateIN_sva_dfm_25 | (~ cur_stateIN_sva_sg1)
      | (~ else_else_nor_tmp) | cur_stateIN_sva_16 | mux_tmp_1142) , or_tmp_751},
      cur_stateIN_sva_dfm_18_sg1);
  assign mux_1218_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_25 | (~ cur_stateIN_sva_sg1)
      | (~ else_else_nor_tmp) | cur_stateIN_sva_16 | (~ cur_stateIN_sva_sg2) | or_tmp_728)
      , nand_tmp_56}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_1219_nl = MUX_s_1_2_2({(mux_1218_nl) , mux_tmp_1182}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_1186 = MUX_s_1_2_2({(~(cur_stateIN_sva_sg1 & else_else_nor_tmp &
      (~ cur_stateIN_sva_16) & cur_stateIN_sva_sg2 & (~ or_tmp_728))) , (mux_1219_nl)},
      else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_773 = cur_stateIN_sva_sg1 | (~ nor_tmp_26);
  assign mux_tmp_1291 = MUX_s_1_2_2({or_tmp_722 , or_tmp_440}, or_tmp_719);
  assign mux_1326_nl = MUX_s_1_2_2({or_tmp_440 , else_else_land_lpi_1_dfm}, equal_tmp_6);
  assign mux_1327_cse = MUX_s_1_2_2({(mux_1326_nl) , ((~ equal_tmp_6) | else_else_land_lpi_1_dfm)},
      nor_dfs_1);
  assign mux_tmp_1294 = MUX_s_1_2_2({((~ or_tmp_53) | else_else_land_lpi_1_dfm) ,
      mux_1327_cse}, nor_17_cse);
  assign mux_1331_nl = MUX_s_1_2_2({else_else_land_lpi_1_dfm , or_tmp_738}, equal_tmp_7);
  assign mux_1332_nl = MUX_s_1_2_2({or_tmp_722 , (mux_1331_nl)}, or_tmp_465);
  assign mux_tmp_1299 = MUX_s_1_2_2({(mux_1332_nl) , or_tmp_463}, or_tmp_736);
  assign mux_1334_nl = MUX_s_1_2_2({or_441_cse , else_else_land_lpi_1_dfm}, and_118_cse);
  assign mux_tmp_1301 = MUX_s_1_2_2({(mux_1334_nl) , or_tmp_463}, or_tmp_736);
  assign mux_tmp_1302 = MUX_s_1_2_2({mux_tmp_1301 , mux_tmp_1299}, cur_stateIN_sva_16);
  assign mux_1329_nl = MUX_s_1_2_2({mux_tmp_1294 , or_tmp_463}, or_tmp_725);
  assign mux_tmp_1303 = MUX_s_1_2_2({mux_tmp_1302 , (mux_1329_nl)}, cur_stateIN_sva_sg1);
  assign and_tmp_59 = nor_tmp_215 & or_tmp_463;
  assign and_tmp_61 = cur_stateIN_sva_16 & mux_tmp_1299;
  assign mux_1340_nl = MUX_s_1_2_2({and_tmp_61 , (cur_stateIN_sva_16 & or_tmp_463)},
      cur_stateIN_sva_sg1);
  assign and_tmp_62 = else_else_nor_tmp & (mux_1340_nl);
  assign and_tmp_63 = nor_tmp_219 & or_tmp_463;
  assign mux_1342_nl = MUX_s_1_2_2({and_tmp_62 , mux_tmp_1303}, cur_stateIN_sva_dfm_25);
  assign mux_1343_nl = MUX_s_1_2_2({and_tmp_63 , and_tmp_59}, cur_stateIN_sva_dfm_25);
  assign mux_1344_nl = MUX_s_1_2_2({(mux_1343_nl) , (mux_1342_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_1311 = MUX_s_1_2_2({and_tmp_63 , (mux_1344_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1350_nl = MUX_s_1_2_2({mux_tmp_1294 , or_tmp_463}, or_tmp_736);
  assign or_tmp_859 = cur_stateIN_sva_16 | (~ (mux_1350_nl));
  assign mux_1351_nl = MUX_s_1_2_2({(cur_stateIN_sva_16 | (~ mux_tmp_1301)) , or_tmp_859},
      cur_stateIN_sva_sg1);
  assign mux_tmp_1318 = MUX_s_1_2_2({(~ mux_tmp_1303) , (mux_1351_nl)}, else_else_nor_tmp);
  assign or_tmp_862 = cur_stateIN_sva_dfm_25 | mux_tmp_1318;
  assign not_tmp_380 = ~(cur_stateIN_sva_sg2 & or_tmp_463);
  assign mux_tmp_1319 = MUX_s_1_2_2({(cur_stateIN_sva_dfm_25 | (~ else_else_nor_tmp)
      | cur_stateIN_sva_16 | not_tmp_380) , or_tmp_862}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_1322 = MUX_s_1_2_2({(~ mux_tmp_1303) , (cur_stateIN_sva_sg1 | (~
      mux_tmp_1302))}, else_else_nor_tmp);
  assign or_tmp_871 = (~ else_else_nor_tmp) | cur_stateIN_sva_sg1 | not_tmp_380;
  assign mux_1360_nl = MUX_s_1_2_2({and_tmp_61 , (~ or_tmp_859)}, cur_stateIN_sva_sg1);
  assign nand_tmp_81 = ~(else_else_nor_tmp & (mux_1360_nl));
  assign mux_tmp_1327 = MUX_s_1_2_2({nand_tmp_81 , mux_tmp_1322}, cur_stateIN_sva_dfm_25);
  assign mux_1364_nl = MUX_s_1_2_2({(nor_tmp_26 & or_tmp_463) , (~(cur_stateIN_sva_16
      | not_tmp_380))}, cur_stateIN_sva_sg1);
  assign nand_tmp_82 = ~(else_else_nor_tmp & (mux_1364_nl));
  assign mux_1365_nl = MUX_s_1_2_2({nand_tmp_82 , or_tmp_871}, cur_stateIN_sva_dfm_25);
  assign mux_1366_nl = MUX_s_1_2_2({(mux_1365_nl) , mux_tmp_1327}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1367_nl = MUX_s_1_2_2({(mux_1366_nl) , mux_tmp_1319}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_tmp_1334 = MUX_s_1_2_2({nand_tmp_82 , (mux_1367_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign or_dcpl_11 = (else_else_else_case_6_if_acc_1_itm[24]) | stop_rsc_mgc_in_wire_d;
  assign or_tmp_882 = (~ equal_tmp_7) | reg_else_else_else_case_1_slc_svs_1_cse |
      (~ (else_else_else_case_1_if_acc_1_cse[31])) | else_land_lpi_1_dfm_2 | else_else_land_lpi_1_dfm;
  assign mux_tmp_1346 = MUX_s_1_2_2({or_441_cse , else_else_land_lpi_1_dfm}, nor_dfs_1);
  assign mux_tmp_1351 = MUX_s_1_2_2({or_tmp_437 , mux_tmp_1346}, cur_stateIN_sva_sg2);
  assign mux_1386_nl = MUX_s_1_2_2({(~ mux_tmp_1351) , (else_else_nor_tmp | (~ mux_tmp_1346))},
      cur_stateIN_sva_16);
  assign mux_1391_nl = MUX_s_1_2_2({or_tmp_882 , mux_tmp_1346}, cur_stateIN_sva_sg2);
  assign mux_1393_nl = MUX_s_1_2_2({or_441_cse , ((~ or_tmp_59) | else_land_lpi_1_dfm_2
      | else_else_land_lpi_1_dfm)}, nor_dfs_1);
  assign mux_1394_nl = MUX_s_1_2_2({(mux_1393_nl) , mux_tmp_1346}, cur_stateIN_sva_sg2);
  assign mux_1395_nl = MUX_s_1_2_2({(~ (mux_1394_nl)) , (else_else_nor_tmp | (~ (mux_1391_nl)))},
      cur_stateIN_sva_16);
  assign mux_tmp_1362 = MUX_s_1_2_2({(mux_1395_nl) , (mux_1386_nl)}, cur_stateIN_sva_sg1);
  assign not_tmp_400 = ~(nor_tmp_215 & mux_tmp_1346);
  assign or_tmp_905 = or_tmp_79 | (~(else_else_nor_tmp & mux_tmp_1351));
  assign mux_1400_nl = MUX_s_1_2_2({or_tmp_905 , mux_tmp_1362}, cur_stateIN_sva_dfm_18_sg1);
  assign or_tmp_906 = cur_stateIN_sva_dfm_25 | (mux_1400_nl);
  assign mux_1402_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_25 | (~(cur_stateIN_sva_dfm_18_sg1
      | cur_stateIN_sva_sg1)) | cur_stateIN_sva_16 | not_tmp_400) , or_tmp_906},
      cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_1369 = MUX_s_1_2_2({(or_tmp_79 | not_tmp_400) , (mux_1402_nl)},
      else_else_else_switch_lp_and_17_itm_1);
  assign mux_1379_nl = MUX_s_1_2_2({or_tmp_882 , or_tmp_440}, or_tmp_44);
  assign mux_1397_nl = MUX_s_1_2_2({(or_tmp_66 | not_tmp_400) , mux_tmp_1362}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1398_nl = MUX_s_1_2_2({(cur_stateIN_sva_16 | not_tmp_400) , (mux_1397_nl)},
      else_else_else_switch_lp_and_17_itm_1);
  assign mux_1399_nl = MUX_s_1_2_2({(mux_1398_nl) , (nor_tmp_4 | mux_tmp_1362)},
      cur_stateIN_sva_dfm_18_sg2);
  assign mux_1401_nl = MUX_s_1_2_2({or_tmp_905 , or_tmp_906}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1404_nl = MUX_s_1_2_2({mux_tmp_1369 , (mux_1401_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1405_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_25 | (mux_1404_nl)) , (cur_stateIN_sva_dfm_25
      | (mux_1399_nl))}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_1406_nl = MUX_s_1_2_2({mux_tmp_1369 , (mux_1405_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_1407_nl = MUX_s_1_2_2({(or_tmp_765 | (mux_1406_nl)) , (else_else_or_itm_1
      | (~ (mux_1379_nl)))}, else_else_else_switch_lp_and_27_itm_1);
  assign mux_tmp_1374 = MUX_s_1_2_2({or_tmp_89 , (land_lpi_1_dfm_1 | else_land_lpi_1_dfm_2
      | (mux_1407_nl))}, main_stage_0_2);
  assign or_tmp_921 = reg_else_else_else_case_1_slc_svs_1_cse | (~ (else_else_else_case_1_if_acc_1_cse[31]))
      | (~ equal_tmp_7) | else_else_land_lpi_1_dfm;
  assign mux_tmp_1375 = MUX_s_1_2_2({or_tmp_921 , or_tmp_440}, or_tmp_719);
  assign mux_tmp_1376 = MUX_s_1_2_2({or_tmp_440 , else_else_land_lpi_1_dfm}, or_tmp_465);
  assign or_tmp_924 = else_else_nor_tmp | (~ mux_tmp_1376);
  assign mux_1413_nl = MUX_s_1_2_2({or_tmp_440 , else_else_land_lpi_1_dfm}, nor_dfs_1);
  assign mux_tmp_1380 = MUX_s_1_2_2({(mux_1413_nl) , mux_1327_cse}, nor_17_cse);
  assign mux_tmp_1381 = MUX_s_1_2_2({mux_tmp_1380 , mux_tmp_1376}, or_tmp_736);
  assign mux_1417_nl = MUX_s_1_2_2({or_tmp_921 , else_else_land_lpi_1_dfm}, or_tmp_465);
  assign mux_tmp_1384 = MUX_s_1_2_2({(mux_1417_nl) , mux_tmp_1376}, or_tmp_736);
  assign mux_1510_nl = MUX_s_1_2_2({or_tmp_440 , else_else_land_lpi_1_dfm}, equal_tmp_6);
  assign mux_1420_nl = MUX_s_1_2_2({(mux_1510_nl) , else_else_land_lpi_1_dfm}, and_118_cse);
  assign mux_tmp_1387 = MUX_s_1_2_2({(mux_1420_nl) , mux_tmp_1376}, or_tmp_736);
  assign mux_1416_nl = MUX_s_1_2_2({(~ mux_tmp_1381) , or_tmp_924}, cur_stateIN_sva_16);
  assign mux_1422_nl = MUX_s_1_2_2({(~ mux_tmp_1387) , (else_else_nor_tmp | (~ mux_tmp_1384))},
      cur_stateIN_sva_16);
  assign mux_tmp_1389 = MUX_s_1_2_2({(mux_1422_nl) , (mux_1416_nl)}, cur_stateIN_sva_sg1);
  assign or_tmp_934 = cur_stateIN_sva_dfm_25 | mux_tmp_1389;
  assign and_tmp_68 = nor_tmp_215 & mux_tmp_1376;
  assign mux_tmp_1390 = MUX_s_1_2_2({(or_tmp_66 | (~ and_tmp_68)) , or_tmp_934},
      cur_stateIN_sva_dfm_18_sg2);
  assign or_tmp_937 = cur_stateIN_sva_16 | (~ and_tmp_68);
  assign mux_1425_nl = MUX_s_1_2_2({or_tmp_937 , mux_tmp_1390}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_tmp_1392 = MUX_s_1_2_2({(mux_1425_nl) , (nor_tmp_4 | mux_tmp_1389)},
      cur_stateIN_sva_dfm_18_sg2);
  assign not_tmp_408 = ~(else_else_nor_tmp & mux_tmp_1381);
  assign or_tmp_939 = or_tmp_74 | not_tmp_408;
  assign mux_1429_nl = MUX_s_1_2_2({(or_tmp_74 | (~ and_tmp_68)) , or_tmp_939}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1430_nl = MUX_s_1_2_2({(mux_1429_nl) , mux_tmp_1390}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_tmp_1397 = MUX_s_1_2_2({(or_tmp_79 | (~ and_tmp_68)) , (mux_1430_nl)},
      else_else_else_switch_lp_and_17_itm_1);
  assign or_tmp_949 = else_else_else_switch_lp_and_27_itm_1 | (~ mux_tmp_1375);
  assign mux_tmp_1403 = MUX_s_1_2_2({mux_tmp_1387 , mux_tmp_1384}, cur_stateIN_sva_16);
  assign mux_1436_nl = MUX_s_1_2_2({mux_tmp_1380 , mux_tmp_1376}, or_tmp_725);
  assign mux_tmp_1404 = MUX_s_1_2_2({mux_tmp_1403 , (mux_1436_nl)}, cur_stateIN_sva_sg1);
  assign and_tmp_71 = nor_tmp_23 & mux_tmp_1384;
  assign mux_tmp_1407 = MUX_s_1_2_2({and_tmp_71 , (nor_tmp_23 & mux_tmp_1376)}, cur_stateIN_sva_sg1);
  assign and_tmp_73 = cur_stateIN_sva_16 & else_else_nor_tmp & cur_stateIN_sva_sg2
      & mux_tmp_1376;
  assign mux_1443_nl = MUX_s_1_2_2({mux_tmp_1407 , mux_tmp_1404}, cur_stateIN_sva_dfm_25);
  assign mux_1444_nl = MUX_s_1_2_2({(or_tmp_66 & else_else_nor_tmp & cur_stateIN_sva_sg2
      & mux_tmp_1376) , (mux_1443_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_1411 = MUX_s_1_2_2({and_tmp_73 , (mux_1444_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1439_nl = MUX_s_1_2_2({and_tmp_68 , mux_tmp_1404}, nor_tmp_21);
  assign mux_1440_nl = MUX_s_1_2_2({(mux_1439_nl) , mux_tmp_1404}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1442_nl = MUX_s_1_2_2({mux_tmp_1407 , mux_tmp_1404}, nor_tmp_4);
  assign mux_1446_nl = MUX_s_1_2_2({mux_tmp_1411 , (mux_1442_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1447_nl = MUX_s_1_2_2({(mux_1446_nl) , (mux_1440_nl)}, cur_stateIN_sva_dfm_25);
  assign mux_1448_nl = MUX_s_1_2_2({mux_tmp_1411 , (mux_1447_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_tmp_1415 = MUX_s_1_2_2({(mux_1448_nl) , mux_tmp_1404}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8);
  assign mux_1450_nl = MUX_s_1_2_2({(else_else_nor_tmp | (~ mux_tmp_1381)) , or_tmp_924},
      cur_stateIN_sva_16);
  assign mux_tmp_1417 = MUX_s_1_2_2({(~ mux_tmp_1403) , (mux_1450_nl)}, cur_stateIN_sva_sg1);
  assign or_tmp_954 = cur_stateIN_sva_sg1 | (~ and_tmp_68);
  assign mux_1452_nl = MUX_s_1_2_2({or_tmp_954 , mux_tmp_1417}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1453_nl = MUX_s_1_2_2({or_tmp_954 , (mux_1452_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1454_nl = MUX_s_1_2_2({(mux_1453_nl) , (nor_tmp_24 | mux_tmp_1417)},
      cur_stateIN_sva_dfm_18_sg2);
  assign or_tmp_956 = cur_stateIN_sva_dfm_18_sg1 | (mux_1454_nl);
  assign or_tmp_957 = cur_stateIN_sva_sg1 | (~ and_tmp_71);
  assign or_tmp_959 = cur_stateIN_sva_sg1 | (~ and_tmp_73);
  assign mux_1455_nl = MUX_s_1_2_2({or_tmp_957 , mux_tmp_1417}, cur_stateIN_sva_dfm_25);
  assign mux_1457_nl = MUX_s_1_2_2({or_tmp_959 , or_tmp_954}, cur_stateIN_sva_dfm_25);
  assign mux_1458_nl = MUX_s_1_2_2({(mux_1457_nl) , (mux_1455_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_tmp_1425 = MUX_s_1_2_2({or_tmp_959 , (cur_stateIN_sva_dfm_18_sg1 | (mux_1458_nl))},
      else_else_else_switch_lp_and_17_itm_1);
  assign mux_1511_nl = MUX_s_1_2_2({or_tmp_957 , mux_tmp_1417}, cur_stateIN_sva_dfm_25);
  assign mux_1456_nl = MUX_s_1_2_2({or_tmp_957 , (mux_1511_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign mux_1460_nl = MUX_s_1_2_2({mux_tmp_1425 , (mux_1456_nl)}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1461_nl = MUX_s_1_2_2({(cur_stateIN_sva_dfm_18_sg1 | (mux_1460_nl))
      , or_tmp_956}, cur_stateIN_sva_dfm_25);
  assign mux_1462_nl = MUX_s_1_2_2({mux_tmp_1425 , (mux_1461_nl)}, else_else_else_switch_lp_and_15_itm_1);
  assign mux_1463_nl = MUX_s_1_2_2({(mux_1462_nl) , (~ mux_tmp_1415)}, else_else_else_switch_lp_and_31_itm_1);
  assign mux_1464_nl = MUX_s_1_2_2({(else_else_else_switch_lp_and_27_itm_1 | (mux_1463_nl))
      , or_tmp_949}, else_else_or_itm_1);
  assign not_tmp_417 = ~(else_land_lpi_1_dfm_2 | (mux_1464_nl));
  assign mux_tmp_1435 = MUX_s_1_2_2({(~ and_tmp_71) , (cur_stateIN_sva_16 | not_tmp_408)},
      cur_stateIN_sva_sg1);
  assign mux_tmp_1436 = MUX_s_1_2_2({mux_tmp_1435 , mux_tmp_1417}, cur_stateIN_sva_dfm_25);
  assign mux_tmp_1439 = MUX_s_1_2_2({(~ and_tmp_73) , or_tmp_937}, cur_stateIN_sva_sg1);
  assign mux_1474_nl = MUX_s_1_2_2({mux_tmp_1439 , or_tmp_954}, cur_stateIN_sva_dfm_25);
  assign mux_1475_nl = MUX_s_1_2_2({(mux_1474_nl) , mux_tmp_1436}, cur_stateIN_sva_dfm_18_sg2);
  assign mux_1476_nl = MUX_s_1_2_2({(mux_1475_nl) , mux_tmp_1390}, cur_stateIN_sva_dfm_18_sg1);
  assign mux_tmp_1443 = MUX_s_1_2_2({mux_tmp_1439 , (mux_1476_nl)}, else_else_else_switch_lp_and_17_itm_1);
  assign slc_else_else_else_case_6_else_exs_tmp_tmp = (else_else_else_case_6_else_else_if_acc_1_itm[22])
      | (else_else_else_case_6_else_if_acc_1_itm[24]);
  assign or_dcpl_20 = ((slc_else_else_else_case_6_else_exs_tmp_tmp | (else_else_else_case_6_if_acc_1_itm[24]))
      & equal_tmp_5) | else_else_else_switch_lp_and_26_cse | equal_tmp_1 | equal_tmp
      | nor_dfs;
  assign or_dcpl_21 = (equal_tmp_5 & (~ slc_else_else_else_case_6_else_exs_tmp_tmp)
      & (~ (else_else_else_case_6_if_acc_1_itm[24]))) | (else_else_else_case_5_land_lpi_1_dfm_1
      & equal_tmp_4);
  assign or_dcpl_22 = ((~ else_else_else_case_0_lor_lpi_1_dfm) & else_else_and_1_itm_1)
      | or_5_itm_1;
  assign and_dcpl_13 = else_else_else_case_0_lor_lpi_1_dfm & else_else_and_1_itm_1;
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      best_edgeIN_sva <= 30'b0;
      else_else_else_left_sum_1_sva <= 30'b0;
      cur_stateIN_sva_sg2 <= 1'b1;
      cur_stateIN_sva_sg1 <= 1'b0;
      cur_stateIN_sva_16 <= 1'b1;
      else_else_land_lpi_1_dfm <= 1'b0;
      motor_state_rsc_mgc_out_stdreg_d <= 2'b0;
      timer_rsc_mgc_out_stdreg_d <= 30'b0;
      cur_state_rsc_mgc_out_stdreg_d <= 3'b0;
      best_edge_rsc_mgc_out_stdreg_d <= 30'b0;
      else_else_else_case_0_if_mux_3_itm_1 <= 2'b0;
      else_else_else_switch_lp_and_25_ssc <= 1'b0;
      else_else_else_switch_lp_and_23_ssc <= 1'b0;
      else_else_else_switch_lp_and_29_ssc <= 1'b0;
      else_else_nor_ssc <= 1'b0;
      else_else_else_case_0_oelse_slc_slc_slc_10_2_itm_1 <= 14'b0;
      else_else_else_case_0_oelse_slc_slc_slc_10_5_itm_1 <= 1'b0;
      timerIN_sva_13 <= 30'b0;
      else_else_else_case_0_slc_svs_1 <= 1'b0;
      sum_1_sva_1 <= 30'b0;
      reg_else_else_else_case_1_if_slc_1_itm_1_cse <= 30'b0;
      reg_else_else_else_case_1_slc_svs_1_cse <= 1'b0;
      C1_2_dfmergedata_lpi_1_dfm_7 <= 2'b0;
      else_else_else_switch_lp_or_25_itm_1 <= 1'b0;
      else_else_else_switch_lp_mux1h_2_itm_1 <= 30'b0;
      nor_tmp_278 <= 1'b0;
      else_land_lpi_1_dfm_2 <= 1'b0;
      equal_tmp_6 <= 1'b0;
      equal_tmp_7 <= 1'b0;
      nor_dfs_1 <= 1'b0;
      else_else_else_switch_lp_and_26_itm_1 <= 1'b0;
      else_else_else_switch_lp_and_32_itm_1 <= 1'b0;
      land_lpi_1_dfm_1 <= 1'b0;
      cur_stateIN_sva_dfm_18_sg2 <= 1'b0;
      else_else_else_switch_lp_and_15_itm_1 <= 1'b0;
      else_else_else_switch_lp_and_17_itm_1 <= 1'b0;
      else_else_else_case_6_else_else_else_land_lpi_1_dfm_8 <= 1'b0;
      else_else_else_switch_lp_and_31_itm_1 <= 1'b0;
      else_else_or_itm_1 <= 1'b0;
      else_else_else_switch_lp_and_27_itm_1 <= 1'b0;
      cur_stateIN_sva_dfm_25 <= 1'b0;
      cur_stateIN_sva_dfm_18_sg1 <= 1'b0;
      else_else_and_1_itm_1 <= 1'b0;
      or_itm_1 <= 1'b0;
      or_5_itm_1 <= 1'b0;
      main_stage_0_2 <= 1'b0;
      else_else_else_case_0_if_mux_3_itm <= 2'b0;
      else_else_else_case_6_else_else_else_land_lpi_1_dfm <= 1'b0;
      C1_2_dfmergedata_lpi_1 <= 2'b0;
      else_else_else_right_sum_1_sva <= 30'b0;
    end
    else begin
      if ( en ) begin
        best_edgeIN_sva <= best_edgeIN_sva_mx0;
        else_else_else_left_sum_1_sva <= MUX_v_30_2_2({sum_rsc_mgc_in_wire_d , else_else_else_left_sum_1_sva},
            (MUX_s_1_2_2({((~ cur_stateIN_sva_sg2) | (~ cur_stateIN_sva_sg1) | cur_stateIN_sva_16)
            , (MUX_s_1_2_2({mux_tmp_64 , (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_64
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_54 , mux_tmp_2}, nor_tmp_4)) ,
            (MUX_s_1_2_2({mux_tmp_54 , mux_tmp_35}, else_else_else_switch_lp_and_17_itm_1))},
            cur_stateIN_sva_dfm_18_sg1))}, cur_stateIN_sva_dfm_18_sg2)) , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_43
            , mux_tmp_45}, else_else_else_switch_lp_and_17_itm_1)) , (MUX_s_1_2_2({mux_tmp_33
            , mux_tmp_2}, nor_tmp_4))}, cur_stateIN_sva_dfm_18_sg2))}, cur_stateIN_sva_dfm_18_sg1))
            , mux_tmp_2}, cur_stateIN_sva_dfm_25))}, else_else_else_switch_lp_and_15_itm_1))},
            main_stage_0_2)) | (~ (else_else_else_case_6_if_acc_1_itm[24])) | stop_rsc_mgc_in_wire_d);
        cur_stateIN_sva_sg2 <= cur_stateIN_sva_sg2_mx0;
        cur_stateIN_sva_sg1 <= cur_stateIN_sva_sg1_mx0;
        cur_stateIN_sva_16 <= cur_stateIN_sva_16_mx0;
        else_else_land_lpi_1_dfm <= mux_10_cse;
        motor_state_rsc_mgc_out_stdreg_d <= MUX_v_2_2_2({C1_2_dfmergedata_lpi_1_dfm_7
            , motor_state_rsc_mgc_out_stdreg_d}, or_dcpl_3 | (~ else_else_else_switch_lp_or_25_itm_1)
            | or_dcpl_2);
        timer_rsc_mgc_out_stdreg_d <= MUX_v_30_2_2({timer_rsc_mgc_out_stdreg_d ,
            timerIN_sva_dfm_12}, main_stage_0_2);
        cur_state_rsc_mgc_out_stdreg_d <= MUX_v_3_2_2({cur_state_rsc_mgc_out_stdreg_d
            , ({cur_stateIN_sva_dfm_16_sg2 , cur_stateIN_sva_dfm_16_sg1 , cur_stateIN_sva_dfm_23})},
            main_stage_0_2);
        best_edge_rsc_mgc_out_stdreg_d <= MUX_v_30_2_2({best_edge_rsc_mgc_out_stdreg_d
            , best_edgeIN_sva_dfm_14}, main_stage_0_2);
        else_else_else_case_0_if_mux_3_itm_1 <= MUX1HOT_v_2_3_2({2'b10 , 2'b1 , else_else_else_case_0_if_mux_3_itm},
            {(~ (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({or_tmp_325 , (cur_stateIN_sva_sg1
            | (MUX_s_1_2_2({cur_stateIN_sva_16 , ((~ cur_stateIN_sva_16) | (~ start_rsc_mgc_in_wire_d)
            | else_else_land_lpi_1_dfm)}, cur_stateIN_sva_sg2)))}, else_else_else_case_0_if_acc_3[31]))
            , (MUX_s_1_2_2({(~ (MUX_s_1_2_2({(~(else_else_else_switch_lp_and_27_itm_1
            | (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_533 , (cur_stateIN_sva_dfm_18_sg1
            | (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_533 , (MUX_s_1_2_2({mux_tmp_515
            , mux_tmp_516}, else_else_else_switch_lp_and_17_itm_1))}, cur_stateIN_sva_dfm_18_sg2))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({nand_tmp_16 , (MUX_s_1_2_2({or_tmp_360
            , or_tmp_318}, cur_stateIN_sva_dfm_18_sg2))}, else_else_else_switch_lp_and_17_itm_1))
            , or_331_cse}, cur_stateIN_sva_dfm_18_sg2))}, cur_stateIN_sva_dfm_25)))},
            else_else_else_switch_lp_and_15_itm_1)) , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_495
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_495 , (MUX_s_1_2_2({mux_tmp_453
            , mux_tmp_400}, nor_tmp_4))}, cur_stateIN_sva_dfm_18_sg2)) , mux_437_cse},
            cur_stateIN_sva_dfm_25))}, else_else_else_switch_lp_and_15_itm_1)) ,
            mux_tmp_400}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8))},
            else_else_else_switch_lp_and_31_itm_1)) , mux_tmp_394}, else_else_or_itm_1))))
            , (else_else_else_case_0_if_acc_3[31])}, else_land_lpi_1_dfm_2))) , or_tmp_290},
            land_lpi_1_dfm_1))}, main_stage_0_2)) , (MUX_s_1_2_2({or_tmp_325 , (MUX_s_1_2_2({(or_tmp_291
            | (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_429 , (cur_stateIN_sva_dfm_18_sg1
            | (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_429 , (MUX_s_1_2_2({or_tmp_322
            , mux_tmp_425}, else_else_else_switch_lp_and_17_itm_1))}, cur_stateIN_sva_dfm_18_sg2))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({nand_tmp_16 , (MUX_s_1_2_2({nand_tmp_15
            , or_tmp_318}, cur_stateIN_sva_dfm_18_sg2))}, else_else_else_switch_lp_and_17_itm_1))
            , or_331_cse}, cur_stateIN_sva_dfm_18_sg2))}, cur_stateIN_sva_dfm_25)))},
            else_else_else_switch_lp_and_15_itm_1)) , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_411
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_411 , (MUX_s_1_2_2({or_tmp_314
            , mux_tmp_400}, nor_tmp_4))}, cur_stateIN_sva_dfm_18_sg2)) , mux_437_cse},
            cur_stateIN_sva_dfm_25))}, else_else_else_switch_lp_and_15_itm_1)) ,
            mux_tmp_400}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8))},
            else_else_else_switch_lp_and_31_itm_1)) , mux_tmp_394}, else_else_or_itm_1)))
            , or_tmp_290}, land_lpi_1_dfm_1))}, main_stage_0_2))}, or_tmp_289)))
            , (~ (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({(cur_stateIN_sva_sg1 |
            (MUX_s_1_2_2({cur_stateIN_sva_sg2 , ((~ cur_stateIN_sva_sg2) | (~ start_rsc_mgc_in_wire_d)
            | else_else_land_lpi_1_dfm)}, cur_stateIN_sva_16))) , or_tmp_405}, else_else_else_case_0_if_acc_3[31]))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({(else_else_else_switch_lp_and_27_itm_1
            | (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_685 , (cur_stateIN_sva_dfm_18_sg1
            | (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_685 , (MUX_s_1_2_2({mux_tmp_661
            , mux_tmp_662}, else_else_else_switch_lp_and_17_itm_1))}, cur_stateIN_sva_dfm_18_sg2))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({nand_tmp_36 , (MUX_s_1_2_2({or_tmp_455
            , or_tmp_402}, cur_stateIN_sva_dfm_18_sg2))}, else_else_else_switch_lp_and_17_itm_1))
            , or_415_cse}, cur_stateIN_sva_dfm_18_sg2))}, cur_stateIN_sva_dfm_25)))},
            else_else_else_switch_lp_and_15_itm_1)) , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_640
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_640 , (MUX_s_1_2_2({mux_tmp_608
            , mux_tmp_553}, nor_tmp_4))}, cur_stateIN_sva_dfm_18_sg2)) , mux_590_cse},
            cur_stateIN_sva_dfm_25))}, else_else_else_switch_lp_and_15_itm_1)) ,
            mux_tmp_553}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8))},
            else_else_else_switch_lp_and_31_itm_1)) , mux_tmp_546}, else_else_or_itm_1)))
            , (else_else_else_case_0_if_acc_3[31])}, else_land_lpi_1_dfm_2)) , or_tmp_290},
            land_lpi_1_dfm_1))}, main_stage_0_2)) , (MUX_s_1_2_2({or_tmp_405 , (MUX_s_1_2_2({(or_tmp_291
            | (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_580 , (cur_stateIN_sva_dfm_18_sg1
            | (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_580 , (MUX_s_1_2_2({nand_tmp_38
            , mux_tmp_576}, else_else_else_switch_lp_and_17_itm_1))}, cur_stateIN_sva_dfm_18_sg2))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({nand_tmp_36 , (MUX_s_1_2_2({nand_tmp_35
            , or_tmp_402}, cur_stateIN_sva_dfm_18_sg2))}, else_else_else_switch_lp_and_17_itm_1))
            , or_415_cse}, cur_stateIN_sva_dfm_18_sg2))}, cur_stateIN_sva_dfm_25)))},
            else_else_else_switch_lp_and_15_itm_1)) , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_564
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_564 , (MUX_s_1_2_2({mux_tmp_560
            , mux_tmp_553}, nor_tmp_4))}, cur_stateIN_sva_dfm_18_sg2)) , mux_590_cse},
            cur_stateIN_sva_dfm_25))}, else_else_else_switch_lp_and_15_itm_1)) ,
            mux_tmp_553}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8))},
            else_else_else_switch_lp_and_31_itm_1)) , mux_tmp_546}, else_else_or_itm_1)))
            , or_tmp_290}, land_lpi_1_dfm_1))}, main_stage_0_2))}, or_tmp_289)))
            , ((MUX_s_1_2_2({(else_else_else_switch_lp_and_29_ssc & (MUX_s_1_2_2({(~
            nor_tmp_87) , ((~ cur_stateIN_sva_sg2) | cur_stateIN_sva_16)}, cur_stateIN_sva_sg1)))
            , (~(else_else_land_lpi_1_dfm | land_lpi_1_dfm_1 | (~ (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_720
            , mux_tmp_725}, ~(cur_stateIN_sva_dfm_18_sg1 | (~ cur_stateIN_sva_dfm_18_sg2)
            | cur_stateIN_sva_dfm_25 | (~ else_else_else_switch_lp_and_17_itm_1))))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_729 , (MUX_s_1_2_2({mux_tmp_725
            , mux_tmp_720}, cur_stateIN_sva_dfm_25 | (~ cur_stateIN_sva_dfm_18_sg2)
            | else_else_else_switch_lp_and_17_itm_1))}, cur_stateIN_sva_dfm_18_sg1))
            , mux_tmp_720}, cur_stateIN_sva_dfm_18_sg1))}, else_else_else_switch_lp_and_15_itm_1))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_740_cse , mux_tmp_746}, cur_stateIN_sva_dfm_18_sg1))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_741_itm , (MUX_s_1_2_2({mux_tmp_746
            , (MUX_s_1_2_2({mux_tmp_701 , mux_tmp_698}, cur_stateIN_sva_dfm_18_sg2
            | else_else_else_switch_lp_and_17_itm_1))}, cur_stateIN_sva_dfm_25))},
            cur_stateIN_sva_dfm_18_sg1)) , mux_tmp_698}, cur_stateIN_sva_dfm_18_sg1))},
            else_else_else_switch_lp_and_15_itm_1))}, cur_stateIN_sva_sg2)) , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_698
            , mux_tmp_735}, (~ cur_stateIN_sva_dfm_18_sg1) & cur_stateIN_sva_dfm_18_sg2
            & cur_stateIN_sva_dfm_25 & else_else_else_switch_lp_and_17_itm_1)) ,
            (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_698 ,
            mux_tmp_735}, cur_stateIN_sva_dfm_18_sg2 & cur_stateIN_sva_dfm_25 & else_else_else_switch_lp_and_17_itm_1))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_698 , mux_tmp_735}, nor_tmp_129))
            , mux_tmp_735}, cur_stateIN_sva_dfm_18_sg2))}, cur_stateIN_sva_dfm_25))
            , (MUX_s_1_2_2({mux_tmp_735 , mux_tmp_698}, (~ cur_stateIN_sva_dfm_25)
            | (~ cur_stateIN_sva_dfm_18_sg2) | else_else_else_switch_lp_and_17_itm_1))},
            cur_stateIN_sva_dfm_18_sg1)) , mux_tmp_698}, cur_stateIN_sva_dfm_18_sg1))},
            else_else_else_switch_lp_and_15_itm_1))}, cur_stateIN_sva_sg1)) , (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_727
            , mux_tmp_729}, else_else_else_switch_lp_and_15_itm_1)) , mux_tmp_720},
            else_else_else_case_6_else_else_else_land_lpi_1_dfm_8)) , mux_tmp_710},
            cur_stateIN_sva_sg2)) , (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_711
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_711 , mux_tmp_704}, cur_stateIN_sva_dfm_18_sg2))
            , mux_tmp_698}, cur_stateIN_sva_dfm_25))}, else_else_else_switch_lp_and_15_itm_1))
            , mux_tmp_698}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8))
            , mux_tmp_710}, cur_stateIN_sva_sg2))}, cur_stateIN_sva_sg1))}, else_else_else_switch_lp_and_31_itm_1)))))},
            main_stage_0_2)) & (if_acc_itm[31]))});
        else_else_else_switch_lp_and_25_ssc <= MUX_s_1_2_2({else_else_else_switch_lp_and_25_ssc_mx0w0
            , else_else_else_switch_lp_and_25_ssc}, or_dcpl_2);
        else_else_else_switch_lp_and_23_ssc <= MUX_s_1_2_2({else_else_else_switch_lp_and_23_ssc_mx0w0
            , else_else_else_switch_lp_and_23_ssc}, or_dcpl_2);
        else_else_else_switch_lp_and_29_ssc <= MUX_s_1_2_2({else_else_else_switch_lp_and_29_ssc_mx0w0
            , else_else_else_switch_lp_and_29_ssc}, or_dcpl_2);
        else_else_nor_ssc <= MUX_s_1_2_2({else_else_nor_tmp , else_else_nor_ssc},
            or_dcpl_2);
        else_else_else_case_0_oelse_slc_slc_slc_10_2_itm_1 <= else_else_else_case_5_aif_mul_2[20:7];
        else_else_else_case_0_oelse_slc_slc_slc_10_5_itm_1 <= else_else_else_case_5_aif_mul_2[2];
        timerIN_sva_13 <= timerIN_sva_1;
        else_else_else_case_0_slc_svs_1 <= readslicef_32_1_31((conv_u2s_28_32({(MUX_v_27_2_2({(best_edgeIN_sva_mx0[29:3])
            , (sum_rsc_mgc_in_wire_d[29:3])}, readslicef_32_1_31((conv_u2s_31_32({best_edgeIN_sva_mx0
            , 1'b1}) + ({1'b1 , (~ sum_rsc_mgc_in_wire_d) , 1'b1}))))) , 1'b1}) +
            ({1'b1 , (~ mux_1_cse) , 1'b1})));
        sum_1_sva_1 <= sum_rsc_mgc_in_wire_d;
        reg_else_else_else_case_1_if_slc_1_itm_1_cse <= readslicef_31_30_1((({max_1_qr_1_lpi_1_dfm_mx0
            , 1'b1}) + ({3'b111 , (~ (max_1_qr_1_lpi_1_dfm_mx0[29:3])) , 1'b1})));
        reg_else_else_else_case_1_slc_svs_1_cse <= readslicef_27_1_26((conv_u2u_26_27(max_1_qr_1_lpi_1_dfm_mx0[29:4])
            + 27'b111111111111111110110001111));
        C1_2_dfmergedata_lpi_1_dfm_7 <= C1_2_dfmergedata_lpi_1_dfm_3;
        else_else_else_switch_lp_or_25_itm_1 <= (~((~((else_else_else_case_6_else_else_if_acc_1_itm[22])
            | (else_else_else_case_6_else_if_acc_1_itm[24]) | (else_else_else_case_6_if_acc_1_itm[24])))
            | nor_tmp_279)) | nor_dfs | equal_tmp | equal_tmp_1 | equal_tmp_2 | equal_tmp_3
            | equal_tmp_4;
        else_else_else_switch_lp_mux1h_2_itm_1 <= ~((~((MUX_v_30_2_2({(timerIN_sva_1
            & (signext_30_1(~ (else_else_else_case_3_else_if_acc_4_itm[31]))) & (signext_30_1(~
            (else_else_else_case_3_if_acc_2_itm[31])))) , timerIN_sva_1}, or_dcpl_20))
            | (signext_30_1((equal_tmp_4 | ((~ (else_else_else_case_6_if_acc_1_itm[24]))
            & equal_tmp_5)) & (~(or_dcpl_20 | or_dcpl_21)))))) | ({{29{or_dcpl_21}},
            or_dcpl_21}));
        nor_tmp_278 <= nor_tmp_279;
        else_land_lpi_1_dfm_2 <= else_land_lpi_1_dfm;
        equal_tmp_6 <= equal_tmp_1;
        equal_tmp_7 <= equal_tmp;
        nor_dfs_1 <= nor_dfs;
        else_else_else_switch_lp_and_26_itm_1 <= else_else_else_switch_lp_and_26_cse;
        else_else_else_switch_lp_and_32_itm_1 <= else_else_else_case_6_or_3_tmp &
            equal_tmp_5;
        land_lpi_1_dfm_1 <= land_lpi_1_dfm;
        cur_stateIN_sva_dfm_18_sg2 <= cur_stateIN_sva_sg2_mx0 & (~ (else_else_else_case_3_else_if_acc_4_itm[31]));
        else_else_else_switch_lp_and_15_itm_1 <= MUX_s_1_2_2({((~ (else_else_else_case_3_if_acc_2_itm[31]))
            & equal_tmp_2 & (~ mux_10_cse)) , else_else_else_switch_lp_and_15_itm_1},
            and_42_cse);
        else_else_else_switch_lp_and_17_itm_1 <= MUX_s_1_2_2({((~ (else_else_else_case_3_if_acc_2_itm[31]))
            & equal_tmp_3 & (~ mux_10_cse)) , else_else_else_switch_lp_and_17_itm_1},
            and_42_cse);
        else_else_else_case_6_else_else_else_land_lpi_1_dfm_8 <= MUX_s_1_2_2({else_else_else_case_6_else_else_else_land_lpi_1_dfm_mx0w0
            , else_else_else_case_6_else_else_else_land_lpi_1_dfm}, (MUX_s_1_2_2({(~(cur_stateIN_sva_sg2
            & (MUX_s_1_2_2({cur_stateIN_sva_sg1 , (~ cur_stateIN_sva_sg1)}, cur_stateIN_sva_16))))
            , (else_land_lpi_1_dfm_2 | (MUX_s_1_2_2({mux_tmp_902 , (MUX_s_1_2_2({(nor_17_cse
            | mux_tmp_902) , mux_tmp_902}, cur_stateIN_sva_sg2 | (~ cur_stateIN_sva_16)
            | cur_stateIN_sva_sg1))}, nor_181_cse)))}, main_stage_0_2)) & else_else_else_switch_lp_and_31_itm_1);
        else_else_else_switch_lp_and_31_itm_1 <= MUX_s_1_2_2({((~ else_else_else_case_6_or_3_tmp)
            & equal_tmp_5 & (~ mux_10_cse)) , else_else_else_switch_lp_and_31_itm_1},
            and_42_cse);
        else_else_or_itm_1 <= MUX_s_1_2_2({(((else_else_else_case_3_if_acc_2_itm[31])
            & equal_tmp_2) | ((else_else_else_case_3_if_acc_2_itm[31]) & equal_tmp_3)
            | nor_tmp_279 | mux_10_cse) , else_else_or_itm_1}, and_42_cse);
        else_else_else_switch_lp_and_27_itm_1 <= MUX_s_1_2_2({(else_else_else_case_5_land_lpi_1_dfm_1
            & equal_tmp_4 & (~ mux_10_cse)) , else_else_else_switch_lp_and_27_itm_1},
            and_42_cse);
        cur_stateIN_sva_dfm_25 <= cur_stateIN_sva_16_mx0 & (~ (else_else_else_case_3_else_if_acc_4_itm[31]));
        cur_stateIN_sva_dfm_18_sg1 <= cur_stateIN_sva_sg1_mx0 & (~ (else_else_else_case_3_else_if_acc_4_itm[31]));
        else_else_and_1_itm_1 <= nor_dfs & (~ mux_10_cse) & (~ or_tmp_975);
        or_itm_1 <= ((~ (max_1_acc_3[31])) & else_else_and_2_m1c_1) | ((~ (max_1_acc_3[31]))
            & else_else_and_3_m1c_1) | (else_else_else_case_5_land_lpi_1_dfm_1 &
            else_else_and_6_m1c_1) | nor_tmp_279 | mux_10_cse | (else_else_else_case_3_or_tmp_1
            & else_else_and_4_m1c_1) | (else_else_else_case_3_or_tmp_1 & else_else_and_5_m1c_1)
            | or_tmp_975 | ((~ else_else_else_case_6_or_3_tmp) & else_else_and_7_m1c_1);
        or_5_itm_1 <= (~((~(((max_1_acc_3[31]) & else_else_and_2_m1c_1) | ((max_1_acc_3[31])
            & else_else_and_3_m1c_1) | ((~ else_else_else_case_5_land_lpi_1_dfm_1)
            & else_else_and_6_m1c_1) | ((~ else_else_else_case_3_or_tmp_1) & else_else_and_4_m1c_1)
            | ((~ else_else_else_case_3_or_tmp_1) & else_else_and_5_m1c_1))) | or_tmp_975))
            | (else_else_else_case_6_or_3_tmp & else_else_and_7_m1c_1);
        main_stage_0_2 <= 1'b1;
        else_else_else_case_0_if_mux_3_itm <= MUX1HOT_v_2_3_2({2'b10 , 2'b1 , else_else_else_case_0_if_mux_3_itm},
            {((else_else_else_case_0_if_acc_3[31]) & (MUX_s_1_2_2({(~ (MUX_s_1_2_2({(MUX_s_1_2_2({and_72_cse
            , or_tmp_773}, stop_rsc_mgc_in_wire_d)) , (stop_rsc_mgc_in_wire_d | (MUX_s_1_2_2({(~
            or_tmp_773) , or_tmp_89}, if_acc_itm[31])))}, start_rsc_mgc_in_wire_d)))
            , (MUX_s_1_2_2({(MUX_s_1_2_2({or_776_cse , or_tmp_764}, stop_rsc_mgc_in_wire_d))
            , (~(stop_rsc_mgc_in_wire_d | mux_1225_cse))}, start_rsc_mgc_in_wire_d))},
            main_stage_0_2))) , (MUX_s_1_2_2({(MUX_s_1_2_2({(~ and_72_cse) , or_776_cse},
            main_stage_0_2)) , (MUX_s_1_2_2({(~ (MUX_s_1_2_2({(~(stop_rsc_mgc_in_wire_d
            & (MUX_s_1_2_2({or_tmp_773 , (~ or_tmp_89)}, if_acc_itm[31])))) , (MUX_s_1_2_2({or_tmp_773
            , and_72_cse}, stop_rsc_mgc_in_wire_d))}, start_rsc_mgc_in_wire_d)))
            , (MUX_s_1_2_2({(stop_rsc_mgc_in_wire_d & (~ mux_1225_cse)) , (MUX_s_1_2_2({or_tmp_764
            , or_776_cse}, stop_rsc_mgc_in_wire_d))}, start_rsc_mgc_in_wire_d))},
            main_stage_0_2))}, else_else_else_case_0_if_acc_3[31])) , ((MUX_s_1_2_2({mux_425_cse
            , (~(land_lpi_1_dfm_1 | (~(else_land_lpi_1_dfm_2 | (MUX_s_1_2_2({(~ (MUX_s_1_2_2({(MUX_s_1_2_2({(~
            (MUX_s_1_2_2({mux_tmp_1334 , (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_1334
            , (MUX_s_1_2_2({nand_tmp_81 , (MUX_s_1_2_2({mux_tmp_1327 , or_tmp_862},
            cur_stateIN_sva_dfm_18_sg1))}, else_else_else_switch_lp_and_17_itm_1))},
            cur_stateIN_sva_dfm_18_sg2)) , (MUX_s_1_2_2({(MUX_s_1_2_2({or_tmp_871
            , (cur_stateIN_sva_dfm_18_sg1 | (MUX_s_1_2_2({or_tmp_871 , mux_tmp_1322},
            cur_stateIN_sva_dfm_18_sg2)))}, else_else_else_switch_lp_and_17_itm_1))
            , (nor_tmp_24 | mux_tmp_1322)}, cur_stateIN_sva_dfm_18_sg2))}, cur_stateIN_sva_dfm_25))
            , (cur_stateIN_sva_dfm_25 | (MUX_s_1_2_2({(MUX_s_1_2_2({(or_tmp_756 |
            not_tmp_380) , mux_tmp_1319}, else_else_else_switch_lp_and_17_itm_1))
            , (nor_tmp_4 | mux_tmp_1318)}, cur_stateIN_sva_dfm_18_sg2)))}, cur_stateIN_sva_dfm_18_sg1))},
            else_else_else_switch_lp_and_15_itm_1))) , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_1311
            , (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_1311 , (MUX_s_1_2_2({and_tmp_62
            , mux_tmp_1303}, nor_tmp_4))}, cur_stateIN_sva_dfm_18_sg2)) , (MUX_s_1_2_2({(MUX_s_1_2_2({and_tmp_59
            , mux_tmp_1303}, nor_tmp_21)) , mux_tmp_1303}, cur_stateIN_sva_dfm_18_sg2))},
            cur_stateIN_sva_dfm_25))}, else_else_else_switch_lp_and_15_itm_1)) ,
            mux_tmp_1303}, else_else_else_case_6_else_else_else_land_lpi_1_dfm_8))},
            else_else_else_switch_lp_and_31_itm_1)) , mux_tmp_1291}, else_else_or_itm_1)))
            , (else_else_or_itm_1 | (~ mux_tmp_1291))}, else_else_else_switch_lp_and_27_itm_1))))))},
            main_stage_0_2)) & (if_acc_itm[31]))});
        else_else_else_case_6_else_else_else_land_lpi_1_dfm <= MUX_s_1_2_2({else_else_else_case_6_else_else_else_land_lpi_1_dfm_mx0w0
            , else_else_else_case_6_else_else_else_land_lpi_1_dfm}, mux_tmp_1374
            | or_dcpl_11 | (else_else_else_case_6_else_if_acc_1_itm[24]) | (else_else_else_case_6_else_else_if_acc_1_itm[22]));
        C1_2_dfmergedata_lpi_1 <= MUX_v_2_2_2({C1_2_dfmergedata_lpi_1_dfm_3 , C1_2_dfmergedata_lpi_1},
            MUX_s_1_2_2({(~ (MUX_s_1_2_2({(MUX_s_1_2_2({(~((if_acc_itm[31]) & mux_425_cse))
            , (land_lpi_1_dfm_1 | (~((if_acc_itm[31]) & (else_land_lpi_1_dfm_2 |
            (MUX_s_1_2_2({(~ (MUX_s_1_2_2({(MUX_s_1_2_2({(~ (MUX_s_1_2_2({mux_tmp_1443
            , (MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_1443 , (MUX_s_1_2_2({mux_tmp_1435
            , (MUX_s_1_2_2({mux_tmp_1436 , or_tmp_934}, cur_stateIN_sva_dfm_18_sg1))},
            else_else_else_switch_lp_and_17_itm_1))}, cur_stateIN_sva_dfm_18_sg2))
            , mux_tmp_1392}, cur_stateIN_sva_dfm_18_sg1)) , or_tmp_956}, cur_stateIN_sva_dfm_25))},
            else_else_else_switch_lp_and_15_itm_1))) , mux_tmp_1415}, else_else_else_switch_lp_and_31_itm_1))
            , mux_tmp_1375}, else_else_else_switch_lp_and_27_itm_1))) , or_tmp_949},
            else_else_or_itm_1))))))}, main_stage_0_2)) , (MUX_s_1_2_2({nor_374_cse
            , (land_lpi_1_dfm_1 | not_tmp_417)}, main_stage_0_2))}, stop_rsc_mgc_in_wire_d)))
            , (stop_rsc_mgc_in_wire_d | (MUX_s_1_2_2({(MUX_s_1_2_2({nor_374_cse ,
            or_tmp_89}, if_acc_itm[31])) , (land_lpi_1_dfm_1 | (MUX_s_1_2_2({not_tmp_417
            , (else_land_lpi_1_dfm_2 | else_else_or_itm_1 | (~ (MUX_s_1_2_2({(~(else_else_else_switch_lp_and_31_itm_1
            | (MUX_s_1_2_2({mux_tmp_1397 , (cur_stateIN_sva_dfm_25 | (MUX_s_1_2_2({(MUX_s_1_2_2({mux_tmp_1397
            , (MUX_s_1_2_2({(or_tmp_79 | not_tmp_408) , (MUX_s_1_2_2({or_tmp_939
            , or_tmp_934}, cur_stateIN_sva_dfm_18_sg1))}, else_else_else_switch_lp_and_17_itm_1))},
            cur_stateIN_sva_dfm_18_sg2)) , mux_tmp_1392}, cur_stateIN_sva_dfm_18_sg1)))},
            else_else_else_switch_lp_and_15_itm_1)))) , mux_tmp_1375}, else_else_else_switch_lp_and_27_itm_1))))},
            if_acc_itm[31])))}, main_stage_0_2)))}, start_rsc_mgc_in_wire_d));
        else_else_else_right_sum_1_sva <= MUX_v_30_2_2({sum_rsc_mgc_in_wire_d , else_else_else_right_sum_1_sva},
            mux_tmp_1374 | or_dcpl_11 | (~ (else_else_else_case_6_else_if_acc_1_itm[24])));
      end
    end
  end

  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function [29:0] MUX_v_30_2_2;
    input [59:0] inputs;
    input [0:0] sel;
    reg [29:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[59:30];
      end
      1'b1 : begin
        result = inputs[29:0];
      end
      default : begin
        result = inputs[59:30];
      end
    endcase
    MUX_v_30_2_2 = result;
  end
  endfunction


  function [16:0] readslicef_19_17_2;
    input [18:0] vector;
    reg [18:0] tmp;
  begin
    tmp = vector >> 2;
    readslicef_19_17_2 = tmp[16:0];
  end
  endfunction


  function [29:0] signext_30_1;
    input [0:0] vector;
  begin
    signext_30_1= {{29{vector[0]}}, vector};
  end
  endfunction


  function [1:0] MUX1HOT_v_2_3_2;
    input [5:0] inputs;
    input [2:0] sel;
    reg [1:0] result;
    integer i;
  begin
    result = inputs[0+:2] & {2{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*2+:2] & {2{sel[i]}});
    MUX1HOT_v_2_3_2 = result;
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [0:0] MUX1HOT_s_1_3_2;
    input [2:0] inputs;
    input [2:0] sel;
    reg [0:0] result;
    integer i;
  begin
    result = inputs[0+:1] & {1{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*1+:1] & {1{sel[i]}});
    MUX1HOT_s_1_3_2 = result;
  end
  endfunction


  function [0:0] MUX1HOT_s_1_4_2;
    input [3:0] inputs;
    input [3:0] sel;
    reg [0:0] result;
    integer i;
  begin
    result = inputs[0+:1] & {1{sel[0]}};
    for( i = 1; i < 4; i = i + 1 )
      result = result | (inputs[i*1+:1] & {1{sel[i]}});
    MUX1HOT_s_1_4_2 = result;
  end
  endfunction


  function [0:0] readslicef_32_1_31;
    input [31:0] vector;
    reg [31:0] tmp;
  begin
    tmp = vector >> 31;
    readslicef_32_1_31 = tmp[0:0];
  end
  endfunction


  function [29:0] readslicef_31_30_1;
    input [30:0] vector;
    reg [30:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_31_30_1 = tmp[29:0];
  end
  endfunction


  function [1:0] MUX_v_2_2_2;
    input [3:0] inputs;
    input [0:0] sel;
    reg [1:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[3:2];
      end
      1'b1 : begin
        result = inputs[1:0];
      end
      default : begin
        result = inputs[3:2];
      end
    endcase
    MUX_v_2_2_2 = result;
  end
  endfunction


  function [2:0] MUX_v_3_2_2;
    input [5:0] inputs;
    input [0:0] sel;
    reg [2:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[5:3];
      end
      1'b1 : begin
        result = inputs[2:0];
      end
      default : begin
        result = inputs[5:3];
      end
    endcase
    MUX_v_3_2_2 = result;
  end
  endfunction


  function [26:0] MUX_v_27_2_2;
    input [53:0] inputs;
    input [0:0] sel;
    reg [26:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[53:27];
      end
      1'b1 : begin
        result = inputs[26:0];
      end
      default : begin
        result = inputs[53:27];
      end
    endcase
    MUX_v_27_2_2 = result;
  end
  endfunction


  function [0:0] readslicef_27_1_26;
    input [26:0] vector;
    reg [26:0] tmp;
  begin
    tmp = vector >> 26;
    readslicef_27_1_26 = tmp[0:0];
  end
  endfunction


  function signed [31:0] conv_u2s_31_32 ;
    input [30:0]  vector ;
  begin
    conv_u2s_31_32 = {1'b0, vector};
  end
  endfunction


  function  [22:0] conv_u2u_22_23 ;
    input [21:0]  vector ;
  begin
    conv_u2u_22_23 = {1'b0, vector};
  end
  endfunction


  function  [18:0] conv_u2u_38_19 ;
    input [37:0]  vector ;
  begin
    conv_u2u_38_19 = vector[18:0];
  end
  endfunction


  function  [18:0] conv_u2u_3_19 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_19 = {{16{1'b0}}, vector};
  end
  endfunction


  function  [24:0] conv_u2u_24_25 ;
    input [23:0]  vector ;
  begin
    conv_u2u_24_25 = {1'b0, vector};
  end
  endfunction


  function  [20:0] conv_u2u_3_21 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_21 = {{18{1'b0}}, vector};
  end
  endfunction


  function signed [31:0] conv_u2s_27_32 ;
    input [26:0]  vector ;
  begin
    conv_u2s_27_32 = {{5{1'b0}}, vector};
  end
  endfunction


  function  [23:0] conv_u2u_3_24 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_24 = {{21{1'b0}}, vector};
  end
  endfunction


  function signed [31:0] conv_u2s_29_32 ;
    input [28:0]  vector ;
  begin
    conv_u2s_29_32 = {{3{1'b0}}, vector};
  end
  endfunction


  function signed [31:0] conv_u2s_28_32 ;
    input [27:0]  vector ;
  begin
    conv_u2s_28_32 = {{4{1'b0}}, vector};
  end
  endfunction


  function  [26:0] conv_u2u_26_27 ;
    input [25:0]  vector ;
  begin
    conv_u2u_26_27 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    rotator
//  Generated from file(s):
//    2) $PROJECT_HOME/rotator.cpp
// ------------------------------------------------------------------


module rotator (
  enablerefocus_rsc_z, slow_rsc_z, start_rsc_z, stop_rsc_z, sum_rsc_z, best_edge_rsc_z,
      motor_state_rsc_z, cur_state_rsc_z, timer_rsc_z, clk, en, arst_n
);
  input enablerefocus_rsc_z;
  input slow_rsc_z;
  input start_rsc_z;
  input stop_rsc_z;
  input [29:0] sum_rsc_z;
  output [29:0] best_edge_rsc_z;
  output [1:0] motor_state_rsc_z;
  output [2:0] cur_state_rsc_z;
  output [29:0] timer_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire enablerefocus_rsc_mgc_in_wire_d;
  wire slow_rsc_mgc_in_wire_d;
  wire start_rsc_mgc_in_wire_d;
  wire stop_rsc_mgc_in_wire_d;
  wire [29:0] sum_rsc_mgc_in_wire_d;
  wire [29:0] best_edge_rsc_mgc_out_stdreg_d;
  wire [1:0] motor_state_rsc_mgc_out_stdreg_d;
  wire [2:0] cur_state_rsc_mgc_out_stdreg_d;
  wire [29:0] timer_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(1)) enablerefocus_rsc_mgc_in_wire (
      .d(enablerefocus_rsc_mgc_in_wire_d),
      .z(enablerefocus_rsc_z)
    );
  mgc_in_wire #(.rscid(2),
  .width(1)) slow_rsc_mgc_in_wire (
      .d(slow_rsc_mgc_in_wire_d),
      .z(slow_rsc_z)
    );
  mgc_in_wire #(.rscid(3),
  .width(1)) start_rsc_mgc_in_wire (
      .d(start_rsc_mgc_in_wire_d),
      .z(start_rsc_z)
    );
  mgc_in_wire #(.rscid(4),
  .width(1)) stop_rsc_mgc_in_wire (
      .d(stop_rsc_mgc_in_wire_d),
      .z(stop_rsc_z)
    );
  mgc_in_wire #(.rscid(5),
  .width(30)) sum_rsc_mgc_in_wire (
      .d(sum_rsc_mgc_in_wire_d),
      .z(sum_rsc_z)
    );
  mgc_out_stdreg #(.rscid(6),
  .width(30)) best_edge_rsc_mgc_out_stdreg (
      .d(best_edge_rsc_mgc_out_stdreg_d),
      .z(best_edge_rsc_z)
    );
  mgc_out_stdreg #(.rscid(7),
  .width(2)) motor_state_rsc_mgc_out_stdreg (
      .d(motor_state_rsc_mgc_out_stdreg_d),
      .z(motor_state_rsc_z)
    );
  mgc_out_stdreg #(.rscid(8),
  .width(3)) cur_state_rsc_mgc_out_stdreg (
      .d(cur_state_rsc_mgc_out_stdreg_d),
      .z(cur_state_rsc_z)
    );
  mgc_out_stdreg #(.rscid(9),
  .width(30)) timer_rsc_mgc_out_stdreg (
      .d(timer_rsc_mgc_out_stdreg_d),
      .z(timer_rsc_z)
    );
  rotator_core rotator_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .enablerefocus_rsc_mgc_in_wire_d(enablerefocus_rsc_mgc_in_wire_d),
      .slow_rsc_mgc_in_wire_d(slow_rsc_mgc_in_wire_d),
      .start_rsc_mgc_in_wire_d(start_rsc_mgc_in_wire_d),
      .stop_rsc_mgc_in_wire_d(stop_rsc_mgc_in_wire_d),
      .sum_rsc_mgc_in_wire_d(sum_rsc_mgc_in_wire_d),
      .best_edge_rsc_mgc_out_stdreg_d(best_edge_rsc_mgc_out_stdreg_d),
      .motor_state_rsc_mgc_out_stdreg_d(motor_state_rsc_mgc_out_stdreg_d),
      .cur_state_rsc_mgc_out_stdreg_d(cur_state_rsc_mgc_out_stdreg_d),
      .timer_rsc_mgc_out_stdreg_d(timer_rsc_mgc_out_stdreg_d)
    );
endmodule



