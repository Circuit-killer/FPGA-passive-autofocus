// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   fyq14@EEWS104A-028
//  Generated date: Fri May 08 13:40:31 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    pixel_corrector_core
// ------------------------------------------------------------------


module pixel_corrector_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [29:0] vin_rsc_mgc_in_wire_d;
  output [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  reg [9:0] reg_vout_rsc_mgc_out_stdreg_d_tmp;
  reg [9:0] reg_vout_rsc_mgc_out_stdreg_d_tmp_1;
  reg [9:0] reg_vout_rsc_mgc_out_stdreg_d_tmp_2;
  wire [10:0] get_value_acc_psp_sva;
  wire [11:0] nl_get_value_acc_psp_sva;
  wire [10:0] get_value_1_acc_psp_sva;
  wire [11:0] nl_get_value_1_acc_psp_sva;
  wire [10:0] get_value_2_acc_psp_sva;
  wire [11:0] nl_get_value_2_acc_psp_sva;


  // Interconnect Declarations for Component Instantiations 
  assign vout_rsc_mgc_out_stdreg_d = {reg_vout_rsc_mgc_out_stdreg_d_tmp , reg_vout_rsc_mgc_out_stdreg_d_tmp_1
      , reg_vout_rsc_mgc_out_stdreg_d_tmp_2};
  assign nl_get_value_acc_psp_sva = conv_u2u_5_11(readslicef_6_5_1((conv_u2u_5_6({(vin_rsc_mgc_in_wire_d[23])
      , 1'b0 , (signext_2_1(vin_rsc_mgc_in_wire_d[23])) , 1'b1}) + conv_u2u_4_6({(vin_rsc_mgc_in_wire_d[22:20])
      , (vin_rsc_mgc_in_wire_d[22])})))) + conv_u2u_22_11(conv_u2u_6_11(vin_rsc_mgc_in_wire_d[29:24])
      * 11'b10111);
  assign get_value_acc_psp_sva = nl_get_value_acc_psp_sva[10:0];
  assign nl_get_value_1_acc_psp_sva = conv_u2u_5_11(readslicef_6_5_1((conv_u2u_5_6({(vin_rsc_mgc_in_wire_d[13])
      , 1'b0 , (signext_2_1(vin_rsc_mgc_in_wire_d[13])) , 1'b1}) + conv_u2u_4_6({(vin_rsc_mgc_in_wire_d[12:10])
      , (vin_rsc_mgc_in_wire_d[12])})))) + conv_u2u_22_11(conv_u2u_6_11(vin_rsc_mgc_in_wire_d[19:14])
      * 11'b10111);
  assign get_value_1_acc_psp_sva = nl_get_value_1_acc_psp_sva[10:0];
  assign nl_get_value_2_acc_psp_sva = conv_u2u_5_11(readslicef_6_5_1((conv_u2u_5_6({(vin_rsc_mgc_in_wire_d[3])
      , 1'b0 , (signext_2_1(vin_rsc_mgc_in_wire_d[3])) , 1'b1}) + conv_u2u_4_6({(vin_rsc_mgc_in_wire_d[2:0])
      , (vin_rsc_mgc_in_wire_d[2])})))) + conv_u2u_22_11(conv_u2u_6_11(vin_rsc_mgc_in_wire_d[9:4])
      * 11'b10111);
  assign get_value_2_acc_psp_sva = nl_get_value_2_acc_psp_sva[10:0];
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      reg_vout_rsc_mgc_out_stdreg_d_tmp <= 10'b0;
      reg_vout_rsc_mgc_out_stdreg_d_tmp_1 <= 10'b0;
      reg_vout_rsc_mgc_out_stdreg_d_tmp_2 <= 10'b0;
    end
    else begin
      if ( en ) begin
        reg_vout_rsc_mgc_out_stdreg_d_tmp <= (get_value_acc_psp_sva[9:0]) | (signext_10_1(~
            (readslicef_11_1_10((get_value_acc_psp_sva + 11'b10000000001)))));
        reg_vout_rsc_mgc_out_stdreg_d_tmp_1 <= (get_value_1_acc_psp_sva[9:0]) | (signext_10_1(~
            (readslicef_11_1_10((get_value_1_acc_psp_sva + 11'b10000000001)))));
        reg_vout_rsc_mgc_out_stdreg_d_tmp_2 <= (get_value_2_acc_psp_sva[9:0]) | (signext_10_1(~
            (readslicef_11_1_10((get_value_2_acc_psp_sva + 11'b10000000001)))));
      end
    end
  end

  function [4:0] readslicef_6_5_1;
    input [5:0] vector;
    reg [5:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_6_5_1 = tmp[4:0];
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [0:0] readslicef_11_1_10;
    input [10:0] vector;
    reg [10:0] tmp;
  begin
    tmp = vector >> 10;
    readslicef_11_1_10 = tmp[0:0];
  end
  endfunction


  function [9:0] signext_10_1;
    input [0:0] vector;
  begin
    signext_10_1= {{9{vector[0]}}, vector};
  end
  endfunction


  function  [10:0] conv_u2u_5_11 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_11 = {{6{1'b0}}, vector};
  end
  endfunction


  function  [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function  [5:0] conv_u2u_4_6 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_6 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [10:0] conv_u2u_22_11 ;
    input [21:0]  vector ;
  begin
    conv_u2u_22_11 = vector[10:0];
  end
  endfunction


  function  [10:0] conv_u2u_6_11 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_11 = {{5{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    pixel_corrector
//  Generated from file(s):
//    3) $PROJECT_HOME/pixel_corrector.c
// ------------------------------------------------------------------


module pixel_corrector (
  vin_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [29:0] vin_rsc_z;
  output [29:0] vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [29:0] vin_rsc_mgc_in_wire_d;
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(30)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  pixel_corrector_core pixel_corrector_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



